#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Radiomechanics Server –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ä–∞–¥–∏–æ—á–∞—Å—Ç–æ—Ç–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤
"""

from flask import Flask, request, jsonify
import logging
from datetime import datetime

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

app = Flask(__name__)

@app.route('/api/health', methods=['GET'])
def health_check():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–µ—Ä–≤–µ—Ä–∞"""
    return jsonify({
        'status': 'healthy',
        'service': 'Radiomechanics Server',
        'port': 8089,
        'timestamp': datetime.now().isoformat(),
        'version': '1.0.0'
    })

@app.route('/api/chat', methods=['GET', 'POST'])
def chat():
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–∞–¥–∏–æ—á–∞—Å—Ç–æ—Ç–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤"""
    try:
        if request.method == 'GET':
            message = request.args.get('message', '')
        else:
            data = request.get_json()
            message = data.get('message', '')
        
        logger.info(f"üì° –ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å —Ä–∞–¥–∏–æ–º–µ—Ö–∞–Ω–∏–∫–∏: {message[:50]}...")
        
        # –ü—Ä–æ—Å—Ç–∞—è –ª–æ–≥–∏–∫–∞ –æ—Ç–≤–µ—Ç–æ–≤
        response = "üì° **Radiomechanics Server:**\n\n"
        response += f"**–ó–∞–ø—Ä–æ—Å:** {message}\n\n"
        
        if any(word in message.lower() for word in ['–∞–Ω—Ç–µ–Ω–Ω–∞', 'antenna']):
            response += "**–ê–Ω—Ç–µ–Ω–Ω—ã:**\n"
            response += "- –î–∏–ø–æ–ª—å–Ω–∞—è –∞–Ω—Ç–µ–Ω–Ω–∞: Œª/2\n"
            response += "- –ú–æ–Ω–æ–ø–æ–ª—å–Ω–∞—è –∞–Ω—Ç–µ–Ω–Ω–∞: Œª/4\n"
            response += "- –°–ø–∏—Ä–∞–ª—å–Ω–∞—è –∞–Ω—Ç–µ–Ω–Ω–∞: –¥–ª—è –∫—Ä—É–≥–æ–≤–æ–π –ø–æ–ª—è—Ä–∏–∑–∞—Ü–∏–∏\n"
        
        elif any(word in message.lower() for word in ['—Å–∏–≥–Ω–∞–ª', 'signal']):
            response += "**–û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–∏–≥–Ω–∞–ª–æ–≤:**\n"
            response += "- –ê–º–ø–ª–∏—Ç—É–¥–Ω–∞—è –º–æ–¥—É–ª—è—Ü–∏—è (AM)\n"
            response += "- –ß–∞—Å—Ç–æ—Ç–Ω–∞—è –º–æ–¥—É–ª—è—Ü–∏—è (FM)\n"
            response += "- –§–∞–∑–æ–≤–∞—è –º–æ–¥—É–ª—è—Ü–∏—è (PM)\n"
        
        elif any(word in message.lower() for word in ['—á–∞—Å—Ç–æ—Ç–∞', 'frequency']):
            response += "**–ß–∞—Å—Ç–æ—Ç–Ω—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏:**\n"
            response += "- –ù–∏–∑–∫–∏–µ —á–∞—Å—Ç–æ—Ç—ã: 30-300 –∫–ì—Ü\n"
            response += "- –°—Ä–µ–¥–Ω–∏–µ —á–∞—Å—Ç–æ—Ç—ã: 300 –∫–ì—Ü - 3 –ú–ì—Ü\n"
            response += "- –í—ã—Å–æ–∫–∏–µ —á–∞—Å—Ç–æ—Ç—ã: 3-30 –ú–ì—Ü\n"
        
        else:
            response += "**–û–±—â–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:**\n"
            response += "- –†–∞–¥–∏–æ–≤–æ–ª–Ω—ã: —ç–ª–µ–∫—Ç—Ä–æ–º–∞–≥–Ω–∏—Ç–Ω—ã–µ –≤–æ–ª–Ω—ã\n"
            response += "- –°–∫–æ—Ä–æ—Å—Ç—å —Å–≤–µ—Ç–∞: c = 3√ó10‚Å∏ –º/—Å\n"
            response += "- –§–æ—Ä–º—É–ª–∞: Œª = c/f\n"
        
        return jsonify({
            'status': 'success',
            'response': response,
            'service': 'radiomechanics',
            'timestamp': datetime.now().isoformat()
        })
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–ø—Ä–æ—Å–∞: {e}")
        return jsonify({
            'status': 'error',
            'error': str(e)
        }), 500

if __name__ == '__main__':
    print("üì° Radiomechanics Server –∑–∞–ø—É—â–µ–Ω")
    print("URL: http://localhost:8089")
    print("–î–æ—Å—Ç—É–ø–Ω—ã–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã:")
    print("  - GET/POST /api/chat - –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–∞–¥–∏–æ—á–∞—Å—Ç–æ—Ç–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤")
    print("  - GET /api/health - –ø—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è")
    print("=" * 60)
    app.run(host='0.0.0.0', port=8089, debug=False)