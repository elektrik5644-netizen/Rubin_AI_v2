#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
System Utils Server –¥–ª—è —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —É—Ç–∏–ª–∏—Ç
"""

from flask import Flask, request, jsonify
import logging
from datetime import datetime
import psutil
import os

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

app = Flask(__name__)

@app.route('/api/health', methods=['GET'])
def health_check():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–µ—Ä–≤–µ—Ä–∞"""
    return jsonify({
        'status': 'healthy',
        'service': 'System Utils Server',
        'port': 8103,
        'timestamp': datetime.now().isoformat(),
        'version': '1.0.0'
    })

@app.route('/api/system/utils', methods=['GET', 'POST'])
def system_utils():
    """–°–∏—Å—Ç–µ–º–Ω—ã–µ —É—Ç–∏–ª–∏—Ç—ã"""
    try:
        if request.method == 'GET':
            action = request.args.get('action', 'status')
        else:
            data = request.get_json()
            action = data.get('action', 'status')
        
        logger.info(f"üîß –ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —É—Ç–∏–ª–∏—Ç: {action}")
        
        result = {
            'status': 'success',
            'action': action,
            'system_info': {},
            'service': 'system_utils',
            'timestamp': datetime.now().isoformat()
        }
        
        if action == 'status':
            # –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
            result['system_info'] = {
                'cpu_percent': psutil.cpu_percent(interval=1),
                'memory_percent': psutil.virtual_memory().percent,
                'disk_usage': psutil.disk_usage('/').percent if os.name != 'nt' else psutil.disk_usage('C:').percent,
                'process_count': len(psutil.pids()),
                'uptime': 'N/A'  # –£–ø—Ä–æ—â–µ–Ω–Ω–æ
            }
        
        elif action == 'processes':
            # –°–ø–∏—Å–æ–∫ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
            processes = []
            for proc in psutil.process_iter(['pid', 'name', 'cpu_percent', 'memory_percent']):
                try:
                    processes.append(proc.info)
                except (psutil.NoSuchProcess, psutil.AccessDenied):
                    pass
            
            result['system_info'] = {
                'processes': processes[:10],  # –ü–µ—Ä–≤—ã–µ 10 –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
                'total_processes': len(processes)
            }
        
        elif action == 'cleanup':
            # –û—á–∏—Å—Ç–∫–∞ (–∏–º–∏—Ç–∞—Ü–∏—è)
            result['system_info'] = {
                'cleanup_performed': True,
                'freed_space': 'N/A',
                'cleaned_files': 0
            }
        
        else:
            result['system_info'] = {
                'available_actions': ['status', 'processes', 'cleanup'],
                'description': '–°–∏—Å—Ç–µ–º–Ω—ã–µ —É—Ç–∏–ª–∏—Ç—ã –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∏ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è'
            }
        
        return jsonify(result)
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —É—Ç–∏–ª–∏—Ç: {e}")
        return jsonify({
            'status': 'error',
            'error': str(e)
        }), 500

if __name__ == '__main__':
    print("üîß System Utils Server –∑–∞–ø—É—â–µ–Ω")
    print("URL: http://localhost:8103")
    print("–î–æ—Å—Ç—É–ø–Ω—ã–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã:")
    print("  - GET/POST /api/system/utils - —Å–∏—Å—Ç–µ–º–Ω—ã–µ —É—Ç–∏–ª–∏—Ç—ã")
    print("  - GET /api/health - –ø—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è")
    print("=" * 60)
    app.run(host='0.0.0.0', port=8103, debug=False)