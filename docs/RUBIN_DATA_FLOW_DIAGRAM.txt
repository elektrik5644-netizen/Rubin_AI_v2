БЛОК-СХЕМА ПОТОКОВ ДАННЫХ RUBIN IDE
====================================

ОСНОВНОЙ ПОТОК ОБРАБОТКИ ЗАПРОСА
================================

┌─────────────┐
│ Пользователь │
└──────┬──────┘
       │ 1. Отправляет запрос
       ▼
┌─────────────┐
│ Веб-интерфейс│
│ (RubinIDE.html)│
└──────┬──────┘
       │ 2. Определяет модуль
       ▼
┌─────────────┐
│ Intelligent │
│ Dispatcher  │
└──────┬──────┘
       │ 3. Маршрутизация
       ▼
┌─────────────┐    ┌─────────────┐    ┌─────────────┐
│ AI Chat API │    │ Electrical  │    │ Radiomech   │
│ (8086)      │    │ API (8087)  │    │ API (8089)  │
└──────┬──────┘    └──────┬──────┘    └──────┬──────┘
       │                  │                  │
       ▼                  ▼                  ▼
┌─────────────┐    ┌─────────────┐    ┌─────────────┐
│ Python      │    │ Python      │    │ Python      │
│ обработка   │    │ обработка   │    │ обработка   │
└──────┬──────┘    └──────┬──────┘    └──────┬──────┘
       │                  │                  │
       ▼                  ▼                  ▼
┌─────────────┐    ┌─────────────┐    ┌─────────────┐
│ База знаний │    │ База знаний │    │ База знаний │
│ (SQLite +   │    │ (SQLite +   │    │ (SQLite +   │
│ Qdrant)     │    │ Qdrant)     │    │ Qdrant)     │
└──────┬──────┘    └──────┬──────┘    └──────┬──────┘
       │                  │                  │
       ▼                  ▼                  ▼
┌─────────────┐    ┌─────────────┐    ┌─────────────┐
│ AI провайдер│    │ AI провайдер│    │ AI провайдер│
│ (OpenRouter)│    │ (OpenRouter)│    │ (OpenRouter)│
└──────┬──────┘    └──────┬──────┘    └──────┬──────┘
       │                  │                  │
       ▼                  ▼                  ▼
┌─────────────┐    ┌─────────────┐    ┌─────────────┐
│ Формирование│    │ Формирование│    │ Формирование│
│ ответа      │    │ ответа      │    │ ответа      │
└──────┬──────┘    └──────┬──────┘    └──────┬──────┘
       │                  │                  │
       ▼                  ▼                  ▼
┌─────────────┐    ┌─────────────┐    ┌─────────────┐
│ Возврат     │    │ Возврат     │    │ Возврат     │
│ ответа      │    │ ответа      │    │ ответа      │
└──────┬──────┘    └──────┬──────┘    └──────┬──────┘
       │                  │                  │
       ▼                  ▼                  ▼
┌─────────────┐
│ Веб-интерфейс│
│ (Отображение)│
└──────┬──────┘
       │
       ▼
┌─────────────┐
│ Пользователь │
└─────────────┘

ПОТОК ДИАГНОСТИКИ PMAC
======================

┌─────────────┐
│ PMAC        │
│ контроллер  │
└──────┬──────┘
       │ 1. Данные с датчиков
       ▼
┌─────────────┐
│ PMAC        │
│ Interface   │
│ (COM)       │
└──────┬──────┘
       │ 2. Обработка данных
       ▼
┌─────────────┐
│ Health      │
│ Checker     │
└──────┬──────┘
       │ 3. Анализ состояния
       ▼
┌─────────────┐
│ Controller  │
│ Diagnostics │
└──────┬──────┘
       │ 4. Проверка параметров
       ▼
┌─────────────┐
│ Diagnostics │
│ API (8093)  │
└──────┬──────┘
       │ 5. Формирование отчета
       ▼
┌─────────────┐
│ Monitoring  │
│ System      │
└──────┬──────┘
       │ 6. Обновление статуса
       ▼
┌─────────────┐
│ Веб-интерфейс│
│ (Графики)   │
└──────┬──────┘
       │ 7. Отображение данных
       ▼
┌─────────────┐
│ Пользователь │
└─────────────┘

ПОТОК СИНХРОНИЗАЦИИ YANDEX DISK
===============================

┌─────────────┐
│ YandexDisk  │
│ (C:\Users\  │
│ elekt\      │
│ YandexDisk) │
└──────┬──────┘
       │ 1. Сканирование файлов
       ▼
┌─────────────┐
│ YandexDisk  │
│ Connector   │
└──────┬──────┘
       │ 2. Проверка изменений
       ▼
┌─────────────┐
│ Извлечение  │
│ текста      │
│ (PDF, DOC)  │
└──────┬──────┘
       │ 3. Обработка документов
       ▼
┌─────────────┐
│ Категоризация│
│ документов  │
└──────┬──────┘
       │ 4. Определение типа
       ▼
┌─────────────┐
│ YandexDisk  │
│ API (8094)  │
└──────┬──────┘
       │ 5. Отправка в Rubin AI
       ▼
┌─────────────┐
│ База знаний │
│ (SQLite +   │
│ Qdrant)     │
└──────┬──────┘
       │ 6. Сохранение и индексация
       ▼
┌─────────────┐
│ AI анализ   │
│ и поиск     │
└─────────────┘

ПОТОК ЧАТ-БОТА
==============

┌─────────────┐
│ Пользователь │
└──────┬──────┘
       │ 1. Отправляет сообщение
       ▼
┌─────────────┐
│ Веб-интерфейс│
│ чата        │
└──────┬──────┘
       │ 2. Определение домена
       ▼
┌─────────────┐
│ AI Chat API │
│ (8086)      │
└──────┬──────┘
       │ 3. Обработка запроса
       ▼
┌─────────────┐
│ Context     │
│ Manager     │
└──────┬──────┘
       │ 4. Анализ контекста
       ▼
┌─────────────┐
│ C++         │
│ ChatManager │
└──────┬──────┘
       │ 5. Интеграция с AI
       ▼
┌─────────────┐
│ AI провайдер│
│ (OpenRouter)│
└──────┬──────┘
       │ 6. Генерация ответа
       ▼
┌─────────────┐
│ Сохранение  │
│ в историю   │
└──────┬──────┘
       │ 7. Обновление контекста
       ▼
┌─────────────┐
│ Возврат     │
│ ответа      │
└──────┬──────┘
       │ 8. Отображение в чате
       ▼
┌─────────────┐
│ Пользователь │
└─────────────┘

АРХИТЕКТУРА БАЗЫ ЗНАНИЙ
=======================

┌─────────────┐
│ Документы   │
│ (PDF, DOC,  │
│ TXT, MD)    │
└──────┬──────┘
       │
       ▼
┌─────────────┐
│ Извлечение  │
│ текста      │
└──────┬──────┘
       │
       ▼
┌─────────────┐    ┌─────────────┐
│ SQLite      │    │ Qdrant      │
│ (Структури- │    │ (Векторная  │
│ рованные    │    │  база       │
│ данные)     │    │  данных)    │
└──────┬──────┘    └──────┬──────┘
       │                  │
       ▼                  ▼
┌─────────────┐    ┌─────────────┐
│ Метаданные  │    │ Эмбеддинги  │
│ и теги      │    │ для поиска  │
└──────┬──────┘    └──────┬──────┘
       │                  │
       ▼                  ▼
┌─────────────────────────────────┐
│        AI анализ и поиск        │
└─────────────────────────────────┘

СИСТЕМА МОНИТОРИНГА
===================

┌─────────────┐
│ PMAC        │
│ контроллер  │
└──────┬──────┘
       │
       ▼
┌─────────────┐
│ Датчики     │
│ (температура│
│ напряжение, │
│ ток)        │
└──────┬──────┘
       │
       ▼
┌─────────────┐
│ Сбор данных │
│ (100-500мс) │
└──────┬──────┘
       │
       ▼
┌─────────────┐
│ Анализ      │
│ состояния   │
└──────┬──────┘
       │
       ▼
┌─────────────┐
│ Проверка    │
│ порогов     │
└──────┬──────┘
       │
       ▼
┌─────────────┐
│ Уведомления │
│ и алерты    │
└──────┬──────┘
       │
       ▼
┌─────────────┐
│ Веб-интерфейс│
│ (Графики)   │
└─────────────┘

ИНТЕГРАЦИЯ КОМПОНЕНТОВ
======================

┌─────────────┐    ┌─────────────┐    ┌─────────────┐
│ Веб-интерфейс│    │ Python API  │    │ C++ ядро    │
│ (Frontend)  │◀──▶│ (Backend)   │◀──▶│ (Core)      │
└─────────────┘    └─────────────┘    └─────────────┘
       │                  │                  │
       ▼                  ▼                  ▼
┌─────────────┐    ┌─────────────┐    ┌─────────────┐
│ JavaScript  │    │ Flask       │    │ Kernel      │
│ HTML/CSS    │    │ серверы     │    │ Manager     │
└─────────────┘    └─────────────┘    └─────────────┘
       │                  │                  │
       ▼                  ▼                  ▼
┌─────────────┐    ┌─────────────┐    ┌─────────────┐
│ AJAX запросы│    │ REST API    │    │ COM интерфейс│
│ JSON ответы │    │ JSON данные │    │ PMAC        │
└─────────────┘    └─────────────┘    └─────────────┘

ОБРАБОТКА ОШИБОК
================

┌─────────────┐
│ Ошибка      │
│ обнаружена  │
└──────┬──────┘
       │
       ▼
┌─────────────┐
│ Логирование │
│ (Logger.cpp)│
└──────┬──────┘
       │
       ▼
┌─────────────┐
│ Классификация│
│ ошибки      │
└──────┬──────┘
       │
       ▼
┌─────────────┐    ┌─────────────┐    ┌─────────────┐
│ Критическая │    │ Предупреждение│    │ Информация  │
│ ошибка      │    │             │    │             │
└──────┬──────┘    └──────┬──────┘    └──────┬──────┘
       │                  │                  │
       ▼                  ▼                  ▼
┌─────────────┐    ┌─────────────┐    ┌─────────────┐
│ Аварийный   │    │ Уведомление │    │ Логирование │
│ останов     │    │ пользователя│    │ в файл      │
└─────────────┘    └─────────────┘    └─────────────┘

СИСТЕМА БЕЗОПАСНОСТИ
====================

┌─────────────┐
│ Пользователь │
└──────┬──────┘
       │ 1. Запрос доступа
       ▼
┌─────────────┐
│ Аутентификация│
│ (пока не     │
│ реализована) │
└──────┬──────┘
       │ 2. Проверка прав
       ▼
┌─────────────┐
│ Авторизация │
│ (пока не     │
│ реализована) │
└──────┬──────┘
       │ 3. Контроль доступа
       ▼
┌─────────────┐
│ Безопасные  │
│ операции    │
└──────┬──────┘
       │ 4. Аудит действий
       ▼
┌─────────────┐
│ Логирование │
│ безопасности│
└─────────────┘

Дата создания: 10.09.2025
Версия: Rubin IDE v1 "Ломовая лошадка"
Тип: Блок-схема потоков данных
