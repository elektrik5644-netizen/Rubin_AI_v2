ДЕТАЛЬНАЯ СХЕМА ФУНКЦИЙ RUBIN IDE
==================================

СИСТЕМНАЯ АРХИТЕКТУРА
=====================

┌─────────────────────────────────────────────────────────────────────────────────────────────────┐
│                                    ПОЛЬЗОВАТЕЛЬСКИЙ СЛОЙ                                      │
├─────────────────────────────────────────────────────────────────────────────────────────────────┤
│  🌐 ВЕБ-ИНТЕРФЕЙСЫ                                                                             │
│  ┌─────────────────────────────────────────────────────────────────────────────────────────────┐│
│  │ RubinIDE.html (Основная IDE)                                                               ││
│  │ • Редактор кода с подсветкой синтаксиса                                                    ││
│  │ • Автодополнение и IntelliSense                                                            ││
│  │ • Проверка синтаксиса в реальном времени                                                   ││
│  │ • Интегрированный чат-бот                                                                  ││
│  │ • Панель диагностики PMAC                                                                  ││
│  │ • Графики и визуализация данных                                                            ││
│  │ • Управление проектами                                                                     ││
│  │ • Интеграция с базой знаний                                                                ││
│  └─────────────────────────────────────────────────────────────────────────────────────────────┘│
│  ┌─────────────────────────────────────────────────────────────────────────────────────────────┐│
│  │ RubinDeveloper.html (Режим разработчика)                                                   ││
│  │ • Расширенные инструменты отладки                                                          ││
│  │ • Профилировщик производительности                                                         ││
│  │ • Анализ памяти и ресурсов                                                                 ││
│  │ • Логирование и мониторинг                                                                 ││
│  │ • Тестирование и валидация                                                                 ││
│  │ • Управление конфигурацией                                                                 ││
│  └─────────────────────────────────────────────────────────────────────────────────────────────┘│
│  ┌─────────────────────────────────────────────────────────────────────────────────────────────┐│
│  │ test_chat.html (Тестирование чата)                                                         ││
│  │ • Интерфейс для тестирования AI чата                                                       ││
│  │ • Отправка сообщений и получение ответов                                                   ││
│  │ • Тестирование различных доменов                                                           ││
│  │ • Анализ качества ответов                                                                  ││
│  │ • Логирование диалогов                                                                     ││
│  └─────────────────────────────────────────────────────────────────────────────────────────────┘│
│  ┌─────────────────────────────────────────────────────────────────────────────────────────────┐│
│  │ yandex_disk_web.html (Управление YandexDisk)                                               ││
│  │ • Мониторинг синхронизации                                                                 ││
│  │ • Просмотр обработанных файлов                                                             ││
│  │ • Управление настройками                                                                   ││
│  │ • Статистика обработки                                                                     ││
│  │ • Ручной запуск синхронизации                                                              ││
│  └─────────────────────────────────────────────────────────────────────────────────────────────┘│
└─────────────────────────────────────────────────────────────────────────────────────────────────┘
                                                    │
┌─────────────────────────────────────────────────────────────────────────────────────────────────┐
│                                      API СЛОЙ                                                 │
├─────────────────────────────────────────────────────────────────────────────────────────────────┤
│  🚀 ОСНОВНЫЕ API СЕРВЕРЫ                                                                       │
│  ┌─────────────────────────────────────────────────────────────────────────────────────────────┐│
│  │ rubin_simple_api.py (Порт 8083) - Основной API                                            ││
│  │ • Обработка базовых запросов                                                               ││
│  │ • Управление сессиями                                                                      ││
│  │ • Аутентификация (планируется)                                                             ││
│  │ • Логирование запросов                                                                     ││
│  │ • Кэширование ответов                                                                      ││
│  │ • Обработка ошибок                                                                         ││
│  │ • Валидация входных данных                                                                 ││
│  │ • Форматирование ответов                                                                   ││
│  └─────────────────────────────────────────────────────────────────────────────────────────────┘│
│  ┌─────────────────────────────────────────────────────────────────────────────────────────────┐│
│  │ rubin_ai_chat_api.py (Порт 8086) - AI Чат                                                 ││
│  │ • Обработка сообщений пользователя                                                         ││
│  │ • Определение домена (программирование, электротехника, радиомеханика)                    ││
│  │ • Интеграция с AI провайдерами                                                             ││
│  │ • Управление контекстом диалога                                                            ││
│  │ • Сохранение истории чата                                                                  ││
│  │ • Генерация ответов                                                                        ││
│  │ • Обработка ошибок AI                                                                      ││
│  │ • Fallback на альтернативные провайдеры                                                    ││
│  └─────────────────────────────────────────────────────────────────────────────────────────────┘│
│  ┌─────────────────────────────────────────────────────────────────────────────────────────────┐│
│  │ rubin_electrical_api.py (Порт 8087) - Электротехника                                      ││
│  │ • Расчеты электрических цепей                                                              ││
│  │ • Анализ схем                                                                              ││
│  │ • Расчет параметров компонентов                                                            ││
│  │ • Проверка безопасности                                                                    ││
│  │ • Генерация отчетов                                                                        ││
│  │ • Интеграция с базой знаний                                                                ││
│  │ • Валидация расчетов                                                                       ││
│  │ • Экспорт результатов                                                                      ││
│  └─────────────────────────────────────────────────────────────────────────────────────────────┘│
│  ┌─────────────────────────────────────────────────────────────────────────────────────────────┐│
│  │ rubin_radiomechanics_api.py (Порт 8089) - Радиомеханика                                   ││
│  │ • Расчеты антенн                                                                           ││
│  │ • Анализ передатчиков                                                                      ││
│  │ • Расчет частот                                                                            ││
│  │ • Анализ помех                                                                             ││
│  │ • Оптимизация параметров                                                                   ││
│  │ • Генерация технических решений                                                            ││
│  │ • Интеграция с базой знаний                                                                ││
│  │ • Валидация расчетов                                                                       ││
│  └─────────────────────────────────────────────────────────────────────────────────────────────┘│
│  ┌─────────────────────────────────────────────────────────────────────────────────────────────┐│
│  │ rubin_controllers_api.py (Порт 8090) - Контроллеры                                        ││
│  │ • Управление PMAC контроллерами                                                            ││
│  │ • Отправка команд                                                                          ││
│  │ • Получение данных                                                                         ││
│  │ • Мониторинг состояния                                                                     ││
│  │ • Диагностика ошибок                                                                       ││
│  │ • Калибровка параметров                                                                    ││
│  │ • Логирование операций                                                                     ││
│  │ • Управление конфигурацией                                                                 ││
│  └─────────────────────────────────────────────────────────────────────────────────────────────┘│
│  ┌─────────────────────────────────────────────────────────────────────────────────────────────┐│
│  │ rubin_diagnostics_api.py (Порт 8093) - Диагностика                                        ││
│  │ • Мониторинг системы                                                                       ││
│  │ • Анализ производительности                                                                ││
│  │ • Обнаружение ошибок                                                                       ││
│  │ • Генерация отчетов                                                                        ││
│  │ • Алерты и уведомления                                                                     ││
│  │ • Анализ логов                                                                             ││
│  │ • Профилирование                                                                           ││
│  │ • Рекомендации по оптимизации                                                              ││
│  └─────────────────────────────────────────────────────────────────────────────────────────────┘│
│  ┌─────────────────────────────────────────────────────────────────────────────────────────────┐│
│  │ yandex_disk_api.py (Порт 8094) - YandexDisk                                               ││
│  │ • Синхронизация файлов                                                                     ││
│  │ • Извлечение текста                                                                        ││
│  │ • Категоризация документов                                                                 ││
│  │ • Добавление в базу знаний                                                                 ││
│  │ • Мониторинг изменений                                                                     ││
│  │ • Управление версиями                                                                      ││
│  │ • Обработка ошибок                                                                         ││
│  │ • Статистика обработки                                                                     ││
│  └─────────────────────────────────────────────────────────────────────────────────────────────┘│
└─────────────────────────────────────────────────────────────────────────────────────────────────┘
                                                    │
┌─────────────────────────────────────────────────────────────────────────────────────────────────┐
│                                    ЯДРО СИСТЕМЫ (C++)                                        │
├─────────────────────────────────────────────────────────────────────────────────────────────────┤
│  🧠 УПРАВЛЕНИЕ СИСТЕМОЙ                                                                       │
│  ┌─────────────────────────────────────────────────────────────────────────────────────────────┐│
│  │ KernelManager.cpp - Управление ядром                                                       ││
│  │ • Инициализация системы                                                                    ││
│  │ • Управление жизненным циклом                                                              ││
│  │ • Координация модулей                                                                      ││
│  │ • Обработка системных событий                                                              ││
│  │ • Управление ресурсами                                                                     ││
│  │ • Мониторинг состояния                                                                     ││
│  │ • Graceful shutdown                                                                        ││
│  │ • Восстановление после сбоев                                                               ││
│  └─────────────────────────────────────────────────────────────────────────────────────────────┘│
│  ┌─────────────────────────────────────────────────────────────────────────────────────────────┐│
│  │ HealthChecker.cpp - Проверка здоровья                                                     ││
│  │ • Мониторинг компонентов                                                                   ││
│  │ • Проверка доступности                                                                     ││
│  │ • Анализ производительности                                                                ││
│  │ • Обнаружение аномалий                                                                     ││
│  │ • Генерация алертов                                                                        ││
│  │ • Автоматическое восстановление                                                            ││
│  │ • Сбор метрик                                                                              ││
│  │ • Отчеты о состоянии                                                                       ││
│  └─────────────────────────────────────────────────────────────────────────────────────────────┘│
│  ┌─────────────────────────────────────────────────────────────────────────────────────────────┐│
│  │ EventBus.cpp - Шина событий                                                                ││
│  │ • Публикация событий                                                                       ││
│  │ • Подписка на события                                                                      ││
│  │ • Маршрутизация событий                                                                    ││
│  │ • Фильтрация событий                                                                       ││
│  │ • Очереди событий                                                                          ││
│  │ • Обработка ошибок                                                                         ││
│  │ • Мониторинг производительности                                                            ││
│  │ • Логирование событий                                                                      ││
│  └─────────────────────────────────────────────────────────────────────────────────────────────┘│
│  ┌─────────────────────────────────────────────────────────────────────────────────────────────┐│
│  │ Logger.cpp - Система логирования                                                           ││
│  │ • Различные уровни логирования                                                             ││
│  │ • Ротация логов                                                                            ││
│  │ • Фильтрация по компонентам                                                                ││
│  │ • Форматирование сообщений                                                                 ││
│  │ • Асинхронная запись                                                                       ││
│  │ • Сжатие старых логов                                                                      ││
│  │ • Поиск по логам                                                                           ││
│  │ • Экспорт логов                                                                            ││
│  └─────────────────────────────────────────────────────────────────────────────────────────────┘│
│  🏭 ПРОМЫШЛЕННЫЕ ПРОТОКОЛЫ                                                                   │
│  ┌─────────────────────────────────────────────────────────────────────────────────────────────┐│
│  │ PMACComInterface.cpp - COM интерфейс PMAC                                                 ││
│  │ • Установка соединения                                                                     ││
│  │ • Отправка команд                                                                          ││
│  │ • Получение ответов                                                                        ││
│  │ • Обработка ошибок                                                                         ││
│  │ • Управление таймаутами                                                                    ││
│  │ • Переподключение                                                                          ││
│  │ • Мониторинг соединения                                                                    ││
│  │ • Логирование операций                                                                     ││
│  └─────────────────────────────────────────────────────────────────────────────────────────────┘│
│  ┌─────────────────────────────────────────────────────────────────────────────────────────────┐│
│  │ ControllerDiagnostics.cpp - Диагностика контроллеров                                      ││
│  │ • Проверка состояния контроллера                                                           ││
│  │ • Анализ параметров                                                                        ││
│  │ • Обнаружение ошибок                                                                       ││
│  │ • Калибровка                                                                               ││
│  │ • Тестирование функций                                                                     ││
│  │ • Генерация отчетов                                                                        ││
│  │ • Рекомендации по исправлению                                                              ││
│  │ • Мониторинг производительности                                                            ││
│  └─────────────────────────────────────────────────────────────────────────────────────────────┘│
│  ┌─────────────────────────────────────────────────────────────────────────────────────────────┐│
│  │ PMACProtocol.cpp - Протокол PMAC                                                           ││
│  │ • Парсинг команд                                                                           ││
│  │ • Валидация синтаксиса                                                                     ││
│  │ • Обработка ответов                                                                        ││
│  │ • Управление сессиями                                                                      ││
│  │ • Обработка ошибок                                                                         ││
│  │ • Оптимизация команд                                                                       ││
│  │ • Кэширование                                                                              ││
│  │ • Логирование протокола                                                                    ││
│  └─────────────────────────────────────────────────────────────────────────────────────────────┘│
│  ┌─────────────────────────────────────────────────────────────────────────────────────────────┐│
│  │ CNCController.cpp - CNC контроллер                                                         ││
│  │ • Управление осями                                                                         ││
│  │ • Планирование траекторий                                                                  ││
│  │ • Контроль скорости                                                                        ││
│  │ • Обратная связь                                                                           ││
│  │ • Калибровка                                                                               ││
│  │ • Мониторинг состояния                                                                     ││
│  │ • Обработка аварийных ситуаций                                                             ││
│  │ • Логирование операций                                                                     ││
│  └─────────────────────────────────────────────────────────────────────────────────────────────┘│
│  📊 БАЗА ЗНАНИЙ И ДАННЫЕ                                                                     │
│  ┌─────────────────────────────────────────────────────────────────────────────────────────────┐│
│  │ QdrantClient.cpp - Клиент Qdrant                                                           ││
│  │ • Подключение к векторной базе                                                             ││
│  │ • Создание коллекций                                                                       ││
│  │ • Добавление векторов                                                                      ││
│  │ • Поиск по векторам                                                                        ││
│  │ • Управление индексами                                                                     ││
│  │ • Оптимизация запросов                                                                     ││
│  │ • Мониторинг производительности                                                            ││
│  │ • Обработка ошибок                                                                         ││
│  └─────────────────────────────────────────────────────────────────────────────────────────────┘│
│  ┌─────────────────────────────────────────────────────────────────────────────────────────────┐│
│  │ QdrantKnowledgeBase.h - База знаний Qdrant                                                ││
│  │ • Структура базы знаний                                                                    ││
│  │ • Методы поиска                                                                            ││
│  │ • Индексация документов                                                                    ││
│  │ • Управление метаданными                                                                   ││
│  │ • Оптимизация запросов                                                                     ││
│  │ • Кэширование результатов                                                                  ││
│  │ • Мониторинг использования                                                                 ││
│  │ • Анализ качества поиска                                                                   ││
│  └─────────────────────────────────────────────────────────────────────────────────────────────┘│
│  ┌─────────────────────────────────────────────────────────────────────────────────────────────┐│
│  │ KnowledgeBase.cpp - Управление базой знаний                                                ││
│  │ • Добавление документов                                                                    ││
│  │ • Обновление индексов                                                                      ││
│  │ • Поиск информации                                                                         ││
│  │ • Категоризация                                                                           ││
│  │ • Управление версиями                                                                      ││
│  │ • Очистка устаревших данных                                                                ││
│  │ • Экспорт данных                                                                           ││
│  │ • Импорт данных                                                                            ││
│  └─────────────────────────────────────────────────────────────────────────────────────────────┘│
│  🎨 ВИЗУАЛИЗАЦИЯ                                                                             │
│  ┌─────────────────────────────────────────────────────────────────────────────────────────────┐│
│  │ AdvancedChartRenderer.cpp - Продвинутый рендеринг графиков                                ││
│  │ • Рендеринг различных типов графиков                                                       ││
│  │ • Анимация                                                                                 ││
│  │ • Интерактивность                                                                          ││
│  │ • Экспорт в различные форматы                                                              ││
│  │ • Настройка внешнего вида                                                                  ││
│  │ • Оптимизация производительности                                                           ││
│  │ • Поддержка больших данных                                                                 ││
│  │ • Масштабирование                                                                          ││
│  └─────────────────────────────────────────────────────────────────────────────────────────────┘│
│  ┌─────────────────────────────────────────────────────────────────────────────────────────────┐│
│  │ DataVisualizer.h - Визуализация данных                                                     ││
│  │ • Различные типы визуализации                                                              ││
│  │ • Настройка параметров                                                                     ││
│  │ • Фильтрация данных                                                                        ││
│  │ • Экспорт результатов                                                                      ││
│  │ • Сохранение настроек                                                                      ││
│  │ • Шаблоны визуализации                                                                     ││
│  │ • Анимация изменений                                                                       ││
│  │ • Сравнение данных                                                                         ││
│  └─────────────────────────────────────────────────────────────────────────────────────────────┘│
│  ┌─────────────────────────────────────────────────────────────────────────────────────────────┐│
│  │ PocoChartRenderer.cpp - Рендеринг с Poco                                                  ││
│  │ • Интеграция с Poco библиотекой                                                            ││
│  │ • Рендеринг графиков                                                                       ││
│  │ • Обработка данных                                                                         ││
│  │ • Оптимизация памяти                                                                       ││
│  │ • Кэширование результатов                                                                  ││
│  │ • Обработка ошибок                                                                         ││
│  │ • Логирование операций                                                                     ││
│  │ • Мониторинг производительности                                                            ││
│  └─────────────────────────────────────────────────────────────────────────────────────────────┘│
│  💬 ЧАТ И AI                                                                                 │
│  ┌─────────────────────────────────────────────────────────────────────────────────────────────┐│
│  │ ChatManager.cpp - Управление чатом                                                         ││
│  │ • Обработка сообщений                                                                      ││
│  │ • Управление контекстом                                                                    ││
│  │ • Интеграция с AI провайдерами                                                             ││
│  │ • Сохранение истории                                                                       ││
│  │ • Обработка ошибок                                                                         ││
│  │ • Fallback на альтернативные провайдеры                                                    ││
│  │ • Мониторинг качества ответов                                                              ││
│  │ • Анализ использования                                                                     ││
│  └─────────────────────────────────────────────────────────────────────────────────────────────┘│
│  ┌─────────────────────────────────────────────────────────────────────────────────────────────┐│
│  │ OpenRouterClient.cpp - Клиент OpenRouter                                                   ││
│  │ • Подключение к OpenRouter API                                                             ││
│  │ • Отправка запросов                                                                        ││
│  │ • Обработка ответов                                                                        ││
│  │ • Управление API ключами                                                                   ││
│  │ • Обработка ошибок                                                                         ││
│  │ • Кэширование запросов                                                                     ││
│  │ • Мониторинг использования                                                                 ││
│  │ • Оптимизация запросов                                                                     ││
│  └─────────────────────────────────────────────────────────────────────────────────────────────┘│
│  ┌─────────────────────────────────────────────────────────────────────────────────────────────┐│
│  │ AIProviderManager.cpp - Управление AI провайдерами                                         ││
│  │ • Управление различными провайдерами                                                       ││
│  │ • Автоматическое переключение                                                              ││
│  │ • Мониторинг доступности                                                                   ││
│  │ • Балансировка нагрузки                                                                    ││
│  │ • Анализ качества ответов                                                                  ││
│  │ • Оптимизация выбора провайдера                                                            ││
│  │ • Логирование использования                                                                ││
│  │ • Статистика производительности                                                            ││
│  └─────────────────────────────────────────────────────────────────────────────────────────────┘│
│  ⚙️ КОНФИГУРАЦИЯ                                                                             │
│  ┌─────────────────────────────────────────────────────────────────────────────────────────────┐│
│  │ ConfigurationManager.cpp - Управление конфигурацией                                        ││
│  │ • Загрузка конфигурации                                                                    ││
│  │ • Валидация настроек                                                                       ││
│  │ • Обновление конфигурации                                                                  ││
│  │ • Сохранение изменений                                                                     ││
│  │ • Резервное копирование                                                                    ││
│  │ • Восстановление настроек                                                                  ││
│  │ • Мониторинг изменений                                                                     ││
│  │ • Уведомления об изменениях                                                                ││
│  └─────────────────────────────────────────────────────────────────────────────────────────────┘│
│  ┌─────────────────────────────────────────────────────────────────────────────────────────────┐│
│  │ ConfigLoader.cpp - Загрузчик конфигурации                                                  ││
│  │ • Парсинг конфигурационных файлов                                                          ││
│  │ • Валидация структуры                                                                      ││
│  │ • Обработка ошибок                                                                         ││
│  │ • Кэширование конфигурации                                                                 ││
│  │ • Hot reload                                                                               ││
│  │ • Поддержка различных форматов                                                             ││
│  │ • Логирование изменений                                                                    ││
│  │ • Экспорт конфигурации                                                                     ││
│  └─────────────────────────────────────────────────────────────────────────────────────────────┘│
│  ┌─────────────────────────────────────────────────────────────────────────────────────────────┐│
│  │ SettingsManager.cpp - Управление настройками                                               ││
│  │ • Управление пользовательскими настройками                                                 ││
│  │ • Сохранение предпочтений                                                                  ││
│  │ • Синхронизация настроек                                                                   ││
│  │ • Валидация значений                                                                       ││
│  │ • Резервное копирование                                                                    ││
│  │ • Восстановление настроек                                                                  ││
│  │ • Экспорт/импорт настроек                                                                  ││
│  │ • Уведомления об изменениях                                                                ││
│  └─────────────────────────────────────────────────────────────────────────────────────────────┘│
│  🔄 ИНТЕГРАЦИЯ                                                                               │
│  ┌─────────────────────────────────────────────────────────────────────────────────────────────┐│
│  │ RubinEngineBridge.cpp - Мост Rubin Engine                                                  ││
│  │ • Интеграция с основным движком                                                            ││
│  │ • Передача данных                                                                          ││
│  │ • Синхронизация состояний                                                                  ││
│  │ • Обработка событий                                                                        ││
│  │ • Управление жизненным циклом                                                              ││
│  │ • Мониторинг производительности                                                            ││
│  │ • Обработка ошибок                                                                         ││
│  │ • Логирование операций                                                                     ││
│  └─────────────────────────────────────────────────────────────────────────────────────────────┘│
│  ┌─────────────────────────────────────────────────────────────────────────────────────────────┐│
│  │ APIGateway.cpp - Шлюз API                                                                  ││
│  │ • Маршрутизация запросов                                                                   ││
│  │ • Балансировка нагрузки                                                                    ││
│  │ • Аутентификация                                                                           ││
│  │ • Авторизация                                                                              ││
│  │ • Кэширование                                                                              ││
│  │ • Мониторинг                                                                               ││
│  │ • Логирование                                                                              ││
│  │ • Обработка ошибок                                                                         ││
│  └─────────────────────────────────────────────────────────────────────────────────────────────┘│
│  ┌─────────────────────────────────────────────────────────────────────────────────────────────┐│
│  │ ServiceDiscovery.cpp - Обнаружение сервисов                                                ││
│  │ • Регистрация сервисов                                                                     ││
│  │ • Поиск сервисов                                                                           ││
│  │ • Мониторинг доступности                                                                   ││
│  │ • Балансировка нагрузки                                                                    ││
│  │ • Обновление конфигурации                                                                  ││
│  │ • Обработка отказов                                                                        ││
│  │ • Логирование изменений                                                                    ││
│  │ • Статистика использования                                                                 ││
│  └─────────────────────────────────────────────────────────────────────────────────────────────┘│
└─────────────────────────────────────────────────────────────────────────────────────────────────┘
                                                    │
┌─────────────────────────────────────────────────────────────────────────────────────────────────┐
│                                    АППАРАТНЫЙ СЛОЙ                                           │
├─────────────────────────────────────────────────────────────────────────────────────────────────┤
│  🏭 PMAC КОНТРОЛЛЕРЫ                                                                          │
│  ┌─────────────────────────────────────────────────────────────────────────────────────────────┐│
│  │ Turbo PMAC                                                                                 ││
│  │ • Высокопроизводительный контроллер                                                        ││
│  │ • Поддержка до 32 осей                                                                     ││
│  │ • Частота обновления до 10 кГц                                                            ││
│  │ • Встроенная память программ                                                               ││
│  │ • Поддержка различных интерфейсов                                                          ││
│  │ • Расширенные возможности диагностики                                                      ││
│  │ • Высокая точность позиционирования                                                       ││
│  │ • Поддержка сложных алгоритмов управления                                                  ││
│  └─────────────────────────────────────────────────────────────────────────────────────────────┘│
│  ┌─────────────────────────────────────────────────────────────────────────────────────────────┐│
│  │ Clipper                                                                                    ││
│  │ • Компактный контроллер                                                                    ││
│  │ • Поддержка до 8 осей                                                                      ││
│  │ • Частота обновления до 5 кГц                                                             ││
│  │ • Встроенная память                                                                        ││
│  │ • Простота настройки                                                                       ││
│  │ • Низкое энергопотребление                                                                 ││
│  │ • Высокая надежность                                                                       ││
│  │ • Поддержка стандартных интерфейсов                                                        ││
│  └─────────────────────────────────────────────────────────────────────────────────────────────┘│
│  ┌─────────────────────────────────────────────────────────────────────────────────────────────┐│
│  │ Brick                                                                                      ││
│  │ • Модульный контроллер                                                                     ││
│  │ • Поддержка до 16 осей                                                                     ││
│  │ • Частота обновления до 8 кГц                                                             ││
│  │ • Расширяемость                                                                            ││
│  │ • Гибкая конфигурация                                                                      ││
│  │ • Высокая производительность                                                               ││
│  │ • Поддержка различных модулей                                                              ││
│  │ • Встроенная диагностика                                                                   ││
│  └─────────────────────────────────────────────────────────────────────────────────────────────┘│
│  ┌─────────────────────────────────────────────────────────────────────────────────────────────┐│
│  │ PCI                                                                                        ││
│  │ • PCI интерфейс                                                                            ││
│  │ • Поддержка до 4 осей                                                                      ││
│  │ • Частота обновления до 2 кГц                                                             ││
│  │ • Прямое подключение к ПК                                                                  ││
│  │ • Низкая задержка                                                                          ││
│  │ • Высокая надежность                                                                       ││
│  │ • Простота установки                                                                       ││
│  │ • Поддержка стандартных драйверов                                                          ││
│  └─────────────────────────────────────────────────────────────────────────────────────────────┘│
│  ┌─────────────────────────────────────────────────────────────────────────────────────────────┐│
│  │ Ethernet                                                                                   ││
│  │ • Ethernet интерфейс                                                                       ││
│  │ • Поддержка до 64 осей                                                                     ││
│  │ • Частота обновления до 1 кГц                                                             ││
│  │ • Сетевое подключение                                                                      ││
│  │ • Удаленное управление                                                                     ││
│  │ • Высокая пропускная способность                                                           ││
│  │ • Поддержка различных протоколов                                                           ││
│  │ • Встроенная безопасность                                                                  ││
│  └─────────────────────────────────────────────────────────────────────────────────────────────┘│
│  🔌 ПРОМЫШЛЕННОЕ ОБОРУДОВАНИЕ                                                                │
│  ┌─────────────────────────────────────────────────────────────────────────────────────────────┐│
│  │ Сервоприводы                                                                               ││
│  │ • Высокоточные сервоприводы                                                                ││
│  │ • Поддержка различных типов двигателей                                                     ││
│  │ • Встроенная обратная связь                                                                ││
│  │ • Автоматическая калибровка                                                                ││
│  │ • Защита от перегрузок                                                                     ││
│  │ • Мониторинг состояния                                                                     ││
│  │ • Оптимизация производительности                                                           ││
│  │ • Поддержка различных интерфейсов                                                          ││
│  └─────────────────────────────────────────────────────────────────────────────────────────────┘│
│  ┌─────────────────────────────────────────────────────────────────────────────────────────────┐│
│  │ Энкодеры (Heidenhain, Tamagawa)                                                           ││
│  │ • Высокоточные энкодеры                                                                    ││
│  │ • Различные типы (абсолютные, инкрементальные)                                             ││
│  │ • Высокое разрешение                                                                       ││
│  │ • Высокая надежность                                                                       ││
│  │ • Поддержка различных интерфейсов                                                          ││
│  │ • Автоматическая калибровка                                                                ││
│  │ • Мониторинг состояния                                                                     ││
│  │ • Защита от помех                                                                          ││
│  └─────────────────────────────────────────────────────────────────────────────────────────────┘│
│  ┌─────────────────────────────────────────────────────────────────────────────────────────────┐│
│  │ Датчики (температура, напряжение, ток)                                                    ││
│  │ • Высокоточные датчики                                                                     ││
│  │ • Различные типы измерений                                                                 ││
│  │ • Высокая частота обновления                                                               ││
│  │ • Автоматическая калибровка                                                                ││
│  │ • Мониторинг состояния                                                                     ││
│  │ • Защита от перегрузок                                                                     ││
│  │ • Поддержка различных интерфейсов                                                          ││
│  │ • Встроенная диагностика                                                                   ││
│  └─────────────────────────────────────────────────────────────────────────────────────────────┘│
│  ┌─────────────────────────────────────────────────────────────────────────────────────────────┐│
│  │ Реле и контакторы                                                                          ││
│  │ • Высоконадежные реле                                                                      ││
│  │ • Различные типы контактов                                                                 ││
│  │ • Высокая коммутационная способность                                                       ││
│  │ • Защита от перегрузок                                                                     ││
│  │ • Мониторинг состояния                                                                     ││
│  │ • Автоматическое тестирование                                                              ││
│  │ • Поддержка различных интерфейсов                                                          ││
│  │ • Встроенная диагностика                                                                   ││
│  └─────────────────────────────────────────────────────────────────────────────────────────────┘│
│  ┌─────────────────────────────────────────────────────────────────────────────────────────────┐│
│  │ Блоки питания                                                                              ││
│  │ • Стабилизированные блоки питания                                                          ││
│  │ • Различные выходные напряжения                                                            ││
│  │ • Высокая эффективность                                                                    ││
│  │ • Защита от перегрузок                                                                     ││
│  │ • Мониторинг состояния                                                                     ││
│  │ • Автоматическое тестирование                                                              ││
│  │ • Поддержка различных интерфейсов                                                          ││
│  │ • Встроенная диагностика                                                                   ││
│  └─────────────────────────────────────────────────────────────────────────────────────────────┘│
│  ┌─────────────────────────────────────────────────────────────────────────────────────────────┐│
│  │ Системы безопасности                                                                       ││
│  │ • Аварийные остановы                                                                       ││
│  │ • Защитные ограждения                                                                      ││
│  │ • Системы контроля доступа                                                                 ││
│  │ • Мониторинг безопасности                                                                  ││
│  │ • Автоматическое тестирование                                                              ││
│  │ • Логирование событий                                                                      ││
│  │ • Уведомления о нарушениях                                                                 ││
│  │ • Интеграция с системами управления                                                        ││
│  └─────────────────────────────────────────────────────────────────────────────────────────────┘│
└─────────────────────────────────────────────────────────────────────────────────────────────────┘

ПОТОК ДАННЫХ В СИСТЕМЕ
======================

┌─────────────┐
│ Пользователь │
└──────┬──────┘
       │ 1. Отправляет запрос
       ▼
┌─────────────┐
│ Веб-интерфейс│
│ (RubinIDE.html)│
└──────┬──────┘
       │ 2. Определяет модуль
       ▼
┌─────────────┐
│ Intelligent │
│ Dispatcher  │
└──────┬──────┘
       │ 3. Маршрутизация
       ▼
┌─────────────┐    ┌─────────────┐    ┌─────────────┐
│ AI Chat API │    │ Electrical  │    │ Radiomech   │
│ (8086)      │    │ API (8087)  │    │ API (8089)  │
└──────┬──────┘    └──────┬──────┘    └──────┬──────┘
       │                  │                  │
       ▼                  ▼                  ▼
┌─────────────┐    ┌─────────────┐    ┌─────────────┐
│ Python      │    │ Python      │    │ Python      │
│ обработка   │    │ обработка   │    │ обработка   │
└──────┬──────┘    └──────┬──────┘    └──────┬──────┘
       │                  │                  │
       ▼                  ▼                  ▼
┌─────────────┐    ┌─────────────┐    ┌─────────────┐
│ База знаний │    │ База знаний │    │ База знаний │
│ (SQLite +   │    │ (SQLite +   │    │ (SQLite +   │
│ Qdrant)     │    │ Qdrant)     │    │ Qdrant)     │
└──────┬──────┘    └──────┬──────┘    └──────┬──────┘
       │                  │                  │
       ▼                  ▼                  ▼
┌─────────────┐    ┌─────────────┐    ┌─────────────┐
│ AI провайдер│    │ AI провайдер│    │ AI провайдер│
│ (OpenRouter)│    │ (OpenRouter)│    │ (OpenRouter)│
└──────┬──────┘    └──────┬──────┘    └──────┬──────┘
       │                  │                  │
       ▼                  ▼                  ▼
┌─────────────┐    ┌─────────────┐    ┌─────────────┐
│ Формирование│    │ Формирование│    │ Формирование│
│ ответа      │    │ ответа      │    │ ответа      │
└──────┬──────┘    └──────┬──────┘    └──────┬──────┘
       │                  │                  │
       ▼                  ▼                  ▼
┌─────────────┐    ┌─────────────┐    ┌─────────────┐
│ Возврат     │    │ Возврат     │    │ Возврат     │
│ ответа      │    │ ответа      │    │ ответа      │
└──────┬──────┘    └──────┬──────┘    └──────┬──────┘
       │                  │                  │
       ▼                  ▼                  ▼
┌─────────────┐
│ Веб-интерфейс│
│ (Отображение)│
└──────┬──────┘
       │
       ▼
┌─────────────┐
│ Пользователь │
└─────────────┘

Дата создания: 10.09.2025
Версия: Rubin IDE v1 "Ломовая лошадка"
Тип: Детальная схема функций
