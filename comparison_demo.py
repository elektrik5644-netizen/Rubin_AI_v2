#!/usr/bin/env python3
# -*- coding: utf-8 -*-

from mathematical_problem_solver import MathematicalProblemSolver

def comparison_demo():
    solver = MathematicalProblemSolver()
    
    print('üßÆ –°–†–ê–í–ù–ï–ù–ò–ï: Rubin AI vs –ú–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ä–µ—à–∞—Ç–µ–ª—å')
    print('=' * 60)
    
    problems = [
        '2+2=?',
        '3+4=?', 
        '5*6=?',
        '–†–µ—à–∏ —É—Ä–∞–≤–Ω–µ–Ω–∏–µ 2x + 3 = 11',
        '–ù–∞–π–¥–∏ 20% –æ—Ç 150'
    ]
    
    for problem in problems:
        print(f'\n‚ùå Rubin AI: "{problem}" ‚Üí –ù–ï –ú–û–ñ–ï–¢ –†–ï–®–ò–¢–¨')
        print('   –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ—Ç –∫ AI –ß–∞—Ç, –∫–æ—Ç–æ—Ä—ã–π –Ω–µ –∏–º–µ–µ—Ç –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π')
        
        # –†–µ—à–∞–µ–º —á–µ—Ä–µ–∑ –Ω–∞—à –∞–ª–≥–æ—Ä–∏—Ç–º
        if '?' in problem:
            clean_problem = problem.replace('?', '')
            solution = solver.solve_problem(f'–í—ã—á–∏—Å–ª–∏ {clean_problem}')
        else:
            solution = solver.solve_problem(problem)
        
        print(f'‚úÖ –ù–∞—à —Ä–µ—à–∞—Ç–µ–ª—å: "{problem}" ‚Üí {solution.final_answer}')
        print(f'   –¢–∏–ø: {solution.problem_type.value}, –£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: {solution.confidence:.2f}')

if __name__ == "__main__":
    comparison_demo()

