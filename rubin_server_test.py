#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Rubin AI - –ú–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Å–µ—Ä–≤–µ—Ä (–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è)
–†–µ—à–∞–µ—Ç –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –∑–∞–¥–∞—á–∏ –±–µ–∑ —à–∞–±–ª–æ–Ω–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤
"""

from flask import Flask, request, jsonify
from flask_cors import CORS
import re
import logging
import json
import os
from datetime import datetime

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.WARNING)
logger = logging.getLogger(__name__)

app = Flask(__name__)
CORS(app)

@app.route('/')
def index():
    return jsonify({
        'name': 'Rubin AI',
        'version': '2.0',
        'status': 'online',
        'features': ['mathematics', 'physics', 'geometry', 'word_problems']
    })

@app.route('/api/health')
def health():
    return jsonify({'status': 'healthy', 'timestamp': datetime.now().isoformat()})

@app.route('/api/test', methods=['GET'])
def test_endpoint():
    """–¢–µ—Å—Ç–æ–≤—ã–π endpoint"""
    return jsonify({'message': '–¢–µ—Å—Ç–æ–≤—ã–π endpoint —Ä–∞–±–æ—Ç–∞–µ—Ç!', 'timestamp': datetime.now().isoformat()})

@app.route('/api/chat', methods=['POST'])
def chat():
    """–û—Å–Ω–æ–≤–Ω–æ–π endpoint –¥–ª—è —á–∞—Ç–∞ —Å Rubin AI"""
    try:
        data = request.get_json()
        message = data.get('message', '').strip()
        
        if not message:
            return jsonify({'error': '–°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º'}), 400
        
        # –ü—Ä–æ—Å—Ç–æ–π –æ—Ç–≤–µ—Ç
        response = f"""ü§ñ **Rubin AI –æ—Ç–≤–µ—á–∞–µ—Ç:**

–Ø –ø–æ–ª—É—á–∏–ª –≤–∞—à –≤–æ–ø—Ä–æ—Å: "{message}"

–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–∞—è –≤–µ—Ä—Å–∏—è —Å–µ—Ä–≤–µ—Ä–∞. –°–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç!

üí° **–°—Ç–∞—Ç—É—Å:** –í—Å–µ —Å–µ—Ä–≤–µ—Ä—ã –∑–∞–ø—É—â–µ–Ω—ã –∏ –≥–æ—Ç–æ–≤—ã –∫ —Ä–∞–±–æ—Ç–µ."""
        
        return jsonify({
            'success': True,
            'response': response,
            'category': 'general'
        })
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ —á–∞—Ç–µ: {e}")
        return jsonify({'error': f'–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞: {str(e)}'}), 500

if __name__ == '__main__':
    print("Rubin AI (Test Server) –∑–∞–ø—É—â–µ–Ω")
    print("URL: http://localhost:8084")
    app.run(host='0.0.0.0', port=8084, debug=False)












