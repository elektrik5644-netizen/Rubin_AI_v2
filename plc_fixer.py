#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
üîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï PLC –§–ê–ô–õ–ê VMB630
===============================
–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç –Ω–∞–π–¥–µ–Ω–Ω—ã–µ –æ—à–∏–±–∫–∏ –≤ PLC —Ñ–∞–π–ª–µ
"""

import os
import re

def fix_plc_file(input_path, output_path):
    """–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—à–∏–±–æ–∫ –≤ PLC —Ñ–∞–π–ª–µ"""
    print(f"üîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï PLC –§–ê–ô–õ–ê")
    print("=" * 40)
    
    try:
        with open(input_path, 'r', encoding='utf-8') as f:
            content = f.read()
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–∞: {e}")
        return False
    
    original_content = content
    fixes_applied = []
    
    # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ 1: –û–ø–µ—á–∞—Ç–∫–∞ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π
    if 'AXIS_DISCONNECTEP_TP_P' in content:
        content = content.replace('AXIS_DISCONNECTEP_TP_P', 'AXIS_DISCONNECTED_TP_P')
        fixes_applied.append("–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∞ –æ–ø–µ—á–∞—Ç–∫–∞: AXIS_DISCONNECTEP_TP_P ‚Üí AXIS_DISCONNECTED_TP_P")
    
    # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ 2: –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –∫ —Å–ª–æ–∂–Ω—ã–º –±–ª–æ–∫–∞–º
    lines = content.split('\n')
    fixed_lines = []
    
    for i, line in enumerate(lines):
        fixed_lines.append(line)
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –∫ —Å—Ç–∞–¥–∏—è–º —Å–º–∞–∑–∫–∏
        if 'LUBE_STAGE_P = 0' in line and ';–°—Ç–∞–¥–∏—è 0' not in lines[i-1] if i > 0 else True:
            if i > 0 and ';–°—Ç–∞–¥–∏—è 0' not in lines[i-1]:
                fixed_lines.insert(-1, '\t\t;–°—Ç–∞–¥–∏—è 0 ‚Äî –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ª–æ–≤–∏–π –≤–∫–ª—é—á–µ–Ω–∏—è —Å—Ç–∞–Ω—Ü–∏–∏ —Å–º–∞–∑–∫–∏')
        
        if 'LUBE_STAGE_P = 1' in line and ';–°—Ç–∞–¥–∏—è 1' not in lines[i-1] if i > 0 else True:
            if i > 0 and ';–°—Ç–∞–¥–∏—è 1' not in lines[i-1]:
                fixed_lines.insert(-1, '\t\t;–°—Ç–∞–¥–∏—è 1 ‚Äî –û–∂–∏–¥–∞–Ω–∏–µ –Ω–∞—á–∞–ª–∞ –¥–≤–∏–∂–µ–Ω–∏—è')
        
        if 'LUBE_STAGE_P = 2' in line and ';–°—Ç–∞–¥–∏—è 2' not in lines[i-1] if i > 0 else True:
            if i > 0 and ';–°—Ç–∞–¥–∏—è 2' not in lines[i-1]:
                fixed_lines.insert(-1, '\t\t;–°—Ç–∞–¥–∏—è 2 ‚Äî –í–∫–ª—é—á–µ–Ω–∏–µ –º–æ—Ç–æ—Ä–∞ —Å—Ç–∞–Ω—Ü–∏–∏ —Å–º–∞–∑–∫–∏')
        
        if 'LUBE_STAGE_P = 3' in line and ';–°—Ç–∞–¥–∏—è 3' not in lines[i-1] if i > 0 else True:
            if i > 0 and ';–°—Ç–∞–¥–∏—è 3' not in lines[i-1]:
                fixed_lines.insert(-1, '\t\t;–°—Ç–∞–¥–∏—è 3 ‚Äî –û–∂–∏–¥–∞–Ω–∏–µ –ø–æ—è–≤–ª–µ–Ω–∏—è –¥–∞–≤–ª–µ–Ω–∏—è')
        
        if 'LUBE_STAGE_P = 4' in line and ';–°—Ç–∞–¥–∏—è 4' not in lines[i-1] if i > 0 else True:
            if i > 0 and ';–°—Ç–∞–¥–∏—è 4' not in lines[i-1]:
                fixed_lines.insert(-1, '\t\t;–°—Ç–∞–¥–∏—è 4 ‚Äî –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –≤—ã–¥–µ—Ä–∂–∫–∞ –ø–æ—Å–ª–µ –Ω–∞–±–æ—Ä–∞ –¥–∞–≤–ª–µ–Ω–∏—è')
        
        if 'LUBE_STAGE_P = 5' in line and ';–°—Ç–∞–¥–∏—è 5' not in lines[i-1] if i > 0 else True:
            if i > 0 and ';–°—Ç–∞–¥–∏—è 5' not in lines[i-1]:
                fixed_lines.insert(-1, '\t\t;–°—Ç–∞–¥–∏—è 5 ‚Äî –û–∂–∏–¥–∞–Ω–∏–µ —Å–±—Ä–æ—Å–∞ –¥–∞–≤–ª–µ–Ω–∏—è')
        
        if 'LUBE_STAGE_P = 1000' in line and ';–°—Ç–∞–¥–∏—è 1000' not in lines[i-1] if i > 0 else True:
            if i > 0 and ';–°—Ç–∞–¥–∏—è 1000' not in lines[i-1]:
                fixed_lines.insert(-1, '\t\t;–°—Ç–∞–¥–∏—è 1000 ‚Äî –û—à–∏–±–∫–∞')
    
    content = '\n'.join(fixed_lines)
    
    # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç–∏ —Ç–∞–π–º–µ—Ä–æ–≤
    # TIMER_SIMPLE77_P –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –≤ —Å—Ç—Ä–æ–∫–µ 336
    if 'TIMER_SIMPLE77_P' in content:
        # –ó–∞–º–µ–Ω—è–µ–º –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ TIMER_SIMPLE77_P –Ω–∞ TIMER_SIMPLE78_P –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –ø–∏—Å—Ç–æ–ª–µ—Ç–∞ –°–û–ñ
        content = re.sub(
            r'(SOJ_PUMP_PISTOL_STAGE_P = 2.*?)TIMER_SIMPLE77_P',
            r'\1TIMER_SIMPLE78_P',
            content,
            flags=re.DOTALL
        )
        fixes_applied.append("–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ç–∞–π–º–µ—Ä–∞ –≤ —Å–µ–∫—Ü–∏–∏ –ø–∏—Å—Ç–æ–ª–µ—Ç–∞ –°–û–ñ")
    
    # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
    try:
        with open(output_path, 'w', encoding='utf-8') as f:
            f.write(content)
        print(f"‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π —Ñ–∞–π–ª —Å–æ—Ö—Ä–∞–Ω–µ–Ω: {output_path}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ñ–∞–π–ª–∞: {e}")
        return False
    
    # –û—Ç—á–µ—Ç –æ–± –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è—Ö
    print(f"\nüìã –ü–†–ò–ú–ï–ù–ï–ù–ù–´–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø ({len(fixes_applied)}):")
    for i, fix in enumerate(fixes_applied, 1):
        print(f"  {i}. {fix}")
    
    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π
    original_lines = len(original_content.split('\n'))
    fixed_lines = len(content.split('\n'))
    changes = fixed_lines - original_lines
    
    print(f"\nüìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ò–ó–ú–ï–ù–ï–ù–ò–ô:")
    print(f"  –ò—Å—Ö–æ–¥–Ω—ã—Ö —Å—Ç—Ä–æ–∫: {original_lines}")
    print(f"  –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö —Å—Ç—Ä–æ–∫: {fixed_lines}")
    print(f"  –î–æ–±–∞–≤–ª–µ–Ω–æ —Å—Ç—Ä–æ–∫: {changes}")
    
    return True

def create_error_report(input_path, output_path):
    """–°–æ–∑–¥–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–∞ –æ–± –æ—à–∏–±–∫–∞—Ö"""
    report_path = output_path.replace('.plc', '_ERROR_REPORT.txt')
    
    report_content = f"""
–û–¢–ß–ï–¢ –û–ë –û–®–ò–ë–ö–ê–• –í PLC –§–ê–ô–õ–ï
============================
–§–∞–π–ª: {os.path.basename(input_path)}
–î–∞—Ç–∞ –∞–Ω–∞–ª–∏–∑–∞: {__import__('datetime').datetime.now().strftime('%Y-%m-%d %H:%M:%S')}

–ù–ê–ô–î–ï–ù–ù–´–ï –û–®–ò–ë–ö–ò:
1. –°—Ç—Ä–æ–∫–∞ 33: –û–ø–µ—á–∞—Ç–∫–∞ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π
   - –û—à–∏–±–∫–∞: AXIS_DISCONNECTEP_TP_P
   - –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ: AXIS_DISCONNECTED_TP_P
   - –û–ø–∏—Å–∞–Ω–∏–µ: –û–ø–µ—á–∞—Ç–∫–∞ –≤ –Ω–∞–∑–≤–∞–Ω–∏–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π —Å–æ—Å—Ç–æ—è–Ω–∏—è –æ—Å–∏

2. –°—Ç—Ä–æ–∫–∞ 336: –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ç–∞–π–º–µ—Ä–∞
   - –û—à–∏–±–∫–∞: TIMER_SIMPLE77_P –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –ø–∏—Å—Ç–æ–ª–µ—Ç–∞ –°–û–ñ
   - –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ: TIMER_SIMPLE78_P
   - –û–ø–∏—Å–∞–Ω–∏–µ: –¢–∞–π–º–µ—Ä –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–º —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–º –±–ª–æ–∫–µ

–ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–Ø:
- –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ª–æ–≥–∏–∫—É –ø–µ—Ä–µ—Ö–æ–¥–æ–≤ –º–µ–∂–¥—É —Å—Ç–∞–¥–∏—è–º–∏ —Å–º–∞–∑–∫–∏
- –£–±–µ–¥–∏—Ç—å—Å—è –≤ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç–∏ —Ä–∞–±–æ—Ç—ã —Ç–∞–π–º–µ—Ä–æ–≤
- –î–æ–±–∞–≤–∏—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –∫ —Å–ª–æ–∂–Ω—ã–º –ª–æ–≥–∏—á–µ—Å–∫–∏–º –±–ª–æ–∫–∞–º

–†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:
1. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –∫–æ–¥ –Ω–∞ —Å—Ç–µ–Ω–¥–µ
2. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ –±–ª–æ–∫–∏
3. –£–±–µ–¥–∏—Ç—å—Å—è –≤ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç–∏ —Ä–∞–±–æ—Ç—ã —Å–∏—Å—Ç–µ–º—ã —Å–º–∞–∑–∫–∏
4. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –°–û–ñ –∏ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç—ë—Ä–æ–º

–°–¢–ê–¢–£–°: ‚úÖ –û–®–ò–ë–ö–ò –ò–°–ü–†–ê–í–õ–ï–ù–´
"""
    
    try:
        with open(report_path, 'w', encoding='utf-8') as f:
            f.write(report_content)
        print(f"üìÑ –û—Ç—á–µ—Ç –æ–± –æ—à–∏–±–∫–∞—Ö —Å–æ—Ö—Ä–∞–Ω–µ–Ω: {report_path}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –æ—Ç—á–µ—Ç–∞: {e}")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    input_path = r"C:\Users\elekt\OneDrive\Desktop\VMB630_v_005_019_000\out\plc_18_background_ctrl.plc"
    output_path = r"C:\Users\elekt\OneDrive\Desktop\VMB630_v_005_019_000\out\plc_18_background_ctrl_FIXED.plc"
    
    if not os.path.exists(input_path):
        print(f"‚ùå –ò—Å—Ö–æ–¥–Ω—ã–π —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {input_path}")
        return
    
    print("üîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –û–®–ò–ë–û–ö –í PLC –§–ê–ô–õ–ï VMB630")
    print("=" * 50)
    
    if fix_plc_file(input_path, output_path):
        create_error_report(input_path, output_path)
        
        print(f"\nüéØ –ó–ê–ö–õ–Æ–ß–ï–ù–ò–ï:")
        print("=" * 30)
        print("‚úÖ –í—Å–µ –Ω–∞–π–¥–µ–Ω–Ω—ã–µ –æ—à–∏–±–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã")
        print("‚úÖ –°–æ–∑–¥–∞–Ω –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π —Ñ–∞–π–ª")
        print("‚úÖ –°–æ–∑–¥–∞–Ω –æ—Ç—á–µ—Ç –æ–± –æ—à–∏–±–∫–∞—Ö")
        print("\nüìã –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò:")
        print("  1. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π PLC —Ñ–∞–π–ª")
        print("  2. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ä–∞–±–æ—Ç—É —Å–∏—Å—Ç–µ–º—ã —Å–º–∞–∑–∫–∏")
        print("  3. –£–±–µ–¥–∏—Ç—å—Å—è –≤ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –°–û–ñ")
        print("  4. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ –±–ª–æ–∫–∏")
    else:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏—Å–ø—Ä–∞–≤–∏—Ç—å —Ñ–∞–π–ª")

if __name__ == "__main__":
    main()










