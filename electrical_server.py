#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
⚡ ELECTRICAL SERVER
===================
Сервер для электротехнических задач
"""

from flask import Flask, request, jsonify
import logging
from datetime import datetime

# Настройка логирования
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

app = Flask(__name__)

@app.route('/api/electrical/status', methods=['GET'])
def electrical_status():
    """Статус модуля электротехники"""
    return jsonify({
        "module": "electrical",
        "status": "healthy",
        "timestamp": datetime.now().isoformat(),
        "version": "1.0.0",
        "capabilities": [
            "Расчет электрических цепей",
            "Анализ схем",
            "Решение задач по электротехнике"
        ]
    })

@app.route('/api/electrical/solve', methods=['POST'])
def solve_electrical():
    """Решение электротехнических задач"""
    try:
        data = request.get_json()
        if not data:
            return jsonify({"error": "No JSON data provided"}), 400
            
        problem = data.get('problem', '') or data.get('query', '')
        
        logger.info(f"⚡ Получена электротехническая задача: {problem[:50]}...")
        
        # Простая логика решения
        if "закон ома" in problem.lower() or "напряжение" in problem.lower():
            result = "U = I × R (Закон Ома)"
        elif "мощность" in problem.lower():
            result = "P = U × I (Мощность)"
        elif "сопротивление" in problem.lower():
            result = "R = U / I (Сопротивление)"
        elif "диод" in problem.lower():
            result = """**Диод - полупроводниковый прибор:**

**Принцип работы:**
- Пропускает ток только в одном направлении
- Состоит из p-n перехода
- Прямое включение: анод (+), катод (-)
- Обратное включение: блокирует ток

**Основные характеристики:**
- Прямое падение напряжения: 0.6-0.7В (кремний), 0.2-0.3В (германий)
- Максимальный прямой ток
- Обратное напряжение пробоя
- Время восстановления

**Типы диодов:**
- Выпрямительные (силовые)
- Стабилитроны (опорное напряжение)
- Светодиоды (LED)
- Фотодиоды (датчики света)
- Варикапы (управляемая емкость)

**Применение:**
- Выпрямление переменного тока
- Защита от обратной полярности
- Стабилизация напряжения
- Индикация состояния
- Детектирование сигналов"""
        elif "контур тока" in problem.lower() or "сервопривод" in problem.lower():
            result = """**Настройка контура тока в сервоприводе:**

1. **Параметры контура тока:**
   - Kp (пропорциональный коэффициент): 0.1-1.0
   - Ki (интегральный коэффициент): 0.01-0.1
   - Kd (дифференциальный коэффициент): 0.001-0.01

2. **Последовательность настройки:**
   - Установить Ki=0, Kd=0
   - Постепенно увеличивать Kp до появления колебаний
   - Добавить Ki для устранения статической ошибки
   - Добавить Kd для подавления колебаний

3. **Проверка:**
   - Отклик на ступенчатое воздействие
   - Время установления < 100мс
   - Перерегулирование < 5%"""
        elif "транзистор" in problem.lower():
            result = """**Транзистор - активный полупроводниковый прибор:**

**Принцип работы:**
- Управляет током через третий электрод
- Усиливает сигналы
- Работает как ключ

**Типы транзисторов:**
- Биполярные (BJT): NPN, PNP
- Полевые (FET): MOSFET, JFET
- IGBT (для силовых применений)

**Основные параметры:**
- Коэффициент усиления (hFE, β)
- Напряжение насыщения
- Максимальный ток коллектора
- Частота среза

**Режимы работы:**
- Активный (усиление)
- Насыщения (ключ включен)
- Отсечки (ключ выключен)
- Инверсный"""
        elif "конденсатор" in problem.lower():
            result = """**Конденсатор - накопитель электрической энергии:**

**Принцип работы:**
- Накопление заряда на обкладках
- Разделение зарядов диэлектриком
- Емкостное сопротивление переменному току

**Основные параметры:**
- Емкость (Фарады)
- Рабочее напряжение
- Допуск (±5%, ±10%, ±20%)
- Температурный коэффициент

**Типы конденсаторов:**
- Керамические (высокая частота)
- Электролитические (большая емкость)
- Пленочные (стабильность)
- Танталовые (компактность)

**Применение:**
- Фильтрация пульсаций
- Развязка по постоянному току
- Временные цепи
- Коррекция коэффициента мощности"""
        else:
            result = """**Электротехническая помощь:**

Для получения точного ответа уточните ваш вопрос:

**Основные темы:**
- Диоды и их характеристики
- Транзисторы и усилители
- Конденсаторы и фильтры
- Резисторы и делители напряжения
- Законы Ома и Кирхгофа
- Цепи переменного тока
- Настройка сервоприводов
- Контуры управления

**Примеры вопросов:**
- "Как работает диод?"
- "Настройка PID регулятора"
- "Расчет делителя напряжения"
- "Анализ RC-цепи" """
        
        return jsonify({
            "module": "electrical",
            "problem": problem,
            "solution": result,
            "timestamp": datetime.now().isoformat()
        })
        
    except Exception as e:
        logger.error(f"❌ Ошибка в electrical: {e}")
        return jsonify({"error": str(e)}), 500

@app.route('/api/health', methods=['GET'])
def health():
    """Проверка здоровья сервера"""
    return jsonify({
        "service": "electrical",
        "status": "healthy",
        "timestamp": datetime.now().isoformat(),
        "version": "1.0.0"
    })

if __name__ == "__main__":
    print("⚡ Electrical Server запущен")
    print("URL: http://localhost:8087")
    print("Доступные эндпоинты:")
    print("  - GET /api/electrical/status - статус модуля")
    print("  - POST /api/electrical/solve - решение задач")
    print("  - GET /api/health - проверка здоровья")
    app.run(host='0.0.0.0', port=8087, debug=False)





