#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Data Processing Server –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏ –∞–Ω–∞–ª–∏–∑–∞ –¥–∞–Ω–Ω—ã—Ö
"""

from flask import Flask, request, jsonify
import logging
from datetime import datetime

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

app = Flask(__name__)

@app.route('/api/health', methods=['GET'])
def health_check():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–µ—Ä–≤–µ—Ä–∞"""
    return jsonify({
        'status': 'healthy',
        'service': 'Data Processing Server',
        'port': 8101,
        'timestamp': datetime.now().isoformat(),
        'version': '1.0.0'
    })

@app.route('/api/data/process', methods=['GET', 'POST'])
def process_data():
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö"""
    try:
        if request.method == 'GET':
            data = request.args.get('data', '')
        else:
            request_data = request.get_json()
            data = request_data.get('data', '')
        
        logger.info(f"üìä –ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö: {data[:50]}...")
        
        # –ü—Ä–æ—Å—Ç–∞—è –ª–æ–≥–∏–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏
        result = {
            'status': 'success',
            'input_data': data,
            'processing_results': {
                'data_type': 'text',
                'length': len(data),
                'words_count': len(data.split()) if data else 0,
                'processing_methods': []
            },
            'service': 'data_processing',
            'timestamp': datetime.now().isoformat()
        }
        
        if data:
            # –ê–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö
            if data.isdigit():
                result['processing_results']['data_type'] = 'numeric'
                result['processing_results']['processing_methods'].append('–ß–∏—Å–ª–æ–≤–æ–π –∞–Ω–∞–ª–∏–∑')
            
            elif ',' in data:
                result['processing_results']['data_type'] = 'csv'
                result['processing_results']['processing_methods'].append('CSV –æ–±—Ä–∞–±–æ—Ç–∫–∞')
            
            elif 'json' in data.lower():
                result['processing_results']['data_type'] = 'json'
                result['processing_results']['processing_methods'].append('JSON –ø–∞—Ä—Å–∏–Ω–≥')
            
            else:
                result['processing_results']['processing_methods'].append('–¢–µ–∫—Å—Ç–æ–≤—ã–π –∞–Ω–∞–ª–∏–∑')
            
            # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—â–∏–µ –º–µ—Ç–æ–¥—ã
            result['processing_results']['processing_methods'].extend([
                '–ü—Ä–µ–¥–æ–±—Ä–∞–±–æ—Ç–∫–∞',
                '–§–∏–ª—å—Ç—Ä–∞—Ü–∏—è',
                '–ù–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è',
                '–ê–Ω–∞–ª–∏–∑'
            ])
        else:
            result['processing_results']['processing_methods'] = [
                '–û—Ç–ø—Ä–∞–≤—å—Ç–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏',
                '–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã: —Ç–µ–∫—Å—Ç, —á–∏—Å–ª–∞, CSV, JSON'
            ]
        
        return jsonify(result)
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö: {e}")
        return jsonify({
            'status': 'error',
            'error': str(e)
        }), 500

if __name__ == '__main__':
    print("üìä Data Processing Server –∑–∞–ø—É—â–µ–Ω")
    print("URL: http://localhost:8101")
    print("–î–æ—Å—Ç—É–ø–Ω—ã–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã:")
    print("  - GET/POST /api/data/process - –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö")
    print("  - GET /api/health - –ø—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è")
    print("=" * 60)
    app.run(host='0.0.0.0', port=8101, debug=False)