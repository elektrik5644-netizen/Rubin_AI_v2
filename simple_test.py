#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
üîß –ü–†–û–°–¢–û–ô –¢–ï–°–¢ HTTP 500 –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø
===================================
"""

import requests
import json

def test_simple():
    """–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è"""
    print("üîß –ü–†–û–°–¢–û–ô –¢–ï–°–¢ HTTP 500 –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø")
    print("=" * 50)
    
    # –¢–µ—Å—Ç –∑–∞–ø—Ä–æ—Å–∞ –∫ Smart Dispatcher
    message = "C:\\Users\\elekt\\OneDrive\\Desktop\\VMB630_v_005_019_000\\out\\plc_18_background_ctrl.plc –ø—Ä–æ—á—Ç–∏ –∏ –Ω–∞–π–¥–∏ –æ—à–∏–±–∫—É"
    
    try:
        response = requests.post('http://localhost:8080/api/chat', 
                               json={'message': message})
        
        print(f"üìä –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: {response.status_code}")
        print(f"üìã –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –æ—Ç–≤–µ—Ç–∞:")
        print(response.text)
        
        if response.status_code == 200:
            data = response.json()
            print(f"\n‚úÖ JSON –æ—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω:")
            print(json.dumps(data, indent=2, ensure_ascii=False))
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –æ—Ç–≤–µ—Ç–∞
            if 'response' in data:
                if 'explanation' in data['response']:
                    print(f"\nüéâ –£–°–ü–ï–•! –û—Ç–≤–µ—Ç —Å–æ–¥–µ—Ä–∂–∏—Ç –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ")
                    return True
                else:
                    print(f"\n‚ö†Ô∏è –û—Ç–≤–µ—Ç –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –æ–±—ä—è—Å–Ω–µ–Ω–∏—è")
                    print(f"–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–ª—é—á–∏: {list(data['response'].keys())}")
            else:
                print(f"\n‚ö†Ô∏è –û—Ç–≤–µ—Ç –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç 'response'")
                print(f"–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–ª—é—á–∏: {list(data.keys())}")
        else:
            print(f"\n‚ùå HTTP –æ—à–∏–±–∫–∞: {response.status_code}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    return False

if __name__ == "__main__":
    test_simple()





