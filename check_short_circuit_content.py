#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import sqlite3
import re

def check_short_circuit_content():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –æ –∫–æ—Ä–æ—Ç–∫–æ–º –∑–∞–º—ã–∫–∞–Ω–∏–∏"""
    
    conn = sqlite3.connect('rubin_ai_documents.db')
    cursor = conn.cursor()
    
    # –ò—â–µ–º –¥–æ–∫—É–º–µ–Ω—Ç—ã —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –∫–æ—Ä–æ—Ç–∫–æ–º –∑–∞–º—ã–∫–∞–Ω–∏–∏
    cursor.execute('''
        SELECT file_name, content 
        FROM documents 
        WHERE content LIKE "%–∫–æ—Ä–æ—Ç–∫%" 
        AND category = "–≠–ª–µ–∫—Ç—Ä–æ—Ç–µ—Ö–Ω–∏–∫–∞"
        LIMIT 3
    ''')
    
    results = cursor.fetchall()
    
    print("üîç **–°–û–î–ï–†–ñ–ò–ú–û–ï –î–û–ö–£–ú–ï–ù–¢–û–í –û –ö–û–†–û–¢–ö–û–ú –ó–ê–ú–´–ö–ê–ù–ò–ò**")
    print("=" * 60)
    
    for i, (file_name, content) in enumerate(results, 1):
        print(f"\nüìÑ **–î–æ–∫—É–º–µ–Ω—Ç {i}: {file_name}**")
        print("-" * 50)
        
        # –ò—â–µ–º —Ñ—Ä–∞–≥–º–µ–Ω—Ç—ã —Å —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ–º –∫–æ—Ä–æ—Ç–∫–æ–≥–æ –∑–∞–º—ã–∫–∞–Ω–∏—è
        sentences = content.split('.')
        relevant_sentences = []
        
        for sentence in sentences:
            if '–∫–æ—Ä–æ—Ç–∫' in sentence.lower() and len(sentence.strip()) > 20:
                relevant_sentences.append(sentence.strip())
                if len(relevant_sentences) >= 3:  # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
                    break
        
        if relevant_sentences:
            print("üìù **–†–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã–µ —Ñ—Ä–∞–≥–º–µ–Ω—Ç—ã:**")
            for j, sentence in enumerate(relevant_sentences, 1):
                print(f"  {j}. {sentence[:200]}...")
        else:
            print("‚ùå –†–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã–µ —Ñ—Ä–∞–≥–º–µ–Ω—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
    
    conn.close()

if __name__ == "__main__":
    check_short_circuit_content()






















