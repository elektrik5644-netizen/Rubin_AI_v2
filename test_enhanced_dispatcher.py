#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
üß™ –¢–µ—Å—Ç –Ω–æ–≤–æ–≥–æ Enhanced Smart Dispatcher
"""

import requests
import json
import time

def test_enhanced_dispatcher():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ç–æ—Ä–∞"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Enhanced Smart Dispatcher")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è
    try:
        response = requests.get("http://localhost:8080/api/health", timeout=5)
        if response.status_code == 200:
            print("‚úÖ Enhanced Dispatcher —Ä–∞–±–æ—Ç–∞–µ—Ç")
            data = response.json()
            print(f"üìä –°—Ç–∞—Ç—É—Å: {data.get('status', 'unknown')}")
            print(f"üß† –ù–µ–π—Ä–æ–Ω–Ω—ã–π —Ä–æ—É—Ç–µ—Ä: {data.get('neural_router', 'unknown')}")
            print(f"üìä –¢—Ä–µ–∫–µ—Ä –æ—à–∏–±–æ–∫: {data.get('error_tracker', 'unknown')}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è: {response.status_code}")
            return False
    except Exception as e:
        print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è: {e}")
        return False
    
    # –¢–µ—Å—Ç –Ω–µ–π—Ä–æ–Ω–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞
    print("\nüß† –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–µ–π—Ä–æ–Ω–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞:")
    test_messages = [
        "–ø—Ä–∏–≤–µ—Ç",
        "—Ä–∞—Å—Å–∫–∞–∂–∏ –ø—Ä–æ —Å–µ—Ä–≤–æ–ø—Ä–∏–≤–æ–¥",
        "–∫–∞–∫ —Ä–µ—à–∏—Ç—å –∏–Ω—Ç–µ–≥—Ä–∞–ª",
        "–Ω–∞–ø–∏—à–∏ –∫–æ–¥ –Ω–∞ Python",
        "—á—Ç–æ —Ç–∞–∫–æ–µ –Ω–µ–π—Ä–æ—Å–µ—Ç—å"
    ]
    
    for message in test_messages:
        try:
            response = requests.post("http://localhost:8080/api/neural/analyze", 
                                   json={"message": message}, timeout=5)
            if response.status_code == 200:
                data = response.json()
                print(f"üìù '{message}' -> {data.get('category', 'unknown')} (—É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: {data.get('confidence', 0):.2f})")
                print(f"   üéØ –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã–π —Å–µ—Ä–≤–µ—Ä: {data.get('suggested_server', 'unknown')}")
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ '{message}': {response.status_code}")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ '{message}': {e}")
    
    # –¢–µ—Å—Ç —á–∞—Ç–∞
    print("\nüí¨ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —á–∞—Ç–∞:")
    for message in test_messages[:3]:  # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã–µ 3
        try:
            response = requests.post("http://localhost:8080/api/chat", 
                                   json={"message": message}, timeout=10)
            if response.status_code == 200:
                data = response.json()
                print(f"üìù '{message}' -> {data.get('routed_to', 'unknown')}")
                if 'error' in data:
                    print(f"   ‚ùå –û—à–∏–±–∫–∞: {data['error']}")
                else:
                    print(f"   ‚úÖ –û—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω")
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ —á–∞—Ç–∞ '{message}': {response.status_code}")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —á–∞—Ç–∞ '{message}': {e}")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—à–∏–±–æ–∫
    print("\nüö® –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—à–∏–±–æ–∫ —Å–∏—Å—Ç–µ–º—ã:")
    try:
        response = requests.get("http://localhost:8080/api/errors?limit=5", timeout=5)
        if response.status_code == 200:
            data = response.json()
            errors = data.get('errors', [])
            if errors:
                print(f"üìä –ù–∞–π–¥–µ–Ω–æ –æ—à–∏–±–æ–∫: {len(errors)}")
                for error in errors[-3:]:  # –ü–æ—Å–ª–µ–¥–Ω–∏–µ 3
                    print(f"   {error.get('type', 'unknown')}: {error.get('message', 'unknown')}")
            else:
                print("‚úÖ –û—à–∏–±–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –æ—à–∏–±–æ–∫: {response.status_code}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –æ—à–∏–±–æ–∫: {e}")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–∏—Å—Ç–µ–º—ã
    print("\nüíö –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–∏—Å—Ç–µ–º—ã:")
    try:
        response = requests.get("http://localhost:8080/api/system/health", timeout=5)
        if response.status_code == 200:
            data = response.json()
            health_percentage = data.get('health_percentage', 0)
            healthy_servers = data.get('healthy_servers', 0)
            total_servers = data.get('total_servers', 0)
            
            health_icon = "üü¢" if health_percentage >= 80 else "üü°" if health_percentage >= 50 else "üî¥"
            print(f"{health_icon} –ó–¥–æ—Ä–æ–≤—å–µ —Å–∏—Å—Ç–µ–º—ã: {health_percentage:.1f}%")
            print(f"üìä –°–µ—Ä–≤–µ—Ä–æ–≤: {healthy_servers}/{total_servers}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–∏—Å—Ç–µ–º—ã: {response.status_code}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–∏—Å—Ç–µ–º—ã: {e}")
    
    print("\n" + "=" * 50)
    print("üèÅ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")

if __name__ == "__main__":
    test_enhanced_dispatcher()



