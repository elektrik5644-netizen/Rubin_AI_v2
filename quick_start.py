#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–ë—ã—Å—Ç—Ä—ã–π –∑–∞–ø—É—Å–∫ –≤—Å–µ—Ö –º–æ–¥—É–ª–µ–π Rubin AI v2.0
"""

import os
import sys
import subprocess
import time
import threading
from pathlib import Path

def start_module(name, command, port):
    """–ó–∞–ø—É—Å–∫ –º–æ–¥—É–ª—è –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ"""
    try:
        print(f"üöÄ –ó–∞–ø—É—Å–∫ {name} –Ω–∞ –ø–æ—Ä—Ç—É {port}...")
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π –∫–æ–¥–∏—Ä–æ–≤–∫–∏
        env = os.environ.copy()
        env['PYTHONIOENCODING'] = 'utf-8'
        
        process = subprocess.Popen(
            command,
            stdout=subprocess.PIPE,
            stderr=subprocess.PIPE,
            encoding='utf-8',
            errors='ignore',
            env=env
        )
        
        print(f"‚úÖ {name} –∑–∞–ø—É—â–µ–Ω (PID: {process.pid})")
        return process
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ {name}: {e}")
        return None

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üéØ –ë–´–°–¢–†–´–ô –ó–ê–ü–£–°–ö RUBIN AI v2.0")
    print("=" * 50)
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –º–æ–¥—É–ª–∏ –¥–ª—è –∑–∞–ø—É—Å–∫–∞
    modules = [
        {
            'name': 'AI –ß–∞—Ç (–û—Å–Ω–æ–≤–Ω–æ–π —Å–µ—Ä–≤–µ—Ä)',
            'command': [sys.executable, 'api/rubin_ai_v2_server.py'],
            'port': 8084
        },
        {
            'name': '–≠–ª–µ–∫—Ç—Ä–æ—Ç–µ—Ö–Ω–∏–∫–∞',
            'command': [sys.executable, 'api/electrical_api.py'],
            'port': 8087
        },
        {
            'name': '–†–∞–¥–∏–æ–º–µ—Ö–∞–Ω–∏–∫–∞',
            'command': [sys.executable, 'api/radiomechanics_api.py'],
            'port': 8089
        },
        {
            'name': '–ö–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä—ã',
            'command': [sys.executable, 'api/controllers_api.py'],
            'port': 8090
        }
    ]
    
    processes = []
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –≤—Å–µ –º–æ–¥—É–ª–∏
    for module in modules:
        process = start_module(module['name'], module['command'], module['port'])
        if process:
            processes.append(process)
        time.sleep(2)  # –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –∑–∞–ø—É—Å–∫–∞–º–∏
    
    print("\n" + "=" * 50)
    print(f"üìä –†–µ–∑—É–ª—å—Ç–∞—Ç: {len(processes)}/{len(modules)} –º–æ–¥—É–ª–µ–π –∑–∞–ø—É—â–µ–Ω–æ")
    
    if processes:
        print("\nüåê –î–æ—Å—Ç—É–ø–Ω—ã–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:")
        print("  - AI –ß–∞—Ç: http://localhost:8084/RubinIDE.html")
        print("  - Developer: http://localhost:8084/RubinDeveloper.html")
        print("  - –≠–ª–µ–∫—Ç—Ä–æ—Ç–µ—Ö–Ω–∏–∫–∞: http://localhost:8087/api/electrical/status")
        print("  - –†–∞–¥–∏–æ–º–µ—Ö–∞–Ω–∏–∫–∞: http://localhost:8089/api/radiomechanics/status")
        print("  - –ö–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä—ã: http://localhost:8090/api/controllers/status")
        print("\n‚è≥ –ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤—Å–µ—Ö –º–æ–¥—É–ª–µ–π")
        
        try:
            # –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –≤—Å–µ—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
            for process in processes:
                process.wait()
        except KeyboardInterrupt:
            print("\nüõë –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –æ—Å—Ç–∞–Ω–æ–≤–∫–∏...")
            for process in processes:
                try:
                    process.terminate()
                    process.wait(timeout=5)
                except:
                    process.kill()
            print("‚úÖ –í—Å–µ –º–æ–¥—É–ª–∏ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
    else:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å –Ω–∏ –æ–¥–Ω–æ–≥–æ –º–æ–¥—É–ª—è")

if __name__ == "__main__":
    main()























