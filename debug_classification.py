#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–û—Ç–ª–∞–¥–∫–∞ –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏ Smart Dispatcher
"""

import requests
import json

def debug_classification():
    """–û—Ç–ª–∞–∂–∏–≤–∞–µ—Ç –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—é —Å–æ–æ–±—â–µ–Ω–∏–π"""
    
    print("üîç –û—Ç–ª–∞–¥–∫–∞ –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏ Smart Dispatcher")
    print("=" * 60)
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –≤–æ–ø—Ä–æ—Å—ã
    test_questions = [
        "—á—Ç–æ —Ç–∞–∫–æ–µ —Ñ–æ—Ç–æ–Ω?",
        "—Ä–∞—Å—Å–∫–∞–∂–∏ –ø—Ä–æ —ç–ª–µ–∫—Ç—Ä–æ–Ω",
        "—á—Ç–æ —Ç–∞–∫–æ–µ –∞—Ç–æ–º?",
        "–æ–±—ä—è—Å–Ω–∏ –∫–≤–∞–Ω—Ç–æ–≤—É—é –º–µ—Ö–∞–Ω–∏–∫—É"
    ]
    
    for question in test_questions:
        print(f"\nüìù –í–æ–ø—Ä–æ—Å: {question}")
        
        try:
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º–∏ –∑–∞–≥–æ–ª–æ–≤–∫–∞–º–∏ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
            response = requests.post(
                'http://localhost:8080/api/chat',
                json={'message': question},
                headers={'X-Debug': 'true'},
                timeout=10
            )
            
            if response.status_code == 200:
                result = response.json()
                print(f"‚úÖ –û—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω")
                print(f"üìä –ö–∞—Ç–µ–≥–æ—Ä–∏—è: {result.get('category', '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ—Ç–ª–∞–¥–∫–µ
                if 'debug_info' in result:
                    debug_info = result['debug_info']
                    print(f"üîç –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:")
                    print(f"   - –ù–∞–π–¥–µ–Ω–Ω—ã–µ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞: {debug_info.get('keywords_found', [])}")
                    print(f"   - –°—á–µ—Ç—á–∏–∫–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π: {debug_info.get('category_scores', {})}")
                    print(f"   - –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Å—á–µ—Ç—á–∏–∫–∏: {debug_info.get('technical_scores', {})}")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª –ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω fallback
                if 'fallback_used' in result:
                    print(f"‚ö†Ô∏è –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω fallback: {result['fallback_used']}")
                
                print(f"üí¨ –û—Ç–≤–µ—Ç: {result.get('response', '–Ω–µ—Ç –æ—Ç–≤–µ—Ç–∞')[:100]}...")
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ HTTP {response.status_code}")
                print(f"üìÑ –û—Ç–≤–µ—Ç: {response.text}")
                
        except requests.exceptions.RequestException as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {e}")
        
        print("-" * 40)

if __name__ == '__main__':
    debug_classification()



