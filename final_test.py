#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–§–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç –≤—Å–µ—Ö –º–æ–¥—É–ª–µ–π Rubin AI v2
"""

import requests
import json
import time

def test_all_modules():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –≤—Å–µ –º–æ–¥—É–ª–∏ —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –≤–æ–ø—Ä–æ—Å–∞–º–∏"""
    print("üéØ –§–ò–ù–ê–õ–¨–ù–´–ô –¢–ï–°–¢ –í–°–ï–• –ú–û–î–£–õ–ï–ô RUBIN AI v2")
    print("=" * 60)
    
    tests = [
        {
            "question": "–ø—Ä–∏–≤–µ—Ç",
            "expected_category": "general",
            "description": "–û–±—â–∏–π –ø—Ä–∏–≤–µ—Ç"
        },
        {
            "question": "–æ–±—ä—è—Å–Ω–∏ –∑–∞–∫–æ–Ω –ö–∏—Ä—Ö–≥–æ—Ñ–∞",
            "expected_category": "electrical", 
            "description": "–≠–ª–µ–∫—Ç—Ä–æ—Ç–µ—Ö–Ω–∏–∫–∞"
        },
        {
            "question": "–∫–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –∞–Ω—Ç–µ–Ω–Ω–∞",
            "expected_category": "radiomechanics",
            "description": "–†–∞–¥–∏–æ–º–µ—Ö–∞–Ω–∏–∫–∞"
        },
        {
            "question": "—á—Ç–æ —Ç–∞–∫–æ–µ –ü–õ–ö –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä",
            "expected_category": "controllers",
            "description": "–ö–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä—ã"
        }
    ]
    
    success_count = 0
    
    for test in tests:
        print(f"\nüîç –¢–µ—Å—Ç: {test['description']}")
        print(f"‚ùì –í–æ–ø—Ä–æ—Å: {test['question']}")
        
        try:
            response = requests.post(
                "http://localhost:8080/api/chat",
                json={"message": test['question']},
                timeout=10
            )
            
            if response.status_code == 200:
                result = response.json()
                category = result.get('category', 'unknown')
                response_text = result.get('response', '–ù–µ—Ç –æ—Ç–≤–µ—Ç–∞')
                
                print(f"‚úÖ –ö–∞—Ç–µ–≥–æ—Ä–∏—è: {category}")
                print(f"üìù –û—Ç–≤–µ—Ç: {response_text[:100] if isinstance(response_text, str) else str(response_text)[:100]}...")
                
                if category == test['expected_category']:
                    print("üéØ –ö–∞—Ç–µ–≥–æ—Ä–∏—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ!")
                    success_count += 1
                else:
                    print(f"‚ö†Ô∏è –û–∂–∏–¥–∞–ª–∞—Å—å –∫–∞—Ç–µ–≥–æ—Ä–∏—è: {test['expected_category']}")
            else:
                print(f"‚ùå HTTP {response.status_code}: {response.text}")
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        
        time.sleep(1)
    
    print("\n" + "=" * 60)
    print(f"üìä –†–ï–ó–£–õ–¨–¢–ê–¢: {success_count}/{len(tests)} —Ç–µ—Å—Ç–æ–≤ –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ")
    print("=" * 60)
    
    if success_count == len(tests):
        print("üéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–®–õ–ò –£–°–ü–ï–®–ù–û!")
        print("\nüöÄ –°–ò–°–¢–ï–ú–ê RUBIN AI v2 –ü–û–õ–ù–û–°–¢–¨–Æ –ì–û–¢–û–í–ê –ö –†–ê–ë–û–¢–ï!")
        print("\nüåê –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å: http://localhost:8080")
        print("üì° API —ç–Ω–¥–ø–æ–∏–Ω—Ç: http://localhost:8080/api/chat")
    else:
        print("‚ö†Ô∏è –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ—à–ª–∏. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏.")

if __name__ == "__main__":
    test_all_modules()