#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–ó–∞–ø—É—Å–∫ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ Rubin AI —Å–µ—Ä–≤–µ—Ä–∞
"""

import sys
import os
import logging

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

def main():
    """–ó–∞–ø—É—Å–∫ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞"""
    print("üöÄ –ó–ê–ü–£–°–ö –ò–°–ü–†–ê–í–õ–ï–ù–ù–û–ì–û RUBIN AI")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤...")
    
    try:
        from enhanced_request_categorizer import get_enhanced_categorizer
        print("‚úÖ –£–ª—É—á—à–µ–Ω–Ω—ã–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∑–∞—Ç–æ—Ä")
    except ImportError as e:
        print(f"‚ùå –£–ª—É—á—à–µ–Ω–Ω—ã–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∑–∞—Ç–æ—Ä: {e}")
    
    try:
        from programming_knowledge_handler import get_programming_handler
        print("‚úÖ –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è")
    except ImportError as e:
        print(f"‚ùå –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
    
    try:
        from electrical_knowledge_handler import get_electrical_handler
        print("‚úÖ –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —ç–ª–µ–∫—Ç—Ä–æ—Ç–µ—Ö–Ω–∏–∫–∏")
    except ImportError as e:
        print(f"‚ùå –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —ç–ª–µ–∫—Ç—Ä–æ—Ç–µ—Ö–Ω–∏–∫–∏: {e}")
    
    try:
        from intelligent_dispatcher import get_intelligent_dispatcher
        print("‚úÖ –ò–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã–π –¥–∏—Å–ø–µ—Ç—á–µ—Ä")
    except ImportError as e:
        print(f"‚ùå –ò–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã–π –¥–∏—Å–ø–µ—Ç—á–µ—Ä: {e}")
    
    try:
        from neural_rubin import get_neural_rubin
        print("‚úÖ –ù–µ–π—Ä–æ–Ω–Ω–∞—è —Å–µ—Ç—å")
    except ImportError as e:
        print(f"‚ùå –ù–µ–π—Ä–æ–Ω–Ω–∞—è —Å–µ—Ç—å: {e}")
    
    print("\nüåê –ó–∞–ø—É—Å–∫ Flask —Å–µ—Ä–≤–µ—Ä–∞...")
    print("üìç –°–µ—Ä–≤–µ—Ä –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞: http://localhost:5000")
    print("üîó RubinDeveloper: file:///C:/Users/elekt/OneDrive/Desktop/Rubin_AI_v2/matrix/RubinDeveloper.html")
    print("\nüß™ –¢–ï–°–¢–û–í–´–ï –ó–ê–ü–†–û–°–´:")
    print("‚Ä¢ –°—Ä–∞–≤–Ω–∏ C++ –∏ Python –¥–ª—è –∑–∞–¥–∞—á –ø—Ä–æ–º—ã—à–ª–µ–Ω–Ω–æ–π –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏")
    print("‚Ä¢ –ö–∞–∫ –∑–∞—â–∏—Ç–∏—Ç—å —ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å–∫–∏–µ —Ü–µ–ø–∏ –æ—Ç –∫–æ—Ä–æ—Ç–∫–æ–≥–æ –∑–∞–º—ã–∫–∞–Ω–∏—è?")
    print("‚Ä¢ 2 + 3 = ?")
    print("‚Ä¢ –ü—Ä–∏–≤–µ—Ç, –∫–∞–∫ –¥–µ–ª–∞?")
    print("\n" + "=" * 50)
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π —Å–µ—Ä–≤–µ—Ä
    try:
        from rubin_server import app
        app.run(host='0.0.0.0', port=5000, debug=False)
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    main()