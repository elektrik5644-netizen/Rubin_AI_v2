#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –≤—Å–µ—Ö API –º–æ–¥—É–ª–µ–π Rubin AI
"""

import requests
import time

def check_server_status():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—Ç–∞—Ç—É—Å –≤—Å–µ—Ö —Å–µ—Ä–≤–µ—Ä–æ–≤"""
    servers = [
        ('Smart Dispatcher', 'http://localhost:8080/api/health'),
        ('General API', 'http://localhost:8085/api/health'),
        ('–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞', 'http://localhost:8086/health'),
        ('–≠–ª–µ–∫—Ç—Ä–æ—Ç–µ—Ö–Ω–∏–∫–∞', 'http://localhost:8087/api/electrical/status'),
        ('–ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ', 'http://localhost:8088/health'),
        ('–†–∞–¥–∏–æ–º–µ—Ö–∞–Ω–∏–∫–∞', 'http://localhost:8089/api/radiomechanics/status'),
        ('–ö–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä—ã', 'http://localhost:9000/api/controllers/topic/general'),
        ('–ù–µ–π—Ä–æ–Ω–Ω–∞—è —Å–µ—Ç—å', 'http://localhost:8090/api/neuro/projects')
    ]
    
    print("üîå –ü–†–û–í–ï–†–ö–ê –í–°–ï–• API –ú–û–î–£–õ–ï–ô")
    print("=" * 50)
    
    online_count = 0
    total_count = len(servers)
    
    for name, url in servers:
        try:
            response = requests.get(url, timeout=3)
            if response.status_code == 200:
                print(f"‚úÖ {name} - –û–ù–õ–ê–ô–ù")
                online_count += 1
            else:
                print(f"‚ö†Ô∏è {name} - –û–¢–í–ï–ß–ê–ï–¢ –ù–û –û–®–ò–ë–ö–ê ({response.status_code})")
        except requests.exceptions.ConnectTimeout:
            print(f"‚ùå {name} - –ù–ï–î–û–°–¢–£–ü–ï–ù (—Ç–∞–π–º–∞—É—Ç)")
        except requests.exceptions.ConnectionError:
            print(f"‚ùå {name} - –ù–ï–î–û–°–¢–£–ü–ï–ù (–Ω–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è)")
        except Exception as e:
            print(f"‚ùå {name} - –û–®–ò–ë–ö–ê: {e}")
    
    print("=" * 50)
    print(f"üìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê: {online_count}/{total_count} —Å–µ—Ä–≤–µ—Ä–æ–≤ –æ–Ω–ª–∞–π–Ω")
    
    if online_count == total_count:
        print("üéâ –í–°–ï –°–ï–†–í–ï–†–´ –†–ê–ë–û–¢–ê–Æ–¢!")
    elif online_count > total_count // 2:
        print("‚úÖ –ë–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ —Å–µ—Ä–≤–µ—Ä–æ–≤ —Ä–∞–±–æ—Ç–∞–µ—Ç")
    else:
        print("‚ö†Ô∏è –ú–Ω–æ–≥–∏–µ —Å–µ—Ä–≤–µ—Ä—ã –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã")

def test_physics_formulas():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –Ω–æ–≤—ã–µ —Ñ–∏–∑–∏—á–µ—Å–∫–∏–µ —Ñ–æ—Ä–º—É–ª—ã"""
    print("\n‚ö° –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –§–ò–ó–ò–ß–ï–°–ö–ò–• –§–û–†–ú–£–õ")
    print("=" * 50)
    
    test_cases = [
        "–ù–∞–π—Ç–∏ –Ω–∞–ø—Ä—è–∂–µ–Ω–∏–µ –ø—Ä–∏ —Ç–æ–∫–µ 2 –ê –∏ —Å–æ–ø—Ä–æ—Ç–∏–≤–ª–µ–Ω–∏–∏ 5 –û–º",
        "–ù–∞–π—Ç–∏ –∫–∏–Ω–µ—Ç–∏—á–µ—Å–∫—É—é —ç–Ω–µ—Ä–≥–∏—é —Ç–µ–ª–∞ –º–∞—Å—Å–æ–π 2 –∫–≥, –¥–≤–∏–∂—É—â–µ–≥–æ—Å—è —Å–æ —Å–∫–æ—Ä–æ—Å—Ç—å—é 10 –º/—Å",
        "–ù–∞–π—Ç–∏ –º–æ—â–Ω–æ—Å—Ç—å –ø—Ä–∏ –Ω–∞–ø—Ä—è–∂–µ–Ω–∏–∏ 12 –í –∏ —Ç–æ–∫–µ 3 –ê"
    ]
    
    for i, problem in enumerate(test_cases, 1):
        print(f"\n‚ùì –ó–∞–¥–∞—á–∞ {i}: {problem}")
        try:
            # –¢–µ—Å—Ç–∏—Ä—É–µ–º —á–µ—Ä–µ–∑ General API
            response = requests.post(
                'http://localhost:8085/api/chat',
                json={'message': problem},
                timeout=5
            )
            if response.status_code == 200:
                result = response.json()
                print(f"‚úÖ –û—Ç–≤–µ—Ç: {result.get('response', '–ù–µ—Ç –æ—Ç–≤–µ—Ç–∞')[:100]}...")
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ API: {response.status_code}")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    check_server_status()
    
    # –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–æ–≤
    print("\n‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–æ–≤...")
    time.sleep(5)
    
    check_server_status()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–æ–≤—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏
    test_physics_formulas()










