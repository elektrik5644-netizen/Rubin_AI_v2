#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç –æ—Å–Ω–æ–≤–Ω—ã—Ö —Å–µ—Ä–≤–µ—Ä–æ–≤ Rubin AI
"""

import requests
import json
import time

def quick_server_test():
    """–ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç –æ—Å–Ω–æ–≤–Ω—ã—Ö —Å–µ—Ä–≤–µ—Ä–æ–≤"""
    
    print("‚ö° –ë–´–°–¢–†–´–ô –¢–ï–°–¢ –û–°–ù–û–í–ù–´–• –°–ï–†–í–ï–†–û–í RUBIN AI")
    print("=" * 50)
    
    servers = [
        {"name": "Smart Dispatcher", "port": 8080, "endpoint": "/api/health"},
        {"name": "General API", "port": 8085, "endpoint": "/api/health"},
        {"name": "Math Server", "port": 8086, "endpoint": "/health"},
        {"name": "Electrical Server", "port": 8088, "endpoint": "/api/electrical/status"},
        {"name": "Programming Server", "port": 8089, "endpoint": "/health"},
        {"name": "Radiomechanics Server", "port": 8090, "endpoint": "/api/radiomechanics/status"},
        {"name": "Controllers Server", "port": 9000, "endpoint": "/api/controllers/topic/general"}
    ]
    
    online_count = 0
    total_count = len(servers)
    
    for server in servers:
        try:
            url = f"http://localhost:{server['port']}{server['endpoint']}"
            response = requests.get(url, timeout=3)
            
            if response.status_code == 200:
                print(f"‚úÖ {server['name']} (–ø–æ—Ä—Ç {server['port']}) - –û–ù–õ–ê–ô–ù")
                online_count += 1
            else:
                print(f"‚ùå {server['name']} (–ø–æ—Ä—Ç {server['port']}) - –û–®–ò–ë–ö–ê HTTP {response.status_code}")
                
        except requests.exceptions.ConnectionError:
            print(f"‚ùå {server['name']} (–ø–æ—Ä—Ç {server['port']}) - –ù–ï–î–û–°–¢–£–ü–ï–ù")
        except requests.exceptions.Timeout:
            print(f"‚è∞ {server['name']} (–ø–æ—Ä—Ç {server['port']}) - –¢–ê–ô–ú–ê–£–¢")
        except Exception as e:
            print(f"üí• {server['name']} (–ø–æ—Ä—Ç {server['port']}) - –û–®–ò–ë–ö–ê: {e}")
    
    print(f"\nüìä –ò–¢–û–ì–ò:")
    print(f"‚Ä¢ –í—Å–µ–≥–æ —Å–µ—Ä–≤–µ—Ä–æ–≤: {total_count}")
    print(f"‚Ä¢ –û–Ω–ª–∞–π–Ω —Å–µ—Ä–≤–µ—Ä–æ–≤: {online_count}")
    print(f"‚Ä¢ –î–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å: {(online_count/total_count*100):.1f}%")
    
    if online_count >= total_count * 0.7:
        print("üéâ –°–ò–°–¢–ï–ú–ê –†–ê–ë–û–¢–ê–ï–¢ –û–¢–õ–ò–ß–ù–û!")
    elif online_count >= total_count * 0.5:
        print("‚úÖ –°–ò–°–¢–ï–ú–ê –†–ê–ë–û–¢–ê–ï–¢ –•–û–†–û–®–û")
    else:
        print("‚ö†Ô∏è –°–ò–°–¢–ï–ú–ê –¢–†–ï–ë–£–ï–¢ –í–ù–ò–ú–ê–ù–ò–Ø")

if __name__ == "__main__":
    quick_server_test()
