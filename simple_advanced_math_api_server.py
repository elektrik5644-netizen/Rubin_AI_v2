#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
üßÆ SIMPLE ADVANCED MATH API SERVER
–£–ø—Ä–æ—â–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è –±–µ–∑ –≤–Ω–µ—à–Ω–∏—Ö –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –±–∏–±–ª–∏–æ—Ç–µ–∫
"""

from flask import Flask, jsonify, request
from flask_cors import CORS
import logging
import os
import math

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

app = Flask(__name__)
CORS(app)

# –£–ø—Ä–æ—â–µ–Ω–Ω–∞—è –±–∞–∑–∞ –∑–Ω–∞–Ω–∏–π –ø–æ –º–∞—Ç–µ–º–∞—Ç–∏–∫–µ
MATH_KNOWLEDGE = {
    "–∏–Ω—Ç–µ–≥—Ä–∞–ª": {
        "explanation": "‚à´ **–ò–Ω—Ç–µ–≥—Ä–∞–ª** - —ç—Ç–æ –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –æ–ø–µ—Ä–∞—Ü–∏—è, –æ–±—Ä–∞—Ç–Ω–∞—è –¥–∏—Ñ—Ñ–µ—Ä–µ–Ω—Ü–∏—Ä–æ–≤–∞–Ω–∏—é.\n\n**–û—Å–Ω–æ–≤–Ω—ã–µ —Ç–∏–ø—ã:**\n- **–ù–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–≥—Ä–∞–ª** ‚à´f(x)dx = F(x) + C\n- **–û–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–≥—Ä–∞–ª** ‚à´[a,b]f(x)dx = F(b) - F(a)\n\n**–ú–µ—Ç–æ–¥—ã –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω–∏—è:**\n- **–ó–∞–º–µ–Ω–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π** - u-–ø–æ–¥—Å—Ç–∞–Ω–æ–≤–∫–∞\n- **–ò–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ —á–∞—Å—Ç—è–º** - ‚à´u dv = uv - ‚à´v du\n- **–†–∞–∑–ª–æ–∂–µ–Ω–∏–µ –Ω–∞ –¥—Ä–æ–±–∏** - –¥–ª—è —Ä–∞—Ü–∏–æ–Ω–∞–ª—å–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π\n- **–¢—Ä–∏–≥–æ–Ω–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–∏–µ –ø–æ–¥—Å—Ç–∞–Ω–æ–≤–∫–∏**\n\n**–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ:**\n- –í—ã—á–∏—Å–ª–µ–Ω–∏–µ –ø–ª–æ—â–∞–¥–µ–π\n- –ù–∞—Ö–æ–∂–¥–µ–Ω–∏–µ –æ–±—ä–µ–º–æ–≤\n- –†–µ—à–µ–Ω–∏–µ –¥–∏—Ñ—Ñ–µ—Ä–µ–Ω—Ü–∏–∞–ª—å–Ω—ã—Ö —É—Ä–∞–≤–Ω–µ–Ω–∏–π\n- –¢–µ–æ—Ä–∏—è –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–µ–π\n\n**–ü—Ä–∏–º–µ—Ä—ã:**\n- ‚à´x dx = x¬≤/2 + C\n- ‚à´sin(x) dx = -cos(x) + C\n- ‚à´e^x dx = e^x + C",
        "keywords": ["–∏–Ω—Ç–µ–≥—Ä–∞–ª", "–∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ", "–ø–ª–æ—â–∞–¥—å", "–æ–±—ä–µ–º", "—Ñ—É–Ω–∫—Ü–∏—è"]
    },
    "–ø—Ä–æ–∏–∑–≤–æ–¥–Ω–∞—è": {
        "explanation": "d/dx **–ü—Ä–æ–∏–∑–≤–æ–¥–Ω–∞—è** - —ç—Ç–æ —Å–∫–æ—Ä–æ—Å—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–∏ –≤ —Ç–æ—á–∫–µ.\n\n**–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ:**\n- f'(x) = lim[h‚Üí0] [f(x+h) - f(x)]/h\n- –ì–µ–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–∏ - –Ω–∞–∫–ª–æ–Ω –∫–∞—Å–∞—Ç–µ–ª—å–Ω–æ–π\n\n**–ü—Ä–∞–≤–∏–ª–∞ –¥–∏—Ñ—Ñ–µ—Ä–µ–Ω—Ü–∏—Ä–æ–≤–∞–Ω–∏—è:**\n- **–ö–æ–Ω—Å—Ç–∞–Ω—Ç–∞:** d/dx[c] = 0\n- **–°—Ç–µ–ø–µ–Ω—å:** d/dx[x^n] = nx^(n-1)\n- **–°—É–º–º–∞:** d/dx[f+g] = f' + g'\n- **–ü—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ:** d/dx[fg] = f'g + fg'\n- **–ß–∞—Å—Ç–Ω–æ–µ:** d/dx[f/g] = (f'g - fg')/g¬≤\n- **–¶–µ–ø–Ω–æ–µ –ø—Ä–∞–≤–∏–ª–æ:** d/dx[f(g)] = f'(g) ¬∑ g'\n\n**–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ:**\n- –ù–∞—Ö–æ–∂–¥–µ–Ω–∏–µ —ç–∫—Å—Ç—Ä–µ–º—É–º–æ–≤\n- –ê–Ω–∞–ª–∏–∑ —Ñ—É–Ω–∫—Ü–∏–π\n- –†–µ—à–µ–Ω–∏–µ –∑–∞–¥–∞—á –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏\n- –§–∏–∑–∏–∫–∞ (—Å–∫–æ—Ä–æ—Å—Ç—å, —É—Å–∫–æ—Ä–µ–Ω–∏–µ)\n\n**–ü—Ä–∏–º–µ—Ä—ã:**\n- d/dx[x¬≤] = 2x\n- d/dx[sin(x)] = cos(x)\n- d/dx[e^x] = e^x",
        "keywords": ["–ø—Ä–æ–∏–∑–≤–æ–¥–Ω–∞—è", "–¥–∏—Ñ—Ñ–µ—Ä–µ–Ω—Ü–∏—Ä–æ–≤–∞–Ω–∏–µ", "—Å–∫–æ—Ä–æ—Å—Ç—å", "–∏–∑–º–µ–Ω–µ–Ω–∏–µ", "–Ω–∞–∫–ª–æ–Ω"]
    },
    "—Å–∏—Å—Ç–µ–º–∞ —É—Ä–∞–≤–Ω–µ–Ω–∏–π": {
        "explanation": "üìê **–°–∏—Å—Ç–µ–º–∞ —É—Ä–∞–≤–Ω–µ–Ω–∏–π** - –Ω–∞–±–æ—Ä —É—Ä–∞–≤–Ω–µ–Ω–∏–π —Å –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏.\n\n**–¢–∏–ø—ã —Å–∏—Å—Ç–µ–º:**\n- **–õ–∏–Ω–µ–π–Ω—ã–µ** - –≤—Å–µ —É—Ä–∞–≤–Ω–µ–Ω–∏—è –ø–µ—Ä–≤–æ–π —Å—Ç–µ–ø–µ–Ω–∏\n- **–ù–µ–ª–∏–Ω–µ–π–Ω—ã–µ** - —Å–æ–¥–µ—Ä–∂–∞—Ç —É—Ä–∞–≤–Ω–µ–Ω–∏—è –≤—ã—Å—à–∏—Ö —Å—Ç–µ–ø–µ–Ω–µ–π\n- **–û–¥–Ω–æ—Ä–æ–¥–Ω—ã–µ** - –≤—Å–µ —Å–≤–æ–±–æ–¥–Ω—ã–µ —á–ª–µ–Ω—ã —Ä–∞–≤–Ω—ã –Ω—É–ª—é\n\n**–ú–µ—Ç–æ–¥—ã —Ä–µ—à–µ–Ω–∏—è:**\n- **–ü–æ–¥—Å—Ç–∞–Ω–æ–≤–∫–∞** - –≤—ã—Ä–∞–∑–∏—Ç—å –æ–¥–Ω—É –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é —á–µ—Ä–µ–∑ –¥—Ä—É–≥—É—é\n- **–°–ª–æ–∂–µ–Ω–∏–µ/–≤—ã—á–∏—Ç–∞–Ω–∏–µ** - –∏—Å–∫–ª—é—á–∏—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ\n- **–ú–∞—Ç—Ä–∏—á–Ω—ã–π –º–µ—Ç–æ–¥** - —á–µ—Ä–µ–∑ –æ–±—Ä–∞—Ç–Ω—É—é –º–∞—Ç—Ä–∏—Ü—É\n- **–ú–µ—Ç–æ–¥ –ö—Ä–∞–º–µ—Ä–∞** - —á–µ—Ä–µ–∑ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç–µ–ª–∏\n- **–ì—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–π** - –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ –≥—Ä–∞—Ñ–∏–∫–æ–≤\n\n**–ö–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—è —Ä–µ—à–µ–Ω–∏–π:**\n- **–ï–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ** - —Å–∏—Å—Ç–µ–º–∞ —Å–æ–≤–º–µ—Å—Ç–Ω–∞ –∏ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞\n- **–ë–µ—Å–∫–æ–Ω–µ—á–Ω–æ –º–Ω–æ–≥–æ —Ä–µ—à–µ–Ω–∏–π** - —Å–∏—Å—Ç–µ–º–∞ —Å–æ–≤–º–µ—Å—Ç–Ω–∞ –∏ –Ω–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞\n- **–ù–µ—Ç —Ä–µ—à–µ–Ω–∏–π** - —Å–∏—Å—Ç–µ–º–∞ –Ω–µ—Å–æ–≤–º–µ—Å—Ç–Ω–∞\n\n**–ü—Ä–∏–º–µ—Ä:**\n2x + y = 5\nx - y = 1\n–†–µ—à–µ–Ω–∏–µ: x = 2, y = 1",
        "keywords": ["—Å–∏—Å—Ç–µ–º–∞", "—É—Ä–∞–≤–Ω–µ–Ω–∏—è", "—Ä–µ—à–µ–Ω–∏–µ", "–ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ", "–ª–∏–Ω–µ–π–Ω—ã–µ"]
    },
    "–º–∞—Ç—Ä–∏—Ü–∞": {
        "explanation": "üî¢ **–ú–∞—Ç—Ä–∏—Ü–∞** - –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞ —á–∏—Å–µ–ª, —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–Ω—ã—Ö –≤ —Å—Ç—Ä–æ–∫–∞—Ö –∏ —Å—Ç–æ–ª–±—Ü–∞—Ö.\n\n**–û–±–æ–∑–Ω–∞—á–µ–Ω–∏–µ:**\n- A = [a_ij] - –º–∞—Ç—Ä–∏—Ü–∞ —Ä–∞–∑–º–µ—Ä–∞ m√ón\n- a_ij - —ç–ª–µ–º–µ–Ω—Ç –≤ i-–π —Å—Ç—Ä–æ–∫–µ, j-–º —Å—Ç–æ–ª–±—Ü–µ\n\n**–¢–∏–ø—ã –º–∞—Ç—Ä–∏—Ü:**\n- **–ö–≤–∞–¥—Ä–∞—Ç–Ω–∞—è** - m = n\n- **–ï–¥–∏–Ω–∏—á–Ω–∞—è** - –¥–∏–∞–≥–æ–Ω–∞–ª—å–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã = 1, –æ—Å—Ç–∞–ª—å–Ω—ã–µ = 0\n- **–ù—É–ª–µ–≤–∞—è** - –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã = 0\n- **–î–∏–∞–≥–æ–Ω–∞–ª—å–Ω–∞—è** - –Ω–µ–Ω—É–ª–µ–≤—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã —Ç–æ–ª—å–∫–æ –Ω–∞ –¥–∏–∞–≥–æ–Ω–∞–ª–∏\n\n**–û–ø–µ—Ä–∞—Ü–∏–∏:**\n- **–°–ª–æ–∂–µ–Ω–∏–µ:** (A + B)_ij = a_ij + b_ij\n- **–£–º–Ω–æ–∂–µ–Ω–∏–µ –Ω–∞ —á–∏—Å–ª–æ:** (kA)_ij = k¬∑a_ij\n- **–£–º–Ω–æ–∂–µ–Ω–∏–µ –º–∞—Ç—Ä–∏—Ü:** (AB)_ij = Œ£(a_ik ¬∑ b_kj)\n- **–¢—Ä–∞–Ω—Å–ø–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ:** A^T_ij = a_ji\n\n**–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ:**\n- –†–µ—à–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º —É—Ä–∞–≤–Ω–µ–Ω–∏–π\n- –ö–æ–º–ø—å—é—Ç–µ—Ä–Ω–∞—è –≥—Ä–∞—Ñ–∏–∫–∞\n- –ú–∞—à–∏–Ω–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ\n- –ö–≤–∞–Ω—Ç–æ–≤–∞—è –º–µ—Ö–∞–Ω–∏–∫–∞\n\n**–û–ø—Ä–µ–¥–µ–ª–∏—Ç–µ–ª—å:**\n- –î–ª—è 2√ó2: det(A) = ad - bc\n- –î–ª—è 3√ó3: –ø—Ä–∞–≤–∏–ª–æ –°–∞—Ä—Ä—é—Å–∞",
        "keywords": ["–º–∞—Ç—Ä–∏—Ü–∞", "–æ–ø—Ä–µ–¥–µ–ª–∏—Ç–µ–ª—å", "–æ–±—Ä–∞—Ç–Ω–∞—è", "—Ç—Ä–∞–Ω—Å–ø–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ", "—É–º–Ω–æ–∂–µ–Ω–∏–µ"]
    },
    "–∫–æ–º–ø–ª–µ–∫—Å–Ω—ã–µ —á–∏—Å–ª–∞": {
        "explanation": "‚ÑÇ **–ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–µ —á–∏—Å–ª–∞** - —á–∏—Å–ª–∞ –≤–∏–¥–∞ z = a + bi, –≥–¥–µ i¬≤ = -1.\n\n**–ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã:**\n- **a** - –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–∞—è —á–∞—Å—Ç—å (Re z)\n- **b** - –º–Ω–∏–º–∞—è —á–∞—Å—Ç—å (Im z)\n- **i** - –º–Ω–∏–º–∞—è –µ–¥–∏–Ω–∏—Ü–∞\n\n**–§–æ—Ä–º—ã –∑–∞–ø–∏—Å–∏:**\n- **–ê–ª–≥–µ–±—Ä–∞–∏—á–µ—Å–∫–∞—è:** z = a + bi\n- **–¢—Ä–∏–≥–æ–Ω–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–∞—è:** z = r(cos œÜ + i sin œÜ)\n- **–ü–æ–∫–∞–∑–∞—Ç–µ–ª—å–Ω–∞—è:** z = re^(iœÜ)\n\n**–û–ø–µ—Ä–∞—Ü–∏–∏:**\n- **–°–ª–æ–∂–µ–Ω–∏–µ:** (a + bi) + (c + di) = (a + c) + (b + d)i\n- **–£–º–Ω–æ–∂–µ–Ω–∏–µ:** (a + bi)(c + di) = (ac - bd) + (ad + bc)i\n- **–î–µ–ª–µ–Ω–∏–µ:** (a + bi)/(c + di) = [(ac + bd) + (bc - ad)i]/(c¬≤ + d¬≤)\n\n**–°–≤–æ–π—Å—Ç–≤–∞:**\n- **–ú–æ–¥—É–ª—å:** |z| = ‚àö(a¬≤ + b¬≤)\n- **–ê—Ä–≥—É–º–µ–Ω—Ç:** arg(z) = arctan(b/a)\n- **–°–æ–ø—Ä—è–∂–µ–Ω–Ω–æ–µ:** z* = a - bi\n\n**–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ:**\n- –≠–ª–µ–∫—Ç—Ä–æ—Ç–µ—Ö–Ω–∏–∫–∞ (AC —Ü–µ–ø–∏)\n- –°–∏–≥–Ω–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞\n- –ö–≤–∞–Ω—Ç–æ–≤–∞—è –º–µ—Ö–∞–Ω–∏–∫–∞\n- –¢–µ–æ—Ä–∏—è —Ñ—É–Ω–∫—Ü–∏–π",
        "keywords": ["–∫–æ–º–ø–ª–µ–∫—Å–Ω—ã–µ", "–º–Ω–∏–º–∞—è –µ–¥–∏–Ω–∏—Ü–∞", "–º–æ–¥—É–ª—å", "–∞—Ä–≥—É–º–µ–Ω—Ç", "—Å–æ–ø—Ä—è–∂–µ–Ω–Ω–æ–µ"]
    },
    "–≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å": {
        "explanation": "üé≤ **–¢–µ–æ—Ä–∏—è –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–µ–π** - —Ä–∞–∑–¥–µ–ª –º–∞—Ç–µ–º–∞—Ç–∏–∫–∏, –∏–∑—É—á–∞—é—â–∏–π —Å–ª—É—á–∞–π–Ω—ã–µ —è–≤–ª–µ–Ω–∏—è.\n\n**–û—Å–Ω–æ–≤–Ω—ã–µ –ø–æ–Ω—è—Ç–∏—è:**\n- **–°–æ–±—ã—Ç–∏–µ** - –∏—Å—Ö–æ–¥ —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∞\n- **–í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å** - –º–µ—Ä–∞ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —Å–æ–±—ã—Ç–∏—è (0 ‚â§ P ‚â§ 1)\n- **–ü—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ —ç–ª–µ–º–µ–Ω—Ç–∞—Ä–Ω—ã—Ö —Å–æ–±—ã—Ç–∏–π** - –º–Ω–æ–∂–µ—Å—Ç–≤–æ –≤—Å–µ—Ö –≤–æ–∑–º–æ–∂–Ω—ã—Ö –∏—Å—Ö–æ–¥–æ–≤\n\n**–¢–∏–ø—ã —Å–æ–±—ã—Ç–∏–π:**\n- **–î–æ—Å—Ç–æ–≤–µ—Ä–Ω–æ–µ** - P = 1\n- **–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ–µ** - P = 0\n- **–ù–µ—Å–æ–≤–º–µ—Å—Ç–Ω—ã–µ** - –Ω–µ –º–æ–≥—É—Ç –ø—Ä–æ–∏–∑–æ–π—Ç–∏ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ\n- **–ù–µ–∑–∞–≤–∏—Å–∏–º—ã–µ** - –Ω–µ –≤–ª–∏—è—é—Ç –¥—Ä—É–≥ –Ω–∞ –¥—Ä—É–≥–∞\n\n**–§–æ—Ä–º—É–ª—ã:**\n- **–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è:** P(A) = m/n (m - –±–ª–∞–≥–æ–ø—Ä–∏—è—Ç–Ω—ã–µ, n - –≤—Å–µ)\n- **–£—Å–ª–æ–≤–Ω–∞—è:** P(A|B) = P(A‚à©B)/P(B)\n- **–ü–æ–ª–Ω–∞—è –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å:** P(A) = Œ£ P(A|B_i)P(B_i)\n- **–ë–∞–π–µ—Å–∞:** P(B_i|A) = P(A|B_i)P(B_i)/P(A)\n\n**–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è:**\n- **–ë–∏–Ω–æ–º–∏–∞–ª—å–Ω–æ–µ** - –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—Å–ø–µ—Ö–æ–≤ –≤ n –∏—Å–ø—ã—Ç–∞–Ω–∏—è—Ö\n- **–ù–æ—Ä–º–∞–ª—å–Ω–æ–µ** - –Ω–µ–ø—Ä–µ—Ä—ã–≤–Ω–æ–µ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ\n- **–ü—É–∞—Å—Å–æ–Ω–∞** - —Ä–µ–¥–∫–∏–µ —Å–æ–±—ã—Ç–∏—è",
        "keywords": ["–≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å", "—Å–æ–±—ã—Ç–∏–µ", "—Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ", "—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", "—Å–ª—É—á–∞–π–Ω–æ—Å—Ç—å"]
    }
}

@app.route('/api/advanced_math/health', methods=['GET'])
def health():
    return jsonify({
        "status": "healthy",
        "message": "Simple Advanced Math API —Ä–∞–±–æ—Ç–∞–µ—Ç",
        "module": "Advanced Math API",
        "version": "2.0",
        "capabilities": ["–ò–Ω—Ç–µ–≥—Ä–∞–ª—ã", "–ü—Ä–æ–∏–∑–≤–æ–¥–Ω—ã–µ", "–°–∏—Å—Ç–µ–º—ã —É—Ä–∞–≤–Ω–µ–Ω–∏–π", "–ú–∞—Ç—Ä–∏—Ü—ã", "–ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–µ —á–∏—Å–ª–∞", "–í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å"]
    }), 200

@app.route('/api/advanced_math/status', methods=['GET'])
def status():
    return jsonify({
        "status": "healthy",
        "message": "Simple Advanced Math API —Ä–∞–±–æ—Ç–∞–µ—Ç",
        "timestamp": os.getenv('FLASK_RUN_FROM_START_TIME')
    }), 200

@app.route('/api/advanced_math/calculate', methods=['POST'])
def calculate():
    """–í—ã—á–∏—Å–ª–µ–Ω–∏—è –ø–æ –º–∞—Ç–µ–º–∞—Ç–∏–∫–µ"""
    data = request.get_json()
    expression = data.get('expression', '').lower()
    
    # –ü–æ–∏—Å–∫ –ø–æ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º
    for key, info in MATH_KNOWLEDGE.items():
        for keyword in info['keywords']:
            if keyword in expression:
                return jsonify({
                    "result": info['explanation'],
                    "category": "advanced_math",
                    "matched_keyword": keyword,
                    "examples": [
                        "‚à´x¬≤ dx = x¬≥/3 + C",
                        "d/dx[sin(x)] = cos(x)",
                        "x + y = 5, x - y = 1 ‚Üí x = 3, y = 2"
                    ]
                }), 200
    
    return jsonify({
        "result": "–î–ª—è –≤—ã—á–∏—Å–ª–µ–Ω–∏–π —É—Ç–æ—á–Ω–∏—Ç–µ —Ç–µ–º—É: '–∏–Ω—Ç–µ–≥—Ä–∞–ª', '–ø—Ä–æ–∏–∑–≤–æ–¥–Ω–∞—è', '—Å–∏—Å—Ç–µ–º–∞ —É—Ä–∞–≤–Ω–µ–Ω–∏–π', '–º–∞—Ç—Ä–∏—Ü–∞', '–∫–æ–º–ø–ª–µ–∫—Å–Ω—ã–µ —á–∏—Å–ª–∞' –∏–ª–∏ '–≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å'.",
        "available_topics": list(MATH_KNOWLEDGE.keys()),
        "category": "advanced_math"
    }), 200

@app.route('/api/advanced_math/solve', methods=['POST'])
def solve():
    """–†–µ—à–µ–Ω–∏–µ –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –∑–∞–¥–∞—á"""
    data = request.get_json()
    problem = data.get('problem', '').lower()
    
    # –ü—Ä–æ—Å—Ç—ã–µ –≤—ã—á–∏—Å–ª–µ–Ω–∏—è
    if 'sin' in problem and 'cos' in problem:
        return jsonify({
            "solution": "sin¬≤(x) + cos¬≤(x) = 1 (–æ—Å–Ω–æ–≤–Ω–æ–µ —Ç—Ä–∏–≥–æ–Ω–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–æ–µ —Ç–æ–∂–¥–µ—Å—Ç–≤–æ)",
            "steps": [
                "–ò—Å–ø–æ–ª—å–∑—É–µ–º –æ—Å–Ω–æ–≤–Ω–æ–µ —Ç—Ä–∏–≥–æ–Ω–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–æ–µ —Ç–æ–∂–¥–µ—Å—Ç–≤–æ",
                "sin¬≤(x) + cos¬≤(x) = 1 –¥–ª—è –ª—é–±–æ–≥–æ x"
            ],
            "category": "advanced_math"
        }), 200
    
    if '–∫–≤–∞–¥—Ä–∞—Ç–Ω–æ–µ' in problem or 'ax¬≤' in problem:
        return jsonify({
            "solution": "–ö–≤–∞–¥—Ä–∞—Ç–Ω–æ–µ —É—Ä–∞–≤–Ω–µ–Ω–∏–µ ax¬≤ + bx + c = 0 —Ä–µ—à–∞–µ—Ç—Å—è –ø–æ —Ñ–æ—Ä–º—É–ª–µ: x = (-b ¬± ‚àö(b¬≤ - 4ac)) / 2a",
            "steps": [
                "–û–ø—Ä–µ–¥–µ–ª–∏—Ç–µ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã a, b, c",
                "–í—ã—á–∏—Å–ª–∏—Ç–µ –¥–∏—Å–∫—Ä–∏–º–∏–Ω–∞–Ω—Ç D = b¬≤ - 4ac",
                "–ï—Å–ª–∏ D > 0: –¥–≤–∞ –∫–æ—Ä–Ω—è",
                "–ï—Å–ª–∏ D = 0: –æ–¥–∏–Ω –∫–æ—Ä–µ–Ω—å",
                "–ï—Å–ª–∏ D < 0: –Ω–µ—Ç –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã—Ö –∫–æ—Ä–Ω–µ–π"
            ],
            "category": "advanced_math"
        }), 200
    
    return jsonify({
        "solution": "–î–ª—è —Ä–µ—à–µ–Ω–∏—è –∑–∞–¥–∞—á–∏ —É—Ç–æ—á–Ω–∏—Ç–µ —Ç–∏–ø: —Ç—Ä–∏–≥–æ–Ω–æ–º–µ—Ç—Ä–∏—è, –∞–ª–≥–µ–±—Ä–∞, –≥–µ–æ–º–µ—Ç—Ä–∏—è, –∞–Ω–∞–ª–∏–∑.",
        "available_methods": ["–¢—Ä–∏–≥–æ–Ω–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–∏–µ —Ç–æ–∂–¥–µ—Å—Ç–≤–∞", "–ö–≤–∞–¥—Ä–∞—Ç–Ω—ã–µ —É—Ä–∞–≤–Ω–µ–Ω–∏—è", "–°–∏—Å—Ç–µ–º—ã —É—Ä–∞–≤–Ω–µ–Ω–∏–π", "–ü—Ä–æ–∏–∑–≤–æ–¥–Ω—ã–µ", "–ò–Ω—Ç–µ–≥—Ä–∞–ª—ã"],
        "category": "advanced_math"
    }), 200

if __name__ == '__main__':
    logger.info("üßÆ Simple Advanced Math API Server –∑–∞–ø—É—â–µ–Ω")
    app.run(port=8100, debug=False, use_reloader=False)
