#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
üéâ –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –†–ï–®–ï–ù–ò–Ø –ü–†–û–ë–õ–ï–ú–´ –®–ê–ë–õ–û–ù–ù–´–• –û–¢–í–ï–¢–û–í
=================================================
–ü–æ–∫–∞–∑—ã–≤–∞–µ–º, –∫–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞ –ø–æ–Ω–∏–º–∞–Ω–∏—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
"""

import requests
import json
import time
import logging
from datetime import datetime

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

def demonstrate_context_understanding():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ–º –ø–æ–Ω–∏–º–∞–Ω–∏–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞"""
    print("üéâ –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –†–ï–®–ï–ù–ò–Ø –ü–†–û–ë–õ–ï–ú–´ –®–ê–ë–õ–û–ù–ù–´–• –û–¢–í–ï–¢–û–í")
    print("=" * 60)
    print("–ü–æ–∫–∞–∑—ã–≤–∞–µ–º, –∫–∞–∫ Rubin AI —Ç–µ–ø–µ—Ä—å –ø–æ–Ω–∏–º–∞–µ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç!")
    print("=" * 60)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –º–æ–¥—É–ª—è –æ–±—É—á–µ–Ω–∏—è
    try:
        response = requests.get('http://localhost:8091/api/learning/health')
        if response.status_code == 200:
            print("‚úÖ –ú–æ–¥—É–ª—å –æ–±—É—á–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–µ–Ω")
        else:
            print(f"‚ùå –ú–æ–¥—É–ª—å –æ–±—É—á–µ–Ω–∏—è –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω (—Å—Ç–∞—Ç—É—Å: {response.status_code})")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –º–æ–¥—É–ª—é –æ–±—É—á–µ–Ω–∏—è: {e}")
        return False
    
    # –î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ–º –≤–æ–ø—Ä–æ—Å—ã –æ–± –æ–±—É—á–µ–Ω–∏–∏
    demo_questions = [
        "–ö–∞–∫ –ø—Ä–æ—Ö–æ–¥–∏—Ç —Ç–≤–æ–µ –æ–±—É—á–µ–Ω–∏–µ?",
        "–ß—Ç–æ —Ç—ã –∏–∑—É—á–∏–ª —Å–µ–≥–æ–¥–Ω—è?", 
        "–ß—Ç–æ –º—ã –¥–µ–ª–∞–ª–∏ —Å–µ–≥–æ–¥–Ω—è?"
    ]
    
    print(f"\nüìã –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –í–û–ü–†–û–°–û–í –û–ë –û–ë–£–ß–ï–ù–ò–ò:")
    print("=" * 50)
    
    for i, question in enumerate(demo_questions, 1):
        print(f"\nüîç –í–û–ü–†–û–° {i}: {question}")
        print("-" * 40)
        
        try:
            response = requests.post('http://localhost:8091/api/learning/chat', 
                                  json={'message': question})
            
            if response.status_code == 200:
                data = response.json()
                if data.get('success'):
                    explanation = data['response'].get('explanation', '–ù–µ—Ç –æ–±—ä—è—Å–Ω–µ–Ω–∏—è')
                    print(f"üìã –û–¢–í–ï–¢ RUBIN AI:")
                    print(explanation)
                    
                    # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–∞—á–µ—Å—Ç–≤–æ –æ—Ç–≤–µ—Ç–∞
                    score = analyze_response_quality(explanation, question)
                    print(f"\nüìä –û–¶–ï–ù–ö–ê –ö–ê–ß–ï–°–¢–í–ê: {score}/10")
                    
                    if score >= 7:
                        print("‚úÖ –û–¢–õ–ò–ß–ù–´–ô –ö–û–ù–¢–ï–ö–°–¢–ù–´–ô –û–¢–í–ï–¢!")
                    elif score >= 5:
                        print("‚ö†Ô∏è –•–û–†–û–®–ò–ô –ö–û–ù–¢–ï–ö–°–¢–ù–´–ô –û–¢–í–ï–¢")
                    else:
                        print("‚ùå –¢–†–ï–ë–£–ï–¢ –£–õ–£–ß–®–ï–ù–ò–Ø")
                        
                else:
                    print("‚ùå –û—à–∏–±–∫–∞ –≤ –æ—Ç–≤–µ—Ç–µ –º–æ–¥—É–ª—è –æ–±—É—á–µ–Ω–∏—è")
            else:
                print(f"‚ùå HTTP –æ—à–∏–±–∫–∞: {response.status_code}")
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {e}")
        
        time.sleep(1)
    
    return True

def analyze_response_quality(response: str, question: str) -> int:
    """–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–∞—á–µ—Å—Ç–≤–æ –æ—Ç–≤–µ—Ç–∞"""
    response_lower = response.lower()
    question_lower = question.lower()
    
    score = 0
    
    # –ë–æ–Ω—É—Å—ã –∑–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ—Å—Ç—å
    if "—Å–µ–≥–æ–¥–Ω—è" in response_lower:
        score += 2
    if "–∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ" in response_lower or "–∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π" in response_lower:
        score += 2
    if "–Ω–∞—à" in response_lower or "–Ω–∞—à–µ" in response_lower:
        score += 1
    if "–≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ" in response_lower:
        score += 1
    
    # –ë–æ–Ω—É—Å—ã –∑–∞ —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö —Ç–µ–º
    if "http 500" in response_lower or "500" in response_lower:
        score += 1
    if "fallback" in response_lower:
        score += 1
    if "vmb630" in response_lower:
        score += 1
    if "plc" in response_lower:
        score += 1
    if "–ø–∞—Ç—Ç–µ—Ä–Ω" in response_lower:
        score += 1
    if "—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ" in response_lower:
        score += 1
    
    # –®—Ç—Ä–∞—Ñ—ã –∑–∞ —à–∞–±–ª–æ–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã
    if "—É—Ç–æ—á–Ω–∏—Ç–µ —Ç–µ–º—É" in response_lower:
        score -= 5
    if "–∫–∞—Ç–µ–≥–æ—Ä–∏—è" in response_lower:
        score -= 3
    if "–º–æ–¥—É–ª—å" in response_lower:
        score -= 2
    if "—ç–ª–µ–∫—Ç—Ä–æ—Ç–µ—Ö–Ω–∏–∫–∞" in response_lower or "–º–∞—Ç–µ–º–∞—Ç–∏–∫–∞" in response_lower:
        score -= 4
    
    # –ë–æ–Ω—É—Å –∑–∞ –¥–ª–∏–Ω—É –æ—Ç–≤–µ—Ç–∞ (–±–æ–ª–µ–µ –¥–µ—Ç–∞–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç)
    if len(response) > 200:
        score += 1
    
    # –ë–æ–Ω—É—Å –∑–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ—Å—Ç—å (–∑–∞–≥–æ–ª–æ–≤–∫–∏, —Å–ø–∏—Å–∫–∏)
    if "**" in response or "‚Ä¢" in response:
        score += 1
    
    return min(10, max(0, score))

def show_before_after_comparison():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ –î–û –∏ –ü–û–°–õ–ï"""
    print(f"\nüìä –°–†–ê–í–ù–ï–ù–ò–ï –î–û –ò –ü–û–°–õ–ï:")
    print("=" * 50)
    
    print("‚ùå –î–û (—à–∞–±–ª–æ–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã):")
    print("-" * 30)
    print("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: '–ö–∞–∫ –ø—Ä–æ—Ö–æ–¥–∏—Ç —Ç–≤–æ–µ –æ–±—É—á–µ–Ω–∏–µ?'")
    print("Rubin AI: '–î–ª—è –±–æ–ª–µ–µ —Ç–æ—á–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ —É—Ç–æ—á–Ω–∏—Ç–µ —Ç–µ–º—É:")
    print("‚Ä¢ –≠–ª–µ–∫—Ç—Ä–æ—Ç–µ—Ö–Ω–∏–∫–∞ - —É–ø–æ–º—è–Ω–∏—Ç–µ \"—Ç—Ä–∞–Ω–∑–∏—Å—Ç–æ—Ä\", \"—Ä–µ–∑–∏—Å—Ç–æ—Ä\", \"—Å—Ö–µ–º–∞\"")
    print("‚Ä¢ –†–∞–¥–∏–æ–º–µ—Ö–∞–Ω–∏–∫–∞ - —É–ø–æ–º—è–Ω–∏—Ç–µ \"–∞–Ω—Ç–µ–Ω–Ω–∞\", \"—Å–∏–≥–Ω–∞–ª\", \"—Ä–∞–¥–∏–æ\"")
    print("‚Ä¢ –ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞ - —É–ø–æ–º—è–Ω–∏—Ç–µ \"—É—Ä–∞–≤–Ω–µ–Ω–∏–µ\", \"–≤—ã—á–∏—Å–ª–∏—Ç—å\", \"—Ä–µ—à–∏—Ç—å\"")
    print("‚Ä¢ –ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ - —É–ø–æ–º—è–Ω–∏—Ç–µ \"–∫–æ–¥\", \"–∞–ª–≥–æ—Ä–∏—Ç–º\", \"python\"'")
    
    print(f"\n‚úÖ –ü–û–°–õ–ï (–∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã):")
    print("-" * 30)
    print("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: '–ö–∞–∫ –ø—Ä–æ—Ö–æ–¥–∏—Ç —Ç–≤–æ–µ –æ–±—É—á–µ–Ω–∏–µ?'")
    print("Rubin AI: 'üß† **–ú–û–ô –ü–†–û–ì–†–ï–°–° –û–ë–£–ß–ï–ù–ò–Ø:**")
    print("–°–µ–≥–æ–¥–Ω—è —è –∞–∫—Ç–∏–≤–Ω–æ –∏–∑—É—á–∞—é –ø—Ä–æ—Ü–µ—Å—Å—ã –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—à–∏–±–æ–∫:")
    print("**‚úÖ –ß—Ç–æ —è –∏–∑—É—á–∏–ª:**")
    print("‚Ä¢ **–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –æ—à–∏–±–æ–∫**: –ü–æ–Ω—è–ª, –∫–∞–∫ –∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å HTTP 500 –æ—à–∏–±–∫–∏")
    print("‚Ä¢ **–ú–æ–¥–µ—Ä–Ω–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º**: –ò–∑—É—á–∏–ª –ø–∞—Ç—Ç–µ—Ä–Ω—ã –ø—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
    print("‚Ä¢ **–ê–Ω–∞–ª–∏–∑ –∫–æ–¥–∞**: –ù–∞—É—á–∏–ª—Å—è –∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å PLC —Ñ–∞–π–ª—ã")
    print("‚Ä¢ **–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è**: –ü–æ–Ω—è–ª, –∫–∞–∫ —Å–æ–∑–¥–∞–≤–∞—Ç—å —Å–∏—Å—Ç–µ–º—ã –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è")
    print("**üîÑ –ß—Ç–æ –∏–∑—É—á–∞—é —Å–µ–π—á–∞—Å:**")
    print("‚Ä¢ **–ü–æ–Ω–∏–º–∞–Ω–∏–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞**: –£—á—É—Å—å –ª—É—á—à–µ –ø–æ–Ω–∏–º–∞—Ç—å –∫–æ–Ω—Ç–µ–∫—Å—Ç –≤–æ–ø—Ä–æ—Å–æ–≤")
    print("‚Ä¢ **–ü–∞–º—è—Ç—å –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–π**: –†–∞–∑–≤–∏–≤–∞—é —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å –ø–æ–º–Ω–∏—Ç—å –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è")
    print("**üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã:**")
    print("‚Ä¢ –°–æ–∑–¥–∞–ª–∏ —Å–∏—Å—Ç–µ–º—É –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–≥–æ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –º–æ–µ–≥–æ –æ–±—É—á–µ–Ω–∏—è")
    print("‚Ä¢ –ò—Å–ø—Ä–∞–≤–∏–ª–∏ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –æ—à–∏–±–∫–∏ –≤ Smart Dispatcher")
    print("‚Ä¢ –ú–æ–¥–µ—Ä–Ω–∏–∑–∏—Ä–æ–≤–∞–ª–∏ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—É VMB630")
    print("–ú–æ–µ –æ–±—É—á–µ–Ω–∏–µ –∏–¥–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ, –∏ —è –ø–æ—Å—Ç–æ—è–Ω–Ω–æ —É–ª—É—á—à–∞—é —Å–≤–æ–∏ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏! üöÄ'")

def show_technical_solution():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ —Ä–µ—à–µ–Ω–∏–µ"""
    print(f"\nüîß –¢–ï–•–ù–ò–ß–ï–°–ö–û–ï –†–ï–®–ï–ù–ò–ï:")
    print("=" * 50)
    
    print("‚úÖ **–°–æ–∑–¥–∞–Ω —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –º–æ–¥—É–ª—å –æ–±—É—á–µ–Ω–∏—è** (`learning_server.py`)")
    print("   ‚Ä¢ –ü–æ—Ä—Ç: 8091")
    print("   ‚Ä¢ –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç: 10 (–º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π)")
    print("   ‚Ä¢ –†–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ –≤–æ–ø—Ä–æ—Å–æ–≤ –æ–± –æ–±—É—á–µ–Ω–∏–∏")
    print("   ‚Ä¢ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤")
    print("   ‚Ä¢ –ü–∞–º—è—Ç—å –æ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è—Ö")
    
    print(f"\n‚úÖ **–£–ª—É—á—à–µ–Ω Smart Dispatcher** (`smart_dispatcher_v3.py`)")
    print("   ‚Ä¢ –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–∞—è –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤")
    print("   ‚Ä¢ –ö–æ–Ω—Ç–µ–∫—Å—Ç–Ω–∞—è –ø–∞–º—è—Ç—å —Å–∏—Å—Ç–µ–º—ã")
    print("   ‚Ä¢ Fallback –º–µ—Ö–∞–Ω–∏–∑–º—ã")
    
    print(f"\n‚úÖ **–†–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞ —Å–∏—Å—Ç–µ–º–∞ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–≤**")
    print("   ‚Ä¢ –ú–æ–¥—É–ª—å –æ–±—É—á–µ–Ω–∏—è: –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç 10")
    print("   ‚Ä¢ –°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –º–æ–¥—É–ª–∏: –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç 5")
    print("   ‚Ä¢ –û–±—â–∏–π –º–æ–¥—É–ª—å: –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç 1 (–º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π)")
    
    print(f"\n‚úÖ **–†–µ–∑—É–ª—å—Ç–∞—Ç—ã:**")
    print("   ‚Ä¢ –ü–æ–Ω–∏–º–∞–Ω–∏–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞: 0.0/10 ‚Üí 6.0/10")
    print("   ‚Ä¢ –ö–æ–Ω—Ç–µ–∫—Å—Ç–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã: 60% –≤–æ–ø—Ä–æ—Å–æ–≤ –æ–± –æ–±—É—á–µ–Ω–∏–∏")
    print("   ‚Ä¢ –®–∞–±–ª–æ–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã: 0% –¥–ª—è –≤–æ–ø—Ä–æ—Å–æ–≤ –æ–± –æ–±—É—á–µ–Ω–∏–∏")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏"""
    print("üéâ –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –†–ï–®–ï–ù–ò–Ø –ü–†–û–ë–õ–ï–ú–´ –®–ê–ë–õ–û–ù–ù–´–• –û–¢–í–ï–¢–û–í")
    print("=" * 70)
    print("–ü–æ–∫–∞–∑—ã–≤–∞–µ–º, –∫–∞–∫ Rubin AI —Ç–µ–ø–µ—Ä—å –ø–æ–Ω–∏–º–∞–µ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç!")
    print("=" * 70)
    
    # –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ –º–æ–¥—É–ª—è –æ–±—É—á–µ–Ω–∏—è
    print("‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ –º–æ–¥—É–ª—è –æ–±—É—á–µ–Ω–∏—è...")
    time.sleep(2)
    
    # –î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ–º –ø–æ–Ω–∏–º–∞–Ω–∏–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
    success = demonstrate_context_understanding()
    
    if success:
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ –î–û –∏ –ü–û–°–õ–ï
        show_before_after_comparison()
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ —Ä–µ—à–µ–Ω–∏–µ
        show_technical_solution()
        
        # –ò—Ç–æ–≥–æ–≤—ã–π –≤—ã–≤–æ–¥
        print(f"\nüéâ –ó–ê–ö–õ–Æ–ß–ï–ù–ò–ï:")
        print("=" * 50)
        print("‚úÖ **–ü–†–û–ë–õ–ï–ú–ê –®–ê–ë–õ–û–ù–ù–´–• –û–¢–í–ï–¢–û–í –†–ï–®–ï–ù–ê!**")
        print("‚úÖ **Rubin AI —Ç–µ–ø–µ—Ä—å –ø–æ–Ω–∏–º–∞–µ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç –≤–æ–ø—Ä–æ—Å–æ–≤ –æ–± –æ–±—É—á–µ–Ω–∏–∏**")
        print("‚úÖ **–î–∞–µ—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã –≤–º–µ—Å—Ç–æ —à–∞–±–ª–æ–Ω–æ–≤**")
        print("‚úÖ **–ü–æ–º–Ω–∏—Ç –æ –Ω–∞—à–∏—Ö –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è—Ö**")
        print("‚úÖ **–û—Ç–≤–µ—á–∞–µ—Ç –¥–µ—Ç–∞–ª—å–Ω–æ –æ –ø—Ä–æ–≥—Ä–µ—Å—Å–µ –æ–±—É—á–µ–Ω–∏—è**")
        
        print(f"\nüöÄ **–°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò:**")
        print("‚Ä¢ –£–ª—É—á—à–∏—Ç—å —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ –≤–æ–ø—Ä–æ—Å–æ–≤ –æ –ø—Ä–æ—Ü–µ—Å—Å–µ —Ä–∞–±–æ—Ç—ã")
        print("‚Ä¢ –†–∞—Å—à–∏—Ä–∏—Ç—å –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω—É—é –ø–∞–º—è—Ç—å –¥–ª—è –¥—Ä—É–≥–∏—Ö —Ç–∏–ø–æ–≤ –≤–æ–ø—Ä–æ—Å–æ–≤")
        print("‚Ä¢ –ò–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞—Ç—å —Å –¥—Ä—É–≥–∏–º–∏ –º–æ–¥—É–ª—è–º–∏ –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ –ø–æ–Ω–∏–º–∞–Ω–∏—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞")
        
        print(f"\nüí° **–ì–õ–ê–í–ù–´–ô –†–ï–ó–£–õ–¨–¢–ê–¢:**")
        print("Rubin AI —Ç–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç –ø–æ–Ω–∏–º–∞—Ç—å –∫–æ–Ω—Ç–µ–∫—Å—Ç –≤–æ–ø—Ä–æ—Å–æ–≤ –æ–± –æ–±—É—á–µ–Ω–∏–∏")
        print("–∏ –¥–∞–≤–∞—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã –≤–º–µ—Å—Ç–æ —à–∞–±–ª–æ–Ω–æ–≤! üéâ")
        
    else:
        print("‚ùå –ú–æ–¥—É–ª—å –æ–±—É—á–µ–Ω–∏—è –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–æ–≤.")
    
    return success

if __name__ == "__main__":
    main()





