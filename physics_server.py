#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Physics Server - —Å–µ—Ä–≤–µ—Ä –¥–ª—è —Ñ–∏–∑–∏—á–µ—Å–∫–∏—Ö –≤–æ–ø—Ä–æ—Å–æ–≤
"""

import logging
from datetime import datetime
from flask import Flask, request, jsonify
from flask_cors import CORS

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

app = Flask(__name__)
CORS(app)

# –ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π –ø–æ —Ñ–∏–∑–∏–∫–µ
PHYSICS_KNOWLEDGE = {
    '—Ñ–æ—Ç–æ–Ω': {
        'definition': '–§–æ—Ç–æ–Ω ‚Äî —ç–ª–µ–º–µ–Ω—Ç–∞—Ä–Ω–∞—è —á–∞—Å—Ç–∏—Ü–∞, –∫–≤–∞–Ω—Ç —ç–ª–µ–∫—Ç—Ä–æ–º–∞–≥–Ω–∏—Ç–Ω–æ–≥–æ –∏–∑–ª—É—á–µ–Ω–∏—è',
        'properties': [
            '–ù–µ –∏–º–µ–µ—Ç –º–∞—Å—Å—ã –ø–æ–∫–æ—è',
            '–î–≤–∏–∂–µ—Ç—Å—è —Å–æ —Å–∫–æ—Ä–æ—Å—Ç—å—é —Å–≤–µ—Ç–∞',
            '–ò–º–µ–µ—Ç —ç–Ω–µ—Ä–≥–∏—é E = hŒΩ',
            '–ò–º–µ–µ—Ç –∏–º–ø—É–ª—å—Å p = h/Œª',
            '–ú–æ–∂–µ—Ç –ø—Ä–æ—è–≤–ª—è—Ç—å —Å–≤–æ–π—Å—Ç–≤–∞ –∫–∞–∫ —á–∞—Å—Ç–∏—Ü—ã, —Ç–∞–∫ –∏ –≤–æ–ª–Ω—ã'
        ],
        'applications': [
            '–õ–∞–∑–µ—Ä—ã',
            '–°–æ–ª–Ω–µ—á–Ω—ã–µ –±–∞—Ç–∞—Ä–µ–∏',
            '–§–æ—Ç–æ—ç–ª–µ–º–µ–Ω—Ç—ã',
            '–û–ø—Ç–∏—á–µ—Å–∫–∞—è —Å–≤—è–∑—å',
            '–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞'
        ]
    },
    '—ç–ª–µ–∫—Ç—Ä–æ–Ω': {
        'definition': '–≠–ª–µ–∫—Ç—Ä–æ–Ω ‚Äî —ç–ª–µ–º–µ–Ω—Ç–∞—Ä–Ω–∞—è —á–∞—Å—Ç–∏—Ü–∞ —Å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–º —ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å–∫–∏–º –∑–∞—Ä—è–¥–æ–º',
        'properties': [
            '–ú–∞—Å—Å–∞: 9.109 √ó 10‚Åª¬≥¬π –∫–≥',
            '–ó–∞—Ä—è–¥: -1.602 √ó 10‚Åª¬π‚Åπ –ö–ª',
            '–°–ø–∏–Ω: 1/2',
            '–§–µ—Ä–º–∏–æ–Ω',
            '–£—á–∞—Å—Ç–≤—É–µ—Ç –≤ —Ö–∏–º–∏—á–µ—Å–∫–∏—Ö —Å–≤—è–∑—è—Ö'
        ],
        'applications': [
            '–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞',
            '–•–∏–º–∏—á–µ—Å–∫–∏–µ —Ä–µ–∞–∫—Ü–∏–∏',
            '–≠–ª–µ–∫—Ç—Ä–∏—á–µ—Å–∫–∏–π —Ç–æ–∫',
            '–ö–∞—Ç–æ–¥–Ω—ã–µ –ª—É—á–∏',
            '–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã–µ –º–∏–∫—Ä–æ—Å–∫–æ–ø—ã'
        ]
    },
    '–∞—Ç–æ–º': {
        'definition': '–ê—Ç–æ–º ‚Äî –Ω–∞–∏–º–µ–Ω—å—à–∞—è —á–∞—Å—Ç–∏—Ü–∞ —Ö–∏–º–∏—á–µ—Å–∫–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞',
        'structure': [
            '–Ø–¥—Ä–æ (–ø—Ä–æ—Ç–æ–Ω—ã + –Ω–µ–π—Ç—Ä–æ–Ω—ã)',
            '–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –æ–±–æ–ª–æ—á–∫–∞',
            '–†–∞–∑–º–µ—Ä: ~10‚Åª¬π‚Å∞ –º',
            '–ú–∞—Å—Å–∞ —Å–æ—Å—Ä–µ–¥–æ—Ç–æ—á–µ–Ω–∞ –≤ —è–¥—Ä–µ'
        ],
        'models': [
            '–ú–æ–¥–µ–ª—å –†–µ–∑–µ—Ä—Ñ–æ—Ä–¥–∞',
            '–ú–æ–¥–µ–ª—å –ë–æ—Ä–∞',
            '–ö–≤–∞–Ω—Ç–æ–≤–∞—è –º–æ–¥–µ–ª—å',
            '–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã–µ –æ—Ä–±–∏—Ç–∞–ª–∏'
        ]
    },
    '–∫–≤–∞–Ω—Ç–æ–≤–∞—è –º–µ—Ö–∞–Ω–∏–∫–∞': {
        'definition': '–†–∞–∑–¥–µ–ª —Ñ–∏–∑–∏–∫–∏, –∏–∑—É—á–∞—é—â–∏–π –ø–æ–≤–µ–¥–µ–Ω–∏–µ –º–∞—Ç–µ—Ä–∏–∏ –Ω–∞ –∞—Ç–æ–º–Ω–æ–º –∏ —Å—É–±–∞—Ç–æ–º–Ω–æ–º —É—Ä–æ–≤–Ω–µ',
        'principles': [
            '–ü—Ä–∏–Ω—Ü–∏–ø –Ω–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ—Å—Ç–∏ –ì–µ–π–∑–µ–Ω–±–µ—Ä–≥–∞',
            '–ö–≤–∞–Ω—Ç–æ–≤–∞—è —Å—É–ø–µ—Ä–ø–æ–∑–∏—Ü–∏—è',
            '–ö–≤–∞–Ω—Ç–æ–≤–∞—è –∑–∞–ø—É—Ç–∞–Ω–Ω–æ—Å—Ç—å',
            '–í–æ–ª–Ω–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏—è',
            '–ö–≤–∞–Ω—Ç–æ–≤–∞–Ω–∏–µ —ç–Ω–µ—Ä–≥–∏–∏'
        ],
        'applications': [
            '–õ–∞–∑–µ—Ä—ã',
            '–°–≤–µ—Ä—Ö–ø—Ä–æ–≤–æ–¥–∏–º–æ—Å—Ç—å',
            '–ö–≤–∞–Ω—Ç–æ–≤—ã–µ –∫–æ–º–ø—å—é—Ç–µ—Ä—ã',
            '–ê—Ç–æ–º–Ω—ã–µ —á–∞—Å—ã',
            '–ú–†–¢'
        ]
    }
}

def find_physics_concept(query):
    """–ù–∞—Ö–æ–¥–∏—Ç —Ñ–∏–∑–∏—á–µ—Å–∫–æ–µ –ø–æ–Ω—è—Ç–∏–µ –≤ –±–∞–∑–µ –∑–Ω–∞–Ω–∏–π"""
    query_lower = query.lower()
    
    # –ü—Ä—è–º–æ–π –ø–æ–∏—Å–∫
    for concept, data in PHYSICS_KNOWLEDGE.items():
        if concept in query_lower:
            return concept, data
    
    # –ü–æ–∏—Å–∫ –ø–æ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º
    keywords_map = {
        '—Å–≤–µ—Ç': '—Ñ–æ—Ç–æ–Ω',
        '—á–∞—Å—Ç–∏—Ü–∞ —Å–≤–µ—Ç–∞': '—Ñ–æ—Ç–æ–Ω',
        '–∫–≤–∞–Ω—Ç —Å–≤–µ—Ç–∞': '—Ñ–æ—Ç–æ–Ω',
        '–æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–∞—è —á–∞—Å—Ç–∏—Ü–∞': '—ç–ª–µ–∫—Ç—Ä–æ–Ω',
        '—Ö–∏–º–∏—á–µ—Å–∫–∏–π —ç–ª–µ–º–µ–Ω—Ç': '–∞—Ç–æ–º',
        '–∫–≤–∞–Ω—Ç': '–∫–≤–∞–Ω—Ç–æ–≤–∞—è –º–µ—Ö–∞–Ω–∏–∫–∞',
        '–≤–æ–ª–Ω–∞-—á–∞—Å—Ç–∏—Ü–∞': '–∫–≤–∞–Ω—Ç–æ–≤–∞—è –º–µ—Ö–∞–Ω–∏–∫–∞'
    }
    
    for keyword, concept in keywords_map.items():
        if keyword in query_lower:
            return concept, PHYSICS_KNOWLEDGE[concept]
    
    return None, None

def generate_physics_explanation(concept, data, query):
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ —Ñ–∏–∑–∏—á–µ—Å–∫–æ–≥–æ –ø–æ–Ω—è—Ç–∏—è"""
    explanation_parts = []
    
    # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ
    explanation_parts.append(f"**{concept.upper()}**")
    explanation_parts.append(f"üìñ {data['definition']}")
    
    # –°–≤–æ–π—Å—Ç–≤–∞
    if 'properties' in data:
        explanation_parts.append("\nüî¨ **–°–≤–æ–π—Å—Ç–≤–∞:**")
        for prop in data['properties']:
            explanation_parts.append(f"‚Ä¢ {prop}")
    
    # –°—Ç—Ä—É–∫—Ç—É—Ä–∞ (–¥–ª—è –∞—Ç–æ–º–∞)
    if 'structure' in data:
        explanation_parts.append("\nüèóÔ∏è **–°—Ç—Ä—É–∫—Ç—É—Ä–∞:**")
        for struct in data['structure']:
            explanation_parts.append(f"‚Ä¢ {struct}")
    
    # –ú–æ–¥–µ–ª–∏ (–¥–ª—è –∫–≤–∞–Ω—Ç–æ–≤–æ–π –º–µ—Ö–∞–Ω–∏–∫–∏)
    if 'models' in data:
        explanation_parts.append("\nüìê **–ú–æ–¥–µ–ª–∏:**")
        for model in data['models']:
            explanation_parts.append(f"‚Ä¢ {model}")
    
    # –ü—Ä–∏–Ω—Ü–∏–ø—ã (–¥–ª—è –∫–≤–∞–Ω—Ç–æ–≤–æ–π –º–µ—Ö–∞–Ω–∏–∫–∏)
    if 'principles' in data:
        explanation_parts.append("\n‚öõÔ∏è **–ü—Ä–∏–Ω—Ü–∏–ø—ã:**")
        for principle in data['principles']:
            explanation_parts.append(f"‚Ä¢ {principle}")
    
    # –ü—Ä–∏–º–µ–Ω–µ–Ω–∏—è
    if 'applications' in data:
        explanation_parts.append("\nüöÄ **–ü—Ä–∏–º–µ–Ω–µ–Ω–∏—è:**")
        for app in data['applications']:
            explanation_parts.append(f"‚Ä¢ {app}")
    
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    if concept == '—Ñ–æ—Ç–æ–Ω':
        explanation_parts.append("\nüí° **–ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ —Ñ–∞–∫—Ç—ã:**")
        explanation_parts.append("‚Ä¢ –§–æ—Ç–æ–Ω—ã –Ω–µ —Å—Ç–∞—Ä–µ—é—Ç - –æ–Ω–∏ —Å—É—â–µ—Å—Ç–≤—É—é—Ç –≤–µ—á–Ω–æ")
        explanation_parts.append("‚Ä¢ –ö–∞–∂–¥—ã–π —Ñ–æ—Ç–æ–Ω —É–Ω–∏–∫–∞–ª–µ–Ω –ø–æ —ç–Ω–µ—Ä–≥–∏–∏")
        explanation_parts.append("‚Ä¢ –§–æ—Ç–æ–Ω—ã –º–æ–≥—É—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å –∏ —É–Ω–∏—á—Ç–æ–∂–∞—Ç—å—Å—è")
    
    elif concept == '—ç–ª–µ–∫—Ç—Ä–æ–Ω':
        explanation_parts.append("\nüí° **–ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ —Ñ–∞–∫—Ç—ã:**")
        explanation_parts.append("‚Ä¢ –≠–ª–µ–∫—Ç—Ä–æ–Ω—ã –¥–≤–∏–∂—É—Ç—Å—è –≤–æ–∫—Ä—É–≥ —è–¥—Ä–∞ —Å–æ —Å–∫–æ—Ä–æ—Å—Ç—å—é ~2,200 –∫–º/—Å")
        explanation_parts.append("‚Ä¢ –≠–ª–µ–∫—Ç—Ä–æ–Ω—ã –æ–ø—Ä–µ–¥–µ–ª—è—é—Ç —Ö–∏–º–∏—á–µ—Å–∫–∏–µ —Å–≤–æ–π—Å—Ç–≤–∞ —ç–ª–µ–º–µ–Ω—Ç–æ–≤")
        explanation_parts.append("‚Ä¢ –í –º–µ—Ç–∞–ª–ª–∞—Ö —ç–ª–µ–∫—Ç—Ä–æ–Ω—ã –º–æ–≥—É—Ç —Å–≤–æ–±–æ–¥–Ω–æ –ø–µ—Ä–µ–º–µ—â–∞—Ç—å—Å—è")
    
    return "\n".join(explanation_parts)

@app.route('/api/physics/explain', methods=['GET', 'POST'])
def explain_physics():
    """–û–±—ä—è—Å–Ω–µ–Ω–∏–µ —Ñ–∏–∑–∏—á–µ—Å–∫–∏—Ö –ø–æ–Ω—è—Ç–∏–π"""
    try:
        if request.method == 'GET':
            concept = request.args.get('concept', '')
        else:
            data = request.get_json()
            concept = data.get('concept', '')
        
        logger.info(f"‚öõÔ∏è –ü–æ–ª—É—á–µ–Ω —Ñ–∏–∑–∏—á–µ—Å–∫–∏–π –∑–∞–ø—Ä–æ—Å: {concept[:50]}...")
        
        if not concept:
            return jsonify({
                'success': False,
                'error': '–§–∏–∑–∏—á–µ—Å–∫–æ–µ –ø–æ–Ω—è—Ç–∏–µ –Ω–µ —É–∫–∞–∑–∞–Ω–æ'
            }), 400
        
        # –ü–æ–∏—Å–∫ –≤ –±–∞–∑–µ –∑–Ω–∞–Ω–∏–π
        found_concept, concept_data = find_physics_concept(concept)
        
        if found_concept:
            explanation = generate_physics_explanation(found_concept, concept_data, concept)
            
            return jsonify({
                'success': True,
                'concept': found_concept,
                'explanation': explanation,
                'module': 'physics',
                'timestamp': datetime.now().isoformat()
            })
        else:
            # –û–±—â–∏–π –æ—Ç–≤–µ—Ç –¥–ª—è –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –ø–æ–Ω—è—Ç–∏–π
            return jsonify({
                'success': True,
                'concept': concept,
                'explanation': f"**{concept.upper()}**\n\nüî¨ –§–∏–∑–∏—á–µ—Å–∫–æ–µ –ø–æ–Ω—è—Ç–∏–µ '{concept}' —Ç—Ä–µ–±—É–µ—Ç –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ –∏–∑—É—á–µ–Ω–∏—è.\n\nüìö **–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:**\n‚Ä¢ –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ —É—á–µ–±–Ω–∏–∫–∞–º –ø–æ —Ñ–∏–∑–∏–∫–µ\n‚Ä¢ –ò–∑—É—á–∏—Ç–µ –∫–≤–∞–Ω—Ç–æ–≤—É—é –º–µ—Ö–∞–Ω–∏–∫—É\n‚Ä¢ –ò—Å—Å–ª–µ–¥—É–π—Ç–µ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—É—é —Ñ–∏–∑–∏–∫—É\n\nüí° **–ü–æ–ø—É–ª—è—Ä–Ω—ã–µ —Ç–µ–º—ã:**\n‚Ä¢ –§–æ—Ç–æ–Ω—ã –∏ —Å–≤–µ—Ç\n‚Ä¢ –≠–ª–µ–∫—Ç—Ä–æ–Ω—ã –∏ –∞—Ç–æ–º—ã\n‚Ä¢ –ö–≤–∞–Ω—Ç–æ–≤–∞—è –º–µ—Ö–∞–Ω–∏–∫–∞\n‚Ä¢ –¢–µ–æ—Ä–∏—è –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏",
                'module': 'physics',
                'timestamp': datetime.now().isoformat()
            })
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ñ–∏–∑–∏—á–µ—Å–∫–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞: {e}")
        return jsonify({
            'success': False,
            'error': str(e)
        }), 500

@app.route('/api/physics/health', methods=['GET'])
@app.route('/api/health', methods=['GET'])
def health_check():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–µ—Ä–≤–µ—Ä–∞"""
    return jsonify({
        "service": "physics",
        "status": "healthy",
        "timestamp": datetime.now().isoformat(),
        "version": "1.0.0",
        "capabilities": [
            "–û–±—ä—è—Å–Ω–µ–Ω–∏–µ —Ñ–∏–∑–∏—á–µ—Å–∫–∏—Ö –ø–æ–Ω—è—Ç–∏–π",
            "–ö–≤–∞–Ω—Ç–æ–≤–∞—è –º–µ—Ö–∞–Ω–∏–∫–∞",
            "–≠–ª–µ–º–µ–Ω—Ç–∞—Ä–Ω—ã–µ —á–∞—Å—Ç–∏—Ü—ã",
            "–ê—Ç–æ–º–Ω–∞—è —Ñ–∏–∑–∏–∫–∞",
            "–û–ø—Ç–∏–∫–∞ –∏ —Ñ–æ—Ç–æ–Ω—ã"
        ],
        "knowledge_base": {
            "concepts": list(PHYSICS_KNOWLEDGE.keys()),
            "total_concepts": len(PHYSICS_KNOWLEDGE)
        }
    })

@app.route('/api/physics/concepts', methods=['GET'])
def list_concepts():
    """–°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ñ–∏–∑–∏—á–µ—Å–∫–∏—Ö –ø–æ–Ω—è—Ç–∏–π"""
    return jsonify({
        'success': True,
        'concepts': list(PHYSICS_KNOWLEDGE.keys()),
        'total': len(PHYSICS_KNOWLEDGE),
        'categories': [
            '–≠–ª–µ–º–µ–Ω—Ç–∞—Ä–Ω—ã–µ —á–∞—Å—Ç–∏—Ü—ã',
            '–ê—Ç–æ–º–Ω–∞—è —Ñ–∏–∑–∏–∫–∞', 
            '–ö–≤–∞–Ω—Ç–æ–≤–∞—è –º–µ—Ö–∞–Ω–∏–∫–∞',
            '–û–ø—Ç–∏–∫–∞',
            '–≠–ª–µ–∫—Ç—Ä–æ–¥–∏–Ω–∞–º–∏–∫–∞'
        ]
    })

if __name__ == '__main__':
    print("‚öõÔ∏è Physics Server –∑–∞–ø—É—â–µ–Ω")
    print("URL: http://localhost:8110")
    print("–î–æ—Å—Ç—É–ø–Ω—ã–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã:")
    print("  - GET/POST /api/physics/explain - –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ —Ñ–∏–∑–∏—á–µ—Å–∫–∏—Ö –ø–æ–Ω—è—Ç–∏–π")
    print("  - GET /api/physics/health - –ø—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è")
    print("  - GET /api/physics/concepts - —Å–ø–∏—Å–æ–∫ –ø–æ–Ω—è—Ç–∏–π")
    print("  - GET /api/health - –æ–±—â–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è")
    print("=" * 60)
    app.run(host='0.0.0.0', port=8110, debug=False)



