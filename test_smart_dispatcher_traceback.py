import requests
import traceback

def test_smart_dispatcher_with_traceback():
    try:
        print("üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º Smart Dispatcher —Å –ø–æ–¥—Ä–æ–±–Ω–æ–π –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–æ–π...")
        
        # –¢–µ—Å—Ç –æ–±—ã—á–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
        print("\nüìù –¢–µ—Å—Ç –æ–±—ã—á–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞:")
        general_response = requests.post(
            "http://localhost:8080/api/chat", 
            json={"message": "hello"}, 
            timeout=5
        )
        print(f"Status: {general_response.status_code}")
        if general_response.status_code == 200:
            print("‚úÖ –û–±—ã—á–Ω—ã–π –∑–∞–ø—Ä–æ—Å —Ä–∞–±–æ—Ç–∞–µ—Ç")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {general_response.text}")
        
        # –¢–µ—Å—Ç Arduino Nano –∑–∞–ø—Ä–æ—Å–∞
        print("\nüîß –¢–µ—Å—Ç Arduino Nano –∑–∞–ø—Ä–æ—Å–∞:")
        arduino_response = requests.post(
            "http://localhost:8080/api/chat", 
            json={"message": "arduino nano pins"}, 
            timeout=5
        )
        print(f"Status: {arduino_response.status_code}")
        print(f"Response: {arduino_response.text}")
        
    except Exception as e:
        print(f"‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}")
        print(f"Traceback: {traceback.format_exc()}")

if __name__ == "__main__":
    test_smart_dispatcher_with_traceback()





