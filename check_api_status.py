#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import requests
import time

def check_api_status():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—Ç–∞—Ç—É—Å –≤—Å–µ—Ö API —Å–µ—Ä–≤–µ—Ä–æ–≤ Rubin AI"""
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –º–æ–¥—É–ª–∏ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
    modules = {
        'Smart Dispatcher': 8080,
        'Gemini Bridge': 8082,
        'General API': 8085,
        'Mathematics API': 8086,
        'Electrical API': 8087,
        'Programming API': 8088,
        'Radiomechanics API': 8089,
        'Neuro API': 8090,
        'Controllers API': 9000,
        'Search Engine API': 8102,
        'System Utils API': 8103,
        'GAI API': 8104,
        'Ethical Core API': 8105,
        # Arduino Nano API —É–¥–∞–ª–µ–Ω - —Ç–µ–ø–µ—Ä—å –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –º–æ–¥—É–ª—å –≤ Smart Dispatcher
    }
    
    print("üîç –ü–†–û–í–ï–†–ö–ê –°–¢–ê–¢–£–°–ê API –°–ï–†–í–ï–†–û–í RUBIN AI")
    print("=" * 50)
    
    working_count = 0
    total_count = len(modules)
    
    for name, port in modules.items():
        try:
            response = requests.get(f'http://localhost:{port}/api/health', timeout=3)
            if response.status_code == 200:
                status = "‚úÖ –†–ê–ë–û–¢–ê–ï–¢"
                working_count += 1
            else:
                status = f"‚ùå –û–®–ò–ë–ö–ê ({response.status_code})"
        except requests.exceptions.ConnectionError:
            status = "‚ùå –ù–ï–î–û–°–¢–£–ü–ï–ù"
        except requests.exceptions.Timeout:
            status = "‚è≥ TIMEOUT"
        except Exception as e:
            status = f"‚ùå –û–®–ò–ë–ö–ê ({str(e)[:20]}...)"
        
        print(f"{name:<20} ({port}): {status}")
    
    print("=" * 50)
    print(f"üìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê: {working_count}/{total_count} —Å–µ—Ä–≤–µ—Ä–æ–≤ —Ä–∞–±–æ—Ç–∞—é—Ç")
    
    if working_count < total_count:
        print("\nüö® –ù–ï–î–û–°–¢–£–ü–ù–´–ï –°–ï–†–í–ò–°–´ –ù–£–ñ–ù–û –ó–ê–ü–£–°–¢–ò–¢–¨:")
        for name, port in modules.items():
            try:
                response = requests.get(f'http://localhost:{port}/api/health', timeout=2)
                if response.status_code != 200:
                    print(f"  - {name} (–ø–æ—Ä—Ç {port})")
            except:
                print(f"  - {name} (–ø–æ—Ä—Ç {port})")
    
    return working_count, total_count

if __name__ == "__main__":
    check_api_status()
