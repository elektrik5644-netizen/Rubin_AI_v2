#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
üìä SIMPLE DATA PROCESSING API SERVER
–£–ø—Ä–æ—â–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è –±–µ–∑ –≤–Ω–µ—à–Ω–∏—Ö –±–∏–±–ª–∏–æ—Ç–µ–∫ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö
"""

from flask import Flask, jsonify, request
from flask_cors import CORS
import logging
import os
import json
import csv
import io

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

app = Flask(__name__)
CORS(app)

# –£–ø—Ä–æ—â–µ–Ω–Ω–∞—è –±–∞–∑–∞ –∑–Ω–∞–Ω–∏–π –ø–æ –æ–±—Ä–∞–±–æ—Ç–∫–µ –¥–∞–Ω–Ω—ã—Ö
DATA_PROCESSING_KNOWLEDGE = {
    "–∞–Ω–∞–ª–∏–∑": {
        "explanation": "üìà **–ê–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö** - –ø—Ä–æ—Ü–µ—Å—Å –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –≤—ã—è–≤–ª–µ–Ω–∏—è –∑–∞–∫–æ–Ω–æ–º–µ—Ä–Ω–æ—Å—Ç–µ–π.\n\n**–¢–∏–ø—ã –∞–Ω–∞–ª–∏–∑–∞:**\n- **–û–ø–∏—Å–∞—Ç–µ–ª—å–Ω—ã–π** - —á—Ç–æ –ø—Ä–æ–∏–∑–æ—à–ª–æ?\n- **–î–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∏–π** - –ø–æ—á–µ–º—É –ø—Ä–æ–∏–∑–æ—à–ª–æ?\n- **–ü—Ä–µ–¥–∏–∫—Ç–∏–≤–Ω—ã–π** - —á—Ç–æ –ø—Ä–æ–∏–∑–æ–π–¥–µ—Ç?\n- **–ü—Ä–µ–¥–ø–∏—Å—ã–≤–∞—é—â–∏–π** - —á—Ç–æ –¥–µ–ª–∞—Ç—å?\n\n**–ú–µ—Ç–æ–¥—ã –∞–Ω–∞–ª–∏–∑–∞:**\n- **–°—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑** - —Å—Ä–µ–¥–Ω–∏–µ, –º–µ–¥–∏–∞–Ω—ã, —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è\n- **–ö–æ—Ä—Ä–µ–ª—è—Ü–∏–æ–Ω–Ω—ã–π –∞–Ω–∞–ª–∏–∑** - —Å–≤—è–∑–∏ –º–µ–∂–¥—É –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏\n- **–†–µ–≥—Ä–µ—Å—Å–∏–æ–Ω–Ω—ã–π –∞–Ω–∞–ª–∏–∑** - –ø—Ä–æ–≥–Ω–æ–∑–∏—Ä–æ–≤–∞–Ω–∏–µ\n- **–ö–ª–∞—Å—Ç–µ—Ä–Ω—ã–π –∞–Ω–∞–ª–∏–∑** - –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö\n\n**–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã:**\n- Excel, Google Sheets\n- Python (pandas, numpy)\n- R (—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞)\n- Tableau, Power BI\n- SQL (–±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö)\n\n**–≠—Ç–∞–ø—ã:**\n1. –°–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö\n2. –û—á–∏—Å—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö\n3. –ò—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑\n4. –ú–æ–¥–µ–ª–∏—Ä–æ–≤–∞–Ω–∏–µ\n5. –ò–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤",
        "keywords": ["–∞–Ω–∞–ª–∏–∑", "–∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ", "–∑–∞–∫–æ–Ω–æ–º–µ—Ä–Ω–æ—Å—Ç–∏", "—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", "–∫–æ—Ä—Ä–µ–ª—è—Ü–∏—è"]
    },
    "–æ—á–∏—Å—Ç–∫–∞": {
        "explanation": "üßπ **–û—á–∏—Å—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö** - –ø—Ä–æ—Ü–µ—Å—Å –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö –∫ –∞–Ω–∞–ª–∏–∑—É.\n\n**–ü—Ä–æ–±–ª–µ–º—ã –≤ –¥–∞–Ω–Ω—ã—Ö:**\n- **–ü—Ä–æ–ø—É—â–µ–Ω–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è** - –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ\n- **–î—É–±–ª–∏–∫–∞—Ç—ã** - –ø–æ–≤—Ç–æ—Ä—è—é—â–∏–µ—Å—è –∑–∞–ø–∏—Å–∏\n- **–í—ã–±—Ä–æ—Å—ã** - –∞–Ω–æ–º–∞–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è\n- **–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã** - –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ —Ç–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö\n- **–û–ø–µ—á–∞—Ç–∫–∏** - –æ—à–∏–±–∫–∏ –≤ —Ç–µ–∫—Å—Ç–µ\n\n**–ú–µ—Ç–æ–¥—ã –æ—á–∏—Å—Ç–∫–∏:**\n- **–£–¥–∞–ª–µ–Ω–∏–µ** - –∏—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π\n- **–ó–∞–º–µ–Ω–∞** - –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –ø—Ä–æ–ø—É—Å–∫–æ–≤\n- **–ù–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è** - –ø—Ä–∏–≤–µ–¥–µ–Ω–∏–µ –∫ –µ–¥–∏–Ω–æ–º—É —Ñ–æ—Ä–º–∞—Ç—É\n- **–í–∞–ª–∏–¥–∞—Ü–∏—è** - –ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç–∏\n- **–°—Ç–∞–Ω–¥–∞—Ä—Ç–∏–∑–∞—Ü–∏—è** - —É–Ω–∏—Ñ–∏–∫–∞—Ü–∏—è –∑–Ω–∞—á–µ–Ω–∏–π\n\n**–¢–µ—Ö–Ω–∏–∫–∏:**\n- **–ú–µ–¥–∏–∞–Ω–∞/—Å—Ä–µ–¥–Ω–µ–µ** - –¥–ª—è —á–∏—Å–ª–æ–≤—ã—Ö –ø—Ä–æ–ø—É—Å–∫–æ–≤\n- **–ú–æ–¥–∞** - –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∞–ª—å–Ω—ã—Ö –ø—Ä–æ–ø—É—Å–∫–æ–≤\n- **–ò–Ω—Ç–µ—Ä–ø–æ–ª—è—Ü–∏—è** - –¥–ª—è –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ä—è–¥–æ–≤\n- **–†–µ–≥—É–ª—è—Ä–Ω—ã–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è** - –¥–ª—è —Ç–µ–∫—Å—Ç–∞\n- **–°—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫–∏–µ —Ç–µ—Å—Ç—ã** - –¥–ª—è –≤—ã–±—Ä–æ—Å–æ–≤\n\n**–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã:**\n- Python (pandas, numpy)\n- OpenRefine\n- Excel —Ñ—É–Ω–∫—Ü–∏–∏\n- SQL –∑–∞–ø—Ä–æ—Å—ã",
        "keywords": ["–æ—á–∏—Å—Ç–∫–∞", "–ø—Ä–æ–ø—É—Å–∫–∏", "–¥—É–±–ª–∏–∫–∞—Ç—ã", "–≤—ã–±—Ä–æ—Å—ã", "–Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è"]
    },
    "–≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è": {
        "explanation": "üìä **–í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö** - –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤ –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–º –≤–∏–¥–µ.\n\n**–¢–∏–ø—ã –≥—Ä–∞—Ñ–∏–∫–æ–≤:**\n- **–õ–∏–Ω–µ–π–Ω—ã–µ** - –¥–ª—è –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ä—è–¥–æ–≤\n- **–°—Ç–æ–ª–±—á–∞—Ç—ã–µ** - –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π\n- **–ö—Ä—É–≥–æ–≤—ã–µ** - –¥–ª—è –¥–æ–ª–µ–π\n- **–¢–æ—á–µ—á–Ω—ã–µ** - –¥–ª—è –∫–æ—Ä—Ä–µ–ª—è—Ü–∏–π\n- **–ì–∏—Å—Ç–æ–≥—Ä–∞–º–º—ã** - –¥–ª—è —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–π\n- **Box plots** - –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏\n- **Heat maps** - –¥–ª—è –º–∞—Ç—Ä–∏—Ü\n\n**–ü—Ä–∏–Ω—Ü–∏–ø—ã –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏:**\n- **–ü—Ä–æ—Å—Ç–æ—Ç–∞** - –∏–∑–±–µ–≥–∞–π—Ç–µ –∏–∑–±—ã—Ç–æ—á–Ω–æ—Å—Ç–∏\n- **–Ø—Å–Ω–æ—Å—Ç—å** - –ø–æ–Ω—è—Ç–Ω—ã–µ –ø–æ–¥–ø–∏—Å–∏\n- **–¢–æ—á–Ω–æ—Å—Ç—å** - –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –º–∞—Å—à—Ç–∞–±—ã\n- **–ö—Ä–∞—Å–æ—Ç–∞** - –ø—Ä–∏–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–π –¥–∏–∑–∞–π–Ω\n- **–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å** - –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å\n\n**–¶–≤–µ—Ç–∞:**\n- –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ü–≤–µ—Ç–æ–≤—É—é —Å–ª–µ–ø–æ—Ç—É\n- –û–≥—Ä–∞–Ω–∏—á—å—Ç–µ –ø–∞–ª–∏—Ç—Ä—É\n- –ò–∑–±–µ–≥–∞–π—Ç–µ –∫—Ä–∞—Å–Ω–æ–≥–æ/–∑–µ–ª–µ–Ω–æ–≥–æ\n- –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≥—Ä–∞–¥–∞—Ü–∏–∏ —Å–µ—Ä–æ–≥–æ\n\n**–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã:**\n- **Python:** matplotlib, seaborn, plotly\n- **R:** ggplot2, lattice\n- **JavaScript:** D3.js, Chart.js\n- **BI:** Tableau, Power BI, QlikView\n- **–û–Ω–ª–∞–π–Ω:** Google Charts, Highcharts",
        "keywords": ["–≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è", "–≥—Ä–∞—Ñ–∏–∫–∏", "–¥–∏–∞–≥—Ä–∞–º–º—ã", "—á–∞—Ä—Ç—ã", "–æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ"]
    },
    "–º–∞—à–∏–Ω–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ": {
        "explanation": "ü§ñ **–ú–∞—à–∏–Ω–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ** - –∞–ª–≥–æ—Ä–∏—Ç–º—ã, –∫–æ—Ç–æ—Ä—ã–µ —É—á–∞—Ç—Å—è –Ω–∞ –¥–∞–Ω–Ω—ã—Ö.\n\n**–¢–∏–ø—ã ML:**\n- **–û–±—É—á–µ–Ω–∏–µ —Å —É—á–∏—Ç–µ–ª–µ–º** - –µ—Å—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã\n- **–û–±—É—á–µ–Ω–∏–µ –±–µ–∑ —É—á–∏—Ç–µ–ª—è** - –ø–æ–∏—Å–∫ –∑–∞–∫–æ–Ω–æ–º–µ—Ä–Ω–æ—Å—Ç–µ–π\n- **–û–±—É—á–µ–Ω–∏–µ —Å –ø–æ–¥–∫—Ä–µ–ø–ª–µ–Ω–∏–µ–º** - –æ–±—É—á–µ–Ω–∏–µ —á–µ—Ä–µ–∑ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ\n\n**–ê–ª–≥–æ—Ä–∏—Ç–º—ã:**\n- **–ö–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—è:** –ª–æ–≥–∏—Å—Ç–∏—á–µ—Å–∫–∞—è —Ä–µ–≥—Ä–µ—Å—Å–∏—è, SVM, —Å–ª—É—á–∞–π–Ω—ã–π –ª–µ—Å\n- **–†–µ–≥—Ä–µ—Å—Å–∏—è:** –ª–∏–Ω–µ–π–Ω–∞—è —Ä–µ–≥—Ä–µ—Å—Å–∏—è, –ø–æ–ª–∏–Ω–æ–º–∏–∞–ª—å–Ω–∞—è\n- **–ö–ª–∞—Å—Ç–µ—Ä–∏–∑–∞—Ü–∏—è:** k-means, –∏–µ—Ä–∞—Ä—Ö–∏—á–µ—Å–∫–∞—è\n- **–ê–Ω—Å–∞–º–±–ª–∏:** —Å–ª—É—á–∞–π–Ω—ã–π –ª–µ—Å, –≥—Ä–∞–¥–∏–µ–Ω—Ç–Ω—ã–π –±—É—Å—Ç–∏–Ω–≥\n\n**–≠—Ç–∞–ø—ã ML:**\n1. **–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö** - —Å–±–æ—Ä, –æ—á–∏—Å—Ç–∫–∞, —Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ\n2. **–í—ã–±–æ—Ä –º–æ–¥–µ–ª–∏** - –ø–æ–¥—Ö–æ–¥—è—â–∏–π –∞–ª–≥–æ—Ä–∏—Ç–º\n3. **–û–±—É—á–µ–Ω–∏–µ** - —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ –Ω–∞ –¥–∞–Ω–Ω—ã—Ö\n4. **–í–∞–ª–∏–¥–∞—Ü–∏—è** - –ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞\n5. **–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ** - —Ñ–∏–Ω–∞–ª—å–Ω–∞—è –æ—Ü–µ–Ω–∫–∞\n6. **–†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ** - –≤–Ω–µ–¥—Ä–µ–Ω–∏–µ –≤ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ\n\n**–ú–µ—Ç—Ä–∏–∫–∏ –∫–∞—á–µ—Å—Ç–≤–∞:**\n- **–¢–æ—á–Ω–æ—Å—Ç—å** - –¥–æ–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–π\n- **Precision/Recall** - –¥–ª—è –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏\n- **RMSE/MAE** - –¥–ª—è —Ä–µ–≥—Ä–µ—Å—Å–∏–∏\n- **F1-score** - –≥–∞—Ä–º–æ–Ω–∏—á–µ—Å–∫–æ–µ —Å—Ä–µ–¥–Ω–µ–µ\n\n**–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã:**\n- **Python:** scikit-learn, pandas, numpy\n- **R:** caret, randomForest\n- **–ü–ª–∞—Ç—Ñ–æ—Ä–º—ã:** TensorFlow, PyTorch, Azure ML",
        "keywords": ["–º–∞—à–∏–Ω–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ", "–∞–ª–≥–æ—Ä–∏—Ç–º—ã", "–º–æ–¥–µ–ª–∏", "–ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ", "–∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—è"]
    },
    "–±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö": {
        "explanation": "üóÑÔ∏è **–ë–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö** - –æ—Ä–≥–∞–Ω–∏–∑–æ–≤–∞–Ω–Ω–æ–µ —Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö.\n\n**–¢–∏–ø—ã –ë–î:**\n- **–†–µ–ª—è—Ü–∏–æ–Ω–Ω—ã–µ** - —Ç–∞–±–ª–∏—Ü—ã —Å —Å–≤—è–∑—è–º–∏ (MySQL, PostgreSQL)\n- **NoSQL** - –¥–æ–∫—É–º–µ–Ω—Ç—ã, –∫–ª—é—á-–∑–Ω–∞—á–µ–Ω–∏–µ (MongoDB, Redis)\n- **–í—Ä–µ–º–µ–Ω–Ω—ã–µ —Ä—è–¥—ã** - –¥–ª—è –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö (InfluxDB)\n- **–ì—Ä–∞—Ñ–æ–≤—ã–µ** - –¥–ª—è —Å–≤—è–∑–µ–π (Neo4j)\n\n**SQL –æ–ø–µ—Ä–∞—Ü–∏–∏:**\n- **SELECT** - –≤—ã–±–æ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö\n- **INSERT** - –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–∞–ø–∏—Å–µ–π\n- **UPDATE** - –∏–∑–º–µ–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö\n- **DELETE** - —É–¥–∞–ª–µ–Ω–∏–µ –∑–∞–ø–∏—Å–µ–π\n- **JOIN** - —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü\n- **GROUP BY** - –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞\n- **ORDER BY** - —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞\n\n**–ù–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è:**\n- **1NF** - –∞—Ç–æ–º–∞—Ä–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è\n- **2NF** - –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å –æ—Ç –∫–ª—é—á–∞\n- **3NF** - —Ç—Ä–∞–Ω–∑–∏—Ç–∏–≤–Ω–∞—è –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å\n\n**–ò–Ω–¥–µ–∫—Å—ã:**\n- –£—Å–∫–æ—Ä—è—é—Ç –ø–æ–∏—Å–∫\n- –ó–∞–º–µ–¥–ª—è—é—Ç –≤—Å—Ç–∞–≤–∫—É\n- –¢–∏–ø—ã: B-tree, Hash, Bitmap\n\n**–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è:**\n- –ü—Ä–∞–≤–∏–ª—å–Ω—ã–µ –∏–Ω–¥–µ–∫—Å—ã\n- –≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã\n- –ü–∞—Ä—Ç–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ\n- –ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ\n\n**–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã:**\n- **MySQL, PostgreSQL** - —Ä–µ–ª—è—Ü–∏–æ–Ω–Ω—ã–µ\n- **MongoDB** - –¥–æ–∫—É–º–µ–Ω—Ç–Ω—ã–µ\n- **Redis** - –∫–ª—é—á-–∑–Ω–∞—á–µ–Ω–∏–µ\n- **Elasticsearch** - –ø–æ–∏—Å–∫",
        "keywords": ["–±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö", "sql", "—Ç–∞–±–ª–∏—Ü—ã", "–∑–∞–ø—Ä–æ—Å—ã", "–∏–Ω–¥–µ–∫—Å—ã"]
    },
    "big data": {
        "explanation": "üåê **Big Data** - –æ–±—Ä–∞–±–æ—Ç–∫–∞ –±–æ–ª—å—à–∏—Ö –æ–±—ä–µ–º–æ–≤ –¥–∞–Ω–Ω—ã—Ö.\n\n**–•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ (3V):**\n- **Volume** - –æ–±—ä–µ–º –¥–∞–Ω–Ω—ã—Ö\n- **Velocity** - —Å–∫–æ—Ä–æ—Å—Ç—å –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è\n- **Variety** - —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏–µ —Ñ–æ—Ä–º–∞—Ç–æ–≤\n\n**–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏:**\n- **Hadoop** - —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–∞—è —Ñ–∞–π–ª–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞\n- **Spark** - –±—ã—Å—Ç—Ä–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –≤ –ø–∞–º—è—Ç–∏\n- **Kafka** - –ø–æ—Ç–æ–∫–æ–≤–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞\n- **Elasticsearch** - –ø–æ–∏—Å–∫ –∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∞\n- **Cassandra** - NoSQL –¥–ª—è –±–æ–ª—å—à–∏—Ö –¥–∞–Ω–Ω—ã—Ö\n\n**–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã:**\n- **Lambda** - –ø–∞–∫–µ—Ç–Ω–∞—è + –ø–æ—Ç–æ–∫–æ–≤–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞\n- **Kappa** - —Ç–æ–ª—å–∫–æ –ø–æ—Ç–æ–∫–æ–≤–∞—è\n- **Microservices** - —Å–µ—Ä–≤–∏—Å–Ω–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞\n\n**–û–±–ª–∞—á–Ω—ã–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã:**\n- **AWS:** EMR, Redshift, Kinesis\n- **Google Cloud:** BigQuery, Dataflow\n- **Azure:** HDInsight, Data Factory\n\n**–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã:**\n- **Python:** pandas, dask, pyspark\n- **R:** sparklyr, bigrquery\n- **SQL:** Hive, Impala, Presto\n- **–í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è:** Tableau, Power BI\n\n**–í—ã–∑–æ–≤—ã:**\n- –ú–∞—Å—à—Ç–∞–±–∏—Ä—É–µ–º–æ—Å—Ç—å\n- –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å\n- –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å\n- –°—Ç–æ–∏–º–æ—Å—Ç—å —Ö—Ä–∞–Ω–µ–Ω–∏—è",
        "keywords": ["big data", "–±–æ–ª—å—à–∏–µ –¥–∞–Ω–Ω—ã–µ", "hadoop", "spark", "–ø–æ—Ç–æ–∫–æ–≤–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞"]
    }
}

@app.route('/api/data_processing/health', methods=['GET'])
def health():
    return jsonify({
        "status": "healthy",
        "message": "Simple Data Processing API —Ä–∞–±–æ—Ç–∞–µ—Ç",
        "module": "Data Processing API",
        "version": "2.0",
        "capabilities": ["–ê–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö", "–û—á–∏—Å—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö", "–í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è", "–ú–∞—à–∏–Ω–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ", "–ë–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö", "Big Data"]
    }), 200

@app.route('/api/data_processing/status', methods=['GET'])
def status():
    return jsonify({
        "status": "healthy",
        "message": "Simple Data Processing API —Ä–∞–±–æ—Ç–∞–µ—Ç",
        "timestamp": os.getenv('FLASK_RUN_FROM_START_TIME')
    }), 200

@app.route('/api/data_processing/process', methods=['POST'])
def process():
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö"""
    data = request.get_json()
    request_data = data.get('data', '').lower()
    
    # –ü–æ–∏—Å–∫ –ø–æ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º
    for key, info in DATA_PROCESSING_KNOWLEDGE.items():
        for keyword in info['keywords']:
            if keyword in request_data:
                return jsonify({
                    "processed_data": info['explanation'],
                    "category": "data_processing",
                    "matched_keyword": keyword,
                    "tools": [
                        "Python (pandas, numpy)",
                        "R (—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞)",
                        "SQL (–±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö)",
                        "Excel/Google Sheets",
                        "Tableau/Power BI"
                    ]
                }), 200
    
    return jsonify({
        "processed_data": "–î–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö —É—Ç–æ—á–Ω–∏—Ç–µ —Ç–µ–º—É: '–∞–Ω–∞–ª–∏–∑', '–æ—á–∏—Å—Ç–∫–∞', '–≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è', '–º–∞—à–∏–Ω–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ', '–±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö' –∏–ª–∏ 'big data'.",
        "available_topics": list(DATA_PROCESSING_KNOWLEDGE.keys()),
        "category": "data_processing"
    }), 200

@app.route('/api/data_processing/analyze', methods=['POST'])
def analyze():
    """–ê–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö"""
    data = request.get_json()
    dataset = data.get('dataset', '')
    
    # –ü—Ä–æ—Å—Ç–æ–π –∞–Ω–∞–ª–∏–∑ CSV –¥–∞–Ω–Ω—ã—Ö
    if isinstance(dataset, str) and ',' in dataset:
        try:
            # –ü–∞—Ä—Å–∏–º CSV —Å—Ç—Ä–æ–∫—É
            csv_reader = csv.reader(io.StringIO(dataset))
            rows = list(csv_reader)
            
            if len(rows) > 1:
                headers = rows[0]
                data_rows = rows[1:]
                
                analysis = {
                    "rows_count": len(data_rows),
                    "columns_count": len(headers),
                    "headers": headers,
                    "sample_data": data_rows[:3] if len(data_rows) > 3 else data_rows,
                    "analysis": "–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã. –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –ø—Ä–æ–≤–µ—Å—Ç–∏ –æ—á–∏—Å—Ç–∫—É –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑."
                }
                
                return jsonify({
                    "analysis": analysis,
                    "recommendations": [
                        "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞ –ø—Ä–æ–ø—É—â–µ–Ω–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è",
                        "–£–¥–∞–ª–∏—Ç–µ –¥—É–±–ª–∏–∫–∞—Ç—ã",
                        "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ç–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö",
                        "–°–æ–∑–¥–∞–π—Ç–µ –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏",
                        "–ü—Ä–æ–≤–µ–¥–∏—Ç–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑"
                    ],
                    "category": "data_processing"
                }), 200
        except Exception as e:
            return jsonify({
                "error": f"–û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ –¥–∞–Ω–Ω—ã—Ö: {str(e)}",
                "category": "data_processing"
            }), 400
    
    return jsonify({
        "analysis": "–î–ª—è –∞–Ω–∞–ª–∏–∑–∞ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–µ–¥–æ—Å—Ç–∞–≤—å—Ç–µ CSV –¥–∞–Ω–Ω—ã–µ –∏–ª–∏ —É—Ç–æ—á–Ω–∏—Ç–µ —Ç–∏–ø –∞–Ω–∞–ª–∏–∑–∞.",
        "example_format": "name,age,city\nJohn,25,NYC\nJane,30,LA",
        "category": "data_processing"
    }), 200

if __name__ == '__main__':
    logger.info("üìä Simple Data Processing API Server –∑–∞–ø—É—â–µ–Ω")
    app.run(port=8101, debug=False, use_reloader=False)
