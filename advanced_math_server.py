#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Advanced Math Server –¥–ª—è –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã—Ö –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –≤—ã—á–∏—Å–ª–µ–Ω–∏–π
"""

from flask import Flask, request, jsonify
import logging
from datetime import datetime
import math

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

app = Flask(__name__)

@app.route('/api/health', methods=['GET'])
def health_check():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–µ—Ä–≤–µ—Ä–∞"""
    return jsonify({
        'status': 'healthy',
        'service': 'Advanced Math Server',
        'port': 8100,
        'timestamp': datetime.now().isoformat(),
        'version': '1.0.0'
    })

@app.route('/api/math/advanced', methods=['GET', 'POST'])
def advanced_math():
    """–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –≤—ã—á–∏—Å–ª–µ–Ω–∏—è"""
    try:
        if request.method == 'GET':
            equation = request.args.get('equation', '')
        else:
            data = request.get_json()
            equation = data.get('equation', '')
        
        logger.info(f"üßÆ –ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å –ø—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–π –º–∞—Ç–µ–º–∞—Ç–∏–∫–∏: {equation[:50]}...")
        
        # –ü—Ä–æ—Å—Ç–∞—è –ª–æ–≥–∏–∫–∞ –≤—ã—á–∏—Å–ª–µ–Ω–∏–π
        result = {
            'status': 'success',
            'equation': equation,
            'solution': '',
            'steps': [],
            'service': 'advanced_math',
            'timestamp': datetime.now().isoformat()
        }
        
        if equation:
            equation_lower = equation.lower()
            
            if '–∫–≤–∞–¥—Ä–∞—Ç–Ω–æ–µ' in equation_lower or 'quadratic' in equation_lower:
                result['solution'] = "–ö–≤–∞–¥—Ä–∞—Ç–Ω–æ–µ —É—Ä–∞–≤–Ω–µ–Ω–∏–µ: ax¬≤ + bx + c = 0"
                result['steps'] = [
                    "1. –û–ø—Ä–µ–¥–µ–ª–∏—Ç—å –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã a, b, c",
                    "2. –í—ã—á–∏—Å–ª–∏—Ç—å –¥–∏—Å–∫—Ä–∏–º–∏–Ω–∞–Ω—Ç: D = b¬≤ - 4ac",
                    "3. –ï—Å–ª–∏ D > 0: –¥–≤–∞ –∫–æ—Ä–Ω—è",
                    "4. –ï—Å–ª–∏ D = 0: –æ–¥–∏–Ω –∫–æ—Ä–µ–Ω—å",
                    "5. –ï—Å–ª–∏ D < 0: –∫–æ–º–ø–ª–µ–∫—Å–Ω—ã–µ –∫–æ—Ä–Ω–∏"
                ]
            
            elif '–∏–Ω—Ç–µ–≥—Ä–∞–ª' in equation_lower or 'integral' in equation_lower:
                result['solution'] = "–ò–Ω—Ç–µ–≥—Ä–∞–ª—å–Ω–æ–µ –∏—Å—á–∏—Å–ª–µ–Ω–∏–µ"
                result['steps'] = [
                    "1. –û–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Ç–∏–ø –∏–Ω—Ç–µ–≥—Ä–∞–ª–∞",
                    "2. –ü—Ä–∏–º–µ–Ω–∏—Ç—å –ø–æ–¥—Ö–æ–¥—è—â–∏–π –º–µ—Ç–æ–¥",
                    "3. –ú–µ—Ç–æ–¥—ã: –∑–∞–º–µ–Ω–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π, –ø–æ —á–∞—Å—Ç—è–º",
                    "4. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç –¥–∏—Ñ—Ñ–µ—Ä–µ–Ω—Ü–∏—Ä–æ–≤–∞–Ω–∏–µ–º"
                ]
            
            elif '–ø—Ä–æ–∏–∑–≤–æ–¥–Ω–∞—è' in equation_lower or 'derivative' in equation_lower:
                result['solution'] = "–î–∏—Ñ—Ñ–µ—Ä–µ–Ω—Ü–∏–∞–ª—å–Ω–æ–µ –∏—Å—á–∏—Å–ª–µ–Ω–∏–µ"
                result['steps'] = [
                    "1. –û–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Ñ—É–Ω–∫—Ü–∏—é f(x)",
                    "2. –ü—Ä–∏–º–µ–Ω–∏—Ç—å –ø—Ä–∞–≤–∏–ª–∞ –¥–∏—Ñ—Ñ–µ—Ä–µ–Ω—Ü–∏—Ä–æ–≤–∞–Ω–∏—è",
                    "3. –ü—Ä–∞–≤–∏–ª–∞: –∫–æ–Ω—Å—Ç–∞–Ω—Ç–∞, —Å—Ç–µ–ø–µ–Ω—å, —Å—É–º–º–∞",
                    "4. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç"
                ]
            
            else:
                result['solution'] = "–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –≤—ã—á–∏—Å–ª–µ–Ω–∏—è"
                result['steps'] = [
                    "1. –ê–Ω–∞–ª–∏–∑ —É—Ä–∞–≤–Ω–µ–Ω–∏—è",
                    "2. –í—ã–±–æ—Ä –º–µ—Ç–æ–¥–∞ —Ä–µ—à–µ–Ω–∏—è",
                    "3. –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –∞–ª–≥–æ—Ä–∏—Ç–º–∞",
                    "4. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞"
                ]
        else:
            result['solution'] = "–û—Ç–ø—Ä–∞–≤—å—Ç–µ —É—Ä–∞–≤–Ω–µ–Ω–∏–µ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞"
            result['steps'] = ["–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Ç–∏–ø—ã: –∫–≤–∞–¥—Ä–∞—Ç–Ω—ã–µ —É—Ä–∞–≤–Ω–µ–Ω–∏—è, –∏–Ω—Ç–µ–≥—Ä–∞–ª—ã, –ø—Ä–æ–∏–∑–≤–æ–¥–Ω—ã–µ"]
        
        return jsonify(result)
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤—ã—á–∏—Å–ª–µ–Ω–∏–π: {e}")
        return jsonify({
            'status': 'error',
            'error': str(e)
        }), 500

if __name__ == '__main__':
    print("üßÆ Advanced Math Server –∑–∞–ø—É—â–µ–Ω")
    print("URL: http://localhost:8100")
    print("–î–æ—Å—Ç—É–ø–Ω—ã–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã:")
    print("  - GET/POST /api/math/advanced - –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ –≤—ã—á–∏—Å–ª–µ–Ω–∏—è")
    print("  - GET /api/health - –ø—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è")
    print("=" * 60)
    app.run(host='0.0.0.0', port=8100, debug=False)