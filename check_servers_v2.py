#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–£–ª—É—á—à–µ–Ω–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–µ—Ä–æ–≤ Rubin AI v2.0
"""

import requests
import socket
import time
from datetime import datetime

def check_port(host, port, timeout=3):
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –ø–æ—Ä—Ç–∞"""
    try:
        with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as s:
            s.settimeout(timeout)
            result = s.connect_ex((host, port))
            return result == 0
    except:
        return False

def check_http_endpoint(url, timeout=5):
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ HTTP endpoint"""
    try:
        response = requests.get(url, timeout=timeout)
        if response.status_code == 200:
            # –î–ª—è —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤ –Ω–µ –ø—ã—Ç–∞–µ–º—Å—è –ø–∞—Ä—Å–∏—Ç—å JSON
            if url.endswith('.html'):
                return True, None
            else:
                try:
                    return True, response.json()
                except:
                    return True, None
        return False, None
    except:
        return False, None

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏"""
    print("üîç –ü–†–û–í–ï–†–ö–ê –°–¢–ê–¢–£–°–ê –°–ï–†–í–ï–†–û–í RUBIN AI v2.0")
    print("=" * 60)
    print(f"–í—Ä–µ–º—è –ø—Ä–æ–≤–µ—Ä–∫–∏: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
    print()
    
    # –°–ø–∏—Å–æ–∫ —Å–µ—Ä–≤–µ—Ä–æ–≤ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
    servers = [
        ("AI –ß–∞—Ç (–û—Å–Ω–æ–≤–Ω–æ–π)", "localhost", 8084, "/health"),
        ("–≠–ª–µ–∫—Ç—Ä–æ—Ç–µ—Ö–Ω–∏–∫–∞", "localhost", 8087, "/api/electrical/status"),
        ("–†–∞–¥–∏–æ–º–µ—Ö–∞–Ω–∏–∫–∞", "localhost", 8089, "/api/radiomechanics/status"),
        ("–ö–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä—ã", "localhost", 8090, "/api/controllers/status"),
        ("–î–æ–∫—É–º–µ–Ω—Ç—ã", "localhost", 8088, "/health"),
        ("–°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π –í–µ–±", "localhost", 8085, "/RubinIDE.html")
    ]
    
    online_count = 0
    total_count = len(servers)
    
    for name, host, port, endpoint in servers:
        print(f"üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ {name}...")
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–∞
        port_open = check_port(host, port)
        
        if port_open:
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ HTTP endpoint
            url = f"http://{host}:{port}{endpoint}"
            http_ok, data = check_http_endpoint(url)
            
            if http_ok:
                print(f"‚úÖ {name}: –û–ù–õ–ê–ô–ù (–ø–æ—Ä—Ç {port})")
                if data:
                    print(f"   üìä –î–∞–Ω–Ω—ã–µ: {data.get('status', 'OK')}")
                online_count += 1
            else:
                print(f"‚ö†Ô∏è {name}: –ü–æ—Ä—Ç –æ—Ç–∫—Ä—ã—Ç, –Ω–æ HTTP –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç (–ø–æ—Ä—Ç {port})")
        else:
            print(f"‚ùå {name}: –û–§–§–õ–ê–ô–ù (–ø–æ—Ä—Ç {port})")
        
        time.sleep(0.5)  # –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞ –º–µ–∂–¥—É –ø—Ä–æ–≤–µ—Ä–∫–∞–º–∏
    
    print("\n" + "=" * 60)
    print(f"üìä –ò–¢–û–ì–û–í–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê:")
    print(f"   ‚úÖ –û–Ω–ª–∞–π–Ω: {online_count}/{total_count}")
    print(f"   ‚ùå –û—Ñ–ª–∞–π–Ω: {total_count - online_count}/{total_count}")
    
    if online_count == total_count:
        print("üéâ –í—Å–µ —Å–µ—Ä–≤–µ—Ä—ã —Ä–∞–±–æ—Ç–∞—é—Ç –Ω–æ—Ä–º–∞–ª—å–Ω–æ!")
        return True
    elif online_count > 0:
        print("‚ö†Ô∏è –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Å–µ—Ä–≤–µ—Ä—ã –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã")
        return False
    else:
        print("‚ùå –í—Å–µ —Å–µ—Ä–≤–µ—Ä—ã –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã!")
        return False

if __name__ == "__main__":
    success = main()
    exit(0 if success else 1)

















