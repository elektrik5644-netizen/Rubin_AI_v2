import sqlite3
import os

def check_endat_document():
    db_path = "rubin_ai_documents.db"
    if not os.path.exists(db_path):
        print(f"‚ùå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: {db_path}")
        return
    
    conn = None
    try:
        conn = sqlite3.connect(db_path)
        cursor = conn.cursor()
        
        # –ù–∞–π–¥–µ–º –¥–æ–∫—É–º–µ–Ω—Ç —Å EnDat
        cursor.execute("""
            SELECT id, file_name, content, category 
            FROM documents 
            WHERE file_name LIKE '%Endat%' OR file_name LIKE '%endat%'
        """)
        
        documents = cursor.fetchall()
        print(f"üìä –ù–∞–π–¥–µ–Ω–æ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ —Å Endat: {len(documents)}")
        
        for doc in documents:
            doc_id, file_name, content, category = doc
            print(f"\nüî∏ –î–æ–∫—É–º–µ–Ω—Ç {doc_id}:")
            print(f"   –§–∞–π–ª: {file_name}")
            print(f"   –ö–∞—Ç–µ–≥–æ—Ä–∏—è: {category}")
            print(f"   –î–ª–∏–Ω–∞ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ: {len(content)} —Å–∏–º–≤–æ–ª–æ–≤")
            
            # –ò—â–µ–º —É–ø–æ–º–∏–Ω–∞–Ω–∏—è —ç–Ω–∫–æ–¥–µ—Ä–æ–≤ –≤ —Ç–µ–∫—Å—Ç–µ
            if '—ç–Ω–∫–æ–¥–µ—Ä' in content.lower() or 'encoder' in content.lower():
                print("   ‚úÖ –°–æ–¥–µ—Ä–∂–∏—Ç —É–ø–æ–º–∏–Ω–∞–Ω–∏—è —ç–Ω–∫–æ–¥–µ—Ä–æ–≤!")
            else:
                print("   ‚ùå –ù–µ —Å–æ–¥–µ—Ä–∂–∏—Ç —É–ø–æ–º–∏–Ω–∞–Ω–∏–π —ç–Ω–∫–æ–¥–µ—Ä–æ–≤")
            
            print(f"   –ü–µ—Ä–≤—ã–µ 500 —Å–∏–º–≤–æ–ª–æ–≤:")
            print(f"   {content[:500]}")
            
            # –ò—â–µ–º –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞
            keywords = ['EnDat', '—ç–Ω–∫–æ–¥–µ—Ä', 'encoder', '–¥–∞—Ç—á–∏–∫', 'sensor', '–ø–æ–ª–æ–∂–µ–Ω–∏–µ', 'position']
            found_keywords = []
            for keyword in keywords:
                if keyword.lower() in content.lower():
                    found_keywords.append(keyword)
            
            if found_keywords:
                print(f"   üîç –ù–∞–π–¥–µ–Ω–Ω—ã–µ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞: {', '.join(found_keywords)}")
        
    except sqlite3.Error as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ SQLite: {e}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    finally:
        if conn:
            conn.close()

if __name__ == "__main__":
    check_endat_document()






















