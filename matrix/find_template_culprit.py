#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–ü–æ–∏—Å–∫ –≤–∏–Ω–æ–≤–Ω–∏–∫–∞ —à–∞–±–ª–æ–Ω–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤
"""

import requests
import json

def find_template_culprit():
    """–ù–∞–π—Ç–∏, –∫—Ç–æ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —à–∞–±–ª–æ–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã"""
    print("üîç –ü–û–ò–°–ö –í–ò–ù–û–í–ù–ò–ö–ê –®–ê–ë–õ–û–ù–ù–´–• –û–¢–í–ï–¢–û–í")
    print("=" * 50)
    
    server_url = "http://localhost:8083"
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –≤–æ–ø—Ä–æ—Å—ã
    test_questions = [
        "–ó–∞–∫–æ–Ω—ã –ö–∏—Ä—Ö–≥–æ—Ñ–∞ –ø—Ä–∏–º–µ–Ω–∏–º—ã —Ç–æ–ª—å–∫–æ –∫ —Ü–µ–ø—è–º –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–≥–æ —Ç–æ–∫–∞",
        "–í—Å–µ –¥–∞—Ç—á–∏–∫–∏ –≤—ã–¥–∞—é—Ç –∞–Ω–∞–ª–æ–≥–æ–≤—ã–π —Å–∏–≥–Ω–∞–ª", 
        "G-–∫–æ–¥—ã –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è —Ç–æ–ª—å–∫–æ –≤ —Ñ—Ä–µ–∑–µ—Ä–Ω—ã—Ö —Å—Ç–∞–Ω–∫–∞—Ö",
        "–°–ª—É—á–∞–π–Ω—ã–π –≤–æ–ø—Ä–æ—Å –ø—Ä–æ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—é",
        "–ß—Ç–æ-—Ç–æ –ø—Ä–æ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ",
        "–í–æ–ø—Ä–æ—Å –ø—Ä–æ –¥–∞—Ç—á–∏–∫–∏"
    ]
    
    for i, question in enumerate(test_questions, 1):
        print(f"\nüìù –¢–µ—Å—Ç {i}: {question}")
        print("-" * 40)
        
        try:
            response = requests.post(
                f"{server_url}/api/chat",
                json={"message": question},
                timeout=10
            )
            
            if response.status_code == 200:
                data = response.json()
                ai_response = data.get("response", "–ù–µ—Ç –æ—Ç–≤–µ—Ç–∞")
                
                # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç
                print(f"üìä –ê–Ω–∞–ª–∏–∑ –æ—Ç–≤–µ—Ç–∞:")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã
                if "–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –Ω–µ—Ç–æ—á–Ω–æ—Å—Ç—å" in ai_response:
                    print("   ‚úÖ –ö–û–ù–ö–†–ï–¢–ù–´–ô –û–¢–í–ï–¢ (–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–µ—Ç–æ—á–Ω–æ—Å—Ç–∏)")
                elif "–ù–µ—Ç–æ—á–Ω–æ—Å—Ç—å –≤ –ø–æ–Ω–∏–º–∞–Ω–∏–∏" in ai_response:
                    print("   ‚úÖ –ö–û–ù–ö–†–ï–¢–ù–´–ô –û–¢–í–ï–¢ (–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–µ—Ç–æ—á–Ω–æ—Å—Ç–∏)")
                elif "–ù–µ—Ç–æ—á–Ω–æ—Å—Ç—å –≤ –ø–æ–Ω–∏–º–∞–Ω–∏–∏ G-–∫–æ–¥–æ–≤" in ai_response:
                    print("   ‚úÖ –ö–û–ù–ö–†–ï–¢–ù–´–ô –û–¢–í–ï–¢ (–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–µ—Ç–æ—á–Ω–æ—Å—Ç–∏)")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ —à–∞–±–ª–æ–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã
                elif "–ê–Ω–∞–ª–∏–∑ –≤–∞—à–µ–≥–æ –≤–æ–ø—Ä–æ—Å–∞:" in ai_response:
                    print("   ‚ùå –®–ê–ë–õ–û–ù–ù–´–ô –û–¢–í–ï–¢ (generate_contextual_response)")
                    print("   üîç –í–ò–ù–û–í–ù–ò–ö: –§—É–Ω–∫—Ü–∏—è generate_contextual_response()")
                    print("   üìç –°—Ç—Ä–æ–∫–∞: if detected_topics:")
                elif "–ü–æ–Ω—è–ª –≤–∞—à –∑–∞–ø—Ä–æ—Å:" in ai_response:
                    print("   ‚ùå –®–ê–ë–õ–û–ù–ù–´–ô –û–¢–í–ï–¢ (generate_contextual_response)")
                    print("   üîç –í–ò–ù–û–í–ù–ò–ö: –§—É–Ω–∫—Ü–∏—è generate_contextual_response()")
                    print("   üìç –°—Ç—Ä–æ–∫–∞: return f\"\"\"ü§ñ **–ü–æ–Ω—è–ª –≤–∞—à –∑–∞–ø—Ä–æ—Å:**")
                else:
                    print("   ‚ùì –ù–ï–ò–ó–í–ï–°–¢–ù–´–ô –¢–ò–ü –û–¢–í–ï–¢–ê")
                
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 100 —Å–∏–º–≤–æ–ª–æ–≤
                preview = ai_response[:100] + "..." if len(ai_response) > 100 else ai_response
                print(f"   üìÑ –ü—Ä–µ–≤—å—é: {preview}")
                    
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ API: HTTP {response.status_code}")
                
        except requests.exceptions.RequestException as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
    
    print(f"\nüéØ –í–´–í–û–î–´:")
    print(f"   üîç –í–ò–ù–û–í–ù–ò–ö: –§—É–Ω–∫—Ü–∏—è generate_contextual_response()")
    print(f"   üìç –ú–µ—Å—Ç–æ: smart_rubin_server.py, —Å—Ç—Ä–æ–∫–∏ 509-570")
    print(f"   üö® –ü—Ä–æ–±–ª–µ–º–∞: –°—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –¥–ª—è –≤–æ–ø—Ä–æ—Å–æ–≤, –Ω–µ –ø–æ–ø–∞–≤—à–∏—Ö –≤ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —É—Å–ª–æ–≤–∏—è")
    print(f"   ‚úÖ –†–µ—à–µ–Ω–∏–µ: –î–æ–±–∞–≤–∏—Ç—å –±–æ–ª—å—à–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –ü–ï–†–ï–î –≤—ã–∑–æ–≤–æ–º —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏")

if __name__ == "__main__":
    find_template_culprit()
