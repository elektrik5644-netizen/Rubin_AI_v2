#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–ü–ª–∞–Ω —É–ª—É—á—à–µ–Ω–∏–π —Å–∏—Å—Ç–µ–º—ã Rubin AI
"""

import sqlite3
import json
import os
from datetime import datetime
from typing import Dict, List, Set

class RubinAIImprover:
    def __init__(self, db_path="rubin_ai_v2.db"):
        self.db_path = db_path
        self.connection = None
        
    def connect(self):
        """–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"""
        try:
            self.connection = sqlite3.connect(self.db_path)
            return True
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î: {e}")
            return False
    
    def close(self):
        """–ó–∞–∫—Ä—ã—Ç–∏–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è"""
        if self.connection:
            self.connection.close()
    
    def add_pid_documents(self):
        """–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –ø–æ –ü–ò–î-—Ä–µ–≥—É–ª—è—Ç–æ—Ä–∞–º"""
        print("üîß –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –ø–æ –ü–ò–î-—Ä–µ–≥—É–ª—è—Ç–æ—Ä–∞–º...")
        
        pid_documents = [
            {
                'title': '–ü–ò–î-—Ä–µ–≥—É–ª—è—Ç–æ—Ä—ã: –¢–µ–æ—Ä–∏—è –∏ –ø—Ä–∞–∫—Ç–∏–∫–∞',
                'content': '''
# –ü–ò–î-—Ä–µ–≥—É–ª—è—Ç–æ—Ä—ã: –¢–µ–æ—Ä–∏—è –∏ –ø—Ä–∞–∫—Ç–∏–∫–∞

## –û—Å–Ω–æ–≤—ã –ü–ò–î-—Ä–µ–≥—É–ª–∏—Ä–æ–≤–∞–Ω–∏—è

–ü–ò–î-—Ä–µ–≥—É–ª—è—Ç–æ—Ä (Proportional-Integral-Derivative) - —ç—Ç–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä–æ–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Ç—Ä–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ –¥–ª—è –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –∂–µ–ª–∞–µ–º–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è —Ä–µ–≥—É–ª–∏—Ä—É–µ–º–æ–π –≤–µ–ª–∏—á–∏–Ω—ã.

### –ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –ü–ò–î-—Ä–µ–≥—É–ª—è—Ç–æ—Ä–∞:

1. **–ü—Ä–æ–ø–æ—Ä—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç (P)**:
   - –†–µ–∞–≥–∏—Ä—É–µ—Ç –Ω–∞ —Ç–µ–∫—É—â—É—é –æ—à–∏–±–∫—É
   - –§–æ—Ä–º—É–ª–∞: P = Kp √ó e(t)
   - –ì–¥–µ Kp - –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –ø—Ä–æ–ø–æ—Ä—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏, e(t) - –æ—à–∏–±–∫–∞

2. **–ò–Ω—Ç–µ–≥—Ä–∞–ª—å–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç (I)**:
   - –£—Å—Ç—Ä–∞–Ω—è–µ—Ç —Å—Ç–∞—Ç–∏—á–µ—Å–∫—É—é –æ—à–∏–±–∫—É
   - –§–æ—Ä–º—É–ª–∞: I = Ki √ó ‚à´e(t)dt
   - –ì–¥–µ Ki - –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏

3. **–î–∏—Ñ—Ñ–µ—Ä–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç (D)**:
   - –ü—Ä–µ–¥—Å–∫–∞–∑—ã–≤–∞–µ—Ç –±—É–¥—É—â—É—é –æ—à–∏–±–∫—É
   - –§–æ—Ä–º—É–ª–∞: D = Kd √ó de(t)/dt
   - –ì–¥–µ Kd - –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –¥–∏—Ñ—Ñ–µ—Ä–µ–Ω—Ü–∏—Ä–æ–≤–∞–Ω–∏—è

### –û–±—â–∞—è —Ñ–æ—Ä–º—É–ª–∞ –ü–ò–î-—Ä–µ–≥—É–ª—è—Ç–æ—Ä–∞:
u(t) = Kp √ó e(t) + Ki √ó ‚à´e(t)dt + Kd √ó de(t)/dt

## –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ü–ò–î-—Ä–µ–≥—É–ª—è—Ç–æ—Ä–∞

### –ú–µ—Ç–æ–¥ –ó–∏–≥–ª–µ—Ä–∞-–ù–∏–∫–æ–ª—Å–∞:
1. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Ki = 0, Kd = 0
2. –£–≤–µ–ª–∏—á–∏–≤–∞—Ç—å Kp –¥–æ –ø–æ—è–≤–ª–µ–Ω–∏—è —É—Å—Ç–æ–π—á–∏–≤—ã—Ö –∫–æ–ª–µ–±–∞–Ω–∏–π
3. –ó–∞–ø–∏—Å–∞—Ç—å –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç Kc –∏ –ø–µ—Ä–∏–æ–¥ –∫–æ–ª–µ–±–∞–Ω–∏–π Tc
4. –†–∞—Å—Å—á–∏—Ç–∞—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:
   - Kp = 0.6 √ó Kc
   - Ki = 2 √ó Kp / Tc
   - Kd = Kp √ó Tc / 8

### –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:
- –ù–∞—á–∏–Ω–∞—Ç—å —Å –º–∞–ª—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–æ–≤
- –ù–∞—Å—Ç—Ä–∞–∏–≤–∞—Ç—å –ø–æ –æ–¥–Ω–æ–º—É –ø–∞—Ä–∞–º–µ—Ç—Ä—É
- –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –æ—Å—Ü–∏–ª–ª–æ–≥—Ä–∞—Ñ –¥–ª—è –∫–æ–Ω—Ç—Ä–æ–ª—è
- –£—á–∏—Ç—ã–≤–∞—Ç—å –∏–Ω–µ—Ä—Ü–∏–æ–Ω–Ω–æ—Å—Ç—å —Å–∏—Å—Ç–µ–º—ã

## –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –≤ –ø—Ä–æ–º—ã—à–ª–µ–Ω–Ω–æ—Å—Ç–∏

### –°–∏—Å—Ç–µ–º—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–æ–π:
- –ü–µ—á–∏ –∏ —Å—É—à–∏–ª–∫–∏
- –¢–µ–ø–ª–∏—Ü—ã
- –°–∏—Å—Ç–µ–º—ã –æ—Ç–æ–ø–ª–µ–Ω–∏—è

### –°–∏—Å—Ç–µ–º—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–∞–≤–ª–µ–Ω–∏–µ–º:
- –ö–æ–º–ø—Ä–µ—Å—Å–æ—Ä—ã
- –ù–∞—Å–æ—Å—ã
- –ü–Ω–µ–≤–º–∞—Ç–∏—á–µ—Å–∫–∏–µ —Å–∏—Å—Ç–µ–º—ã

### –°–∏—Å—Ç–µ–º—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —É—Ä–æ–≤–Ω–µ–º:
- –†–µ–∑–µ—Ä–≤—É–∞—Ä—ã
- –ë–∞–∫–∏
- –°–∏—Å—Ç–µ–º—ã –≤–æ–¥–æ—Å–Ω–∞–±–∂–µ–Ω–∏—è

## –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –ü–ò–î-—Ä–µ–≥—É–ª—è—Ç–æ—Ä–æ–≤:
- –í—ã—Å–æ–∫–∞—è —Ç–æ—á–Ω–æ—Å—Ç—å
- –ë—ã—Å—Ç—Ä–∞—è —Ä–µ–∞–∫—Ü–∏—è
- –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ—Å—Ç—å
- –ü—Ä–æ—Å—Ç–æ—Ç–∞ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏

## –ù–µ–¥–æ—Å—Ç–∞—Ç–∫–∏:
- –°–ª–æ–∂–Ω–æ—Å—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
- –ß—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∫ —à—É–º–∞–º
- –ù–µ—Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å –ø—Ä–∏ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–µ
                ''',
                'category': 'controllers',
                'metadata': {
                    'description': '–ü–æ–¥—Ä–æ–±–Ω–æ–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ –ü–ò–î-—Ä–µ–≥—É–ª—è—Ç–æ—Ä–∞–º',
                    'author': 'Rubin AI',
                    'version': '2.0',
                    'tags': ['–ü–ò–î', '—Ä–µ–≥—É–ª—è—Ç–æ—Ä', '–∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è', '—É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ']
                }
            },
            {
                'title': '–ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–∏–º–µ—Ä—ã –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ü–ò–î-—Ä–µ–≥—É–ª—è—Ç–æ—Ä–æ–≤',
                'content': '''
# –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–∏–º–µ—Ä—ã –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ü–ò–î-—Ä–µ–≥—É–ª—è—Ç–æ—Ä–æ–≤

## –ü—Ä–∏–º–µ—Ä 1: –°–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–æ–π –ø–µ—á–∏

### –ü–∞—Ä–∞–º–µ—Ç—Ä—ã —Å–∏—Å—Ç–µ–º—ã:
- –û–±—ä–µ–º –ø–µ—á–∏: 1 –º¬≥
- –ú–æ—â–Ω–æ—Å—Ç—å –Ω–∞–≥—Ä–µ–≤–∞—Ç–µ–ª—è: 5 –∫–í—Ç
- –¶–µ–ª–µ–≤–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: 200¬∞C
- –í—Ä–µ–º—è –Ω–∞–≥—Ä–µ–≤–∞: 30 –º–∏–Ω—É—Ç

### –ù–∞—á–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:
- Kp = 2.0
- Ki = 0.1
- Kd = 0.5

### –ü—Ä–æ—Ü–µ—Å—Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:
1. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Kp = 2.0, Ki = 0, Kd = 0
2. –ù–∞–±–ª—é–¥–∞—Ç—å –∑–∞ –ø–µ—Ä–µ—Ö–æ–¥–Ω—ã–º –ø—Ä–æ—Ü–µ—Å—Å–æ–º
3. –ü—Ä–∏ –ø–µ—Ä–µ—Ä–µ–≥—É–ª–∏—Ä–æ–≤–∞–Ω–∏–∏ > 20% —É–º–µ–Ω—å—à–∏—Ç—å Kp
4. –ü—Ä–∏ –º–µ–¥–ª–µ–Ω–Ω–æ–º –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–∏ —É—Å—Ç–∞–≤–∫–∏ —É–≤–µ–ª–∏—á–∏—Ç—å Kp
5. –î–æ–±–∞–≤–∏—Ç—å –∏–Ω—Ç–µ–≥—Ä–∞–ª—å–Ω—É—é —Å–æ—Å—Ç–∞–≤–ª—è—é—â—É—é –¥–ª—è —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—á–µ—Å–∫–æ–π –æ—à–∏–±–∫–∏
6. –î–æ–±–∞–≤–∏—Ç—å –¥–∏—Ñ—Ñ–µ—Ä–µ–Ω—Ü–∏–∞–ª—å–Ω—É—é —Å–æ—Å—Ç–∞–≤–ª—è—é—â—É—é –¥–ª—è —É–º–µ–Ω—å—à–µ–Ω–∏—è –ø–µ—Ä–µ—Ä–µ–≥—É–ª–∏—Ä–æ–≤–∞–Ω–∏—è

### –§–∏–Ω–∞–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:
- Kp = 1.5
- Ki = 0.05
- Kd = 0.3

## –ü—Ä–∏–º–µ—Ä 2: –°–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–∞–≤–ª–µ–Ω–∏–µ–º

### –ü–∞—Ä–∞–º–µ—Ç—Ä—ã —Å–∏—Å—Ç–µ–º—ã:
- –û–±—ä–µ–º —Å–∏—Å—Ç–µ–º—ã: 0.5 –º¬≥
- –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∫–æ–º–ø—Ä–µ—Å—Å–æ—Ä–∞: 100 –ª/–º–∏–Ω
- –¶–µ–ª–µ–≤–æ–µ –¥–∞–≤–ª–µ–Ω–∏–µ: 6 –±–∞—Ä
- –í—Ä–µ–º—è –Ω–∞–±–æ—Ä–∞ –¥–∞–≤–ª–µ–Ω–∏—è: 5 –º–∏–Ω—É—Ç

### –ù–∞—Å—Ç—Ä–æ–π–∫–∞:
1. –ù–∞—á–∞—Ç—å —Å Kp = 1.0
2. –ü—Ä–∏ –∫–æ–ª–µ–±–∞–Ω–∏—è—Ö —É–º–µ–Ω—å—à–∏—Ç—å Kp –¥–æ 0.7
3. –î–æ–±–∞–≤–∏—Ç—å Ki = 0.02 –¥–ª—è —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—á–µ—Å–∫–æ–π –æ—à–∏–±–∫–∏
4. –î–æ–±–∞–≤–∏—Ç—å Kd = 0.1 –¥–ª—è —Å—Ç–∞–±–∏–ª–∏–∑–∞—Ü–∏–∏

### –†–µ–∑—É–ª—å—Ç–∞—Ç:
- –°—Ç–∞—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: < 0.1 –±–∞—Ä
- –í—Ä–µ–º—è —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è: < 2 –º–∏–Ω—É—Ç
- –ü–µ—Ä–µ—Ä–µ–≥—É–ª–∏—Ä–æ–≤–∞–Ω–∏–µ: < 5%

## –ü—Ä–∏–º–µ—Ä 3: –°–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —É—Ä–æ–≤–Ω–µ–º

### –ü–∞—Ä–∞–º–µ—Ç—Ä—ã —Å–∏—Å—Ç–µ–º—ã:
- –î–∏–∞–º–µ—Ç—Ä –±–∞–∫–∞: 2 –º
- –í—ã—Å–æ—Ç–∞ –±–∞–∫–∞: 3 –º
- –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –Ω–∞—Å–æ—Å–∞: 50 –ª/–º–∏–Ω
- –¶–µ–ª–µ–≤–æ–π —É—Ä–æ–≤–µ–Ω—å: 2 –º

### –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:
- –£—á–µ—Å—Ç—å –Ω–µ–ª–∏–Ω–µ–π–Ω–æ—Å—Ç—å —Å–∏—Å—Ç–µ–º—ã
- –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∞–¥–∞–ø—Ç–∏–≤–Ω—ã–µ –∞–ª–≥–æ—Ä–∏—Ç–º—ã
- –£—á–∏—Ç—ã–≤–∞—Ç—å –∑–∞–¥–µ—Ä–∂–∫–∏ –≤ —Å–∏—Å—Ç–µ–º–µ

### –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:
- Kp = 0.8
- Ki = 0.01
- Kd = 0.2

## –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø—Ä–æ–±–ª–µ–º

### –ü–µ—Ä–µ—Ä–µ–≥—É–ª–∏—Ä–æ–≤–∞–Ω–∏–µ:
- –£–º–µ–Ω—å—à–∏—Ç—å Kp
- –£–≤–µ–ª–∏—á–∏—Ç—å Kd
- –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∏–Ω–µ—Ä—Ü–∏–æ–Ω–Ω–æ—Å—Ç—å —Å–∏—Å—Ç–µ–º—ã

### –ú–µ–¥–ª–µ–Ω–Ω–∞—è —Ä–µ–∞–∫—Ü–∏—è:
- –£–≤–µ–ª–∏—á–∏—Ç—å Kp
- –£–º–µ–Ω—å—à–∏—Ç—å Kd
- –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞

### –°—Ç–∞—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:
- –£–≤–µ–ª–∏—á–∏—Ç—å Ki
- –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ç–æ—Ä–∞
- –£—á–µ—Å—Ç—å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã

### –ù–µ—Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å:
- –£–º–µ–Ω—å—à–∏—Ç—å –≤—Å–µ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã
- –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–∞—á–µ—Å—Ç–≤–æ —Å–∏–≥–Ω–∞–ª–æ–≤
- –£—á–µ—Å—Ç—å –∑–∞–¥–µ—Ä–∂–∫–∏ –≤ —Å–∏—Å—Ç–µ–º–µ
                ''',
                'category': 'controllers',
                'metadata': {
                    'description': '–ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–∏–º–µ—Ä—ã –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ü–ò–î-—Ä–µ–≥—É–ª—è—Ç–æ—Ä–æ–≤',
                    'author': 'Rubin AI',
                    'version': '2.0',
                    'tags': ['–ü–ò–î', '–Ω–∞—Å—Ç—Ä–æ–π–∫–∞', '–ø—Ä–∏–º–µ—Ä—ã', '–ø—Ä–∞–∫—Ç–∏–∫–∞']
                }
            }
        ]
        
        cursor = self.connection.cursor()
        added_count = 0
        
        for doc in pid_documents:
            try:
                cursor.execute('''
                    INSERT INTO documents (file_name, content, category, file_path, file_size, 
                                         file_type, metadata, tags, created_at, updated_at, 
                                         difficulty_level, last_updated)
                    VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
                ''', (
                    doc['title'],
                    doc['content'],
                    doc['category'],
                    f"pid_guide_{added_count + 1}.txt",
                    len(doc['content']),
                    'txt',
                    json.dumps(doc['metadata']),
                    json.dumps(doc['metadata'].get('tags', [])),
                    datetime.now().isoformat(),
                    datetime.now().isoformat(),
                    'medium',
                    datetime.now().isoformat()
                ))
                added_count += 1
                print(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω –¥–æ–∫—É–º–µ–Ω—Ç: {doc['title']}")
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞: {e}")
        
        self.connection.commit()
        print(f"üìä –î–æ–±–∞–≤–ª–µ–Ω–æ {added_count} –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –ø–æ –ü–ò–î-—Ä–µ–≥—É–ª—è—Ç–æ—Ä–∞–º")
        return added_count
    
    def expand_synonyms(self):
        """–†–∞—Å—à–∏—Ä–µ–Ω–∏–µ —Å–ª–æ–≤–∞—Ä—è —Å–∏–Ω–æ–Ω–∏–º–æ–≤"""
        print("üîç –†–∞—Å—à–∏—Ä–µ–Ω–∏–µ —Å–ª–æ–≤–∞—Ä—è —Å–∏–Ω–æ–Ω–∏–º–æ–≤...")
        
        new_synonyms = {
            # –ü–ò–î-—Ä–µ–≥—É–ª—è—Ç–æ—Ä—ã
            "–ü–ò–î-—Ä–µ–≥—É–ª—è—Ç–æ—Ä": ["PID-—Ä–µ–≥—É–ª—è—Ç–æ—Ä", "–ø–∏–¥-—Ä–µ–≥—É–ª—è—Ç–æ—Ä", "pid-—Ä–µ–≥—É–ª—è—Ç–æ—Ä", "—Ä–µ–≥—É–ª—è—Ç–æ—Ä", "–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä", "—É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ", "–∞–≤—Ç–æ–º–∞—Ç–∏–∫–∞"],
            "PID-—Ä–µ–≥—É–ª—è—Ç–æ—Ä": ["–ü–ò–î-—Ä–µ–≥—É–ª—è—Ç–æ—Ä", "–ø–∏–¥-—Ä–µ–≥—É–ª—è—Ç–æ—Ä", "pid-—Ä–µ–≥—É–ª—è—Ç–æ—Ä", "—Ä–µ–≥—É–ª—è—Ç–æ—Ä", "–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä", "—É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ", "–∞–≤—Ç–æ–º–∞—Ç–∏–∫–∞"],
            "–ø–∏–¥-—Ä–µ–≥—É–ª—è—Ç–æ—Ä": ["–ü–ò–î-—Ä–µ–≥—É–ª—è—Ç–æ—Ä", "PID-—Ä–µ–≥—É–ª—è—Ç–æ—Ä", "pid-—Ä–µ–≥—É–ª—è—Ç–æ—Ä", "—Ä–µ–≥—É–ª—è—Ç–æ—Ä", "–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä", "—É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ", "–∞–≤—Ç–æ–º–∞—Ç–∏–∫–∞"],
            "pid-—Ä–µ–≥—É–ª—è—Ç–æ—Ä": ["–ü–ò–î-—Ä–µ–≥—É–ª—è—Ç–æ—Ä", "PID-—Ä–µ–≥—É–ª—è—Ç–æ—Ä", "–ø–∏–¥-—Ä–µ–≥—É–ª—è—Ç–æ—Ä", "—Ä–µ–≥—É–ª—è—Ç–æ—Ä", "–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä", "—É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ", "–∞–≤—Ç–æ–º–∞—Ç–∏–∫–∞"],
            
            # –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è
            "–∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è": ["–∞–≤—Ç–æ–º–∞—Ç–∏–∫–∞", "–∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–∏–µ", "–º–µ—Ö–∞–Ω–∏–∑–∞—Ü–∏—è", "—Ä–æ–±–æ—Ç–∏–∑–∞—Ü–∏—è", "—É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ", "–∫–æ–Ω—Ç—Ä–æ–ª—å"],
            "–∞–≤—Ç–æ–º–∞—Ç–∏–∫–∞": ["–∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è", "–∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–∏–µ", "–º–µ—Ö–∞–Ω–∏–∑–∞—Ü–∏—è", "—Ä–æ–±–æ—Ç–∏–∑–∞—Ü–∏—è", "—É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ", "–∫–æ–Ω—Ç—Ä–æ–ª—å"],
            "–∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–∏–µ": ["–∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è", "–∞–≤—Ç–æ–º–∞—Ç–∏–∫–∞", "–º–µ—Ö–∞–Ω–∏–∑–∞—Ü–∏—è", "—Ä–æ–±–æ—Ç–∏–∑–∞—Ü–∏—è", "—É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ", "–∫–æ–Ω—Ç—Ä–æ–ª—å"],
            "–º–µ—Ö–∞–Ω–∏–∑–∞—Ü–∏—è": ["–∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è", "–∞–≤—Ç–æ–º–∞—Ç–∏–∫–∞", "–∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–∏–µ", "—Ä–æ–±–æ—Ç–∏–∑–∞—Ü–∏—è", "—É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ", "–∫–æ–Ω—Ç—Ä–æ–ª—å"],
            "—Ä–æ–±–æ—Ç–∏–∑–∞—Ü–∏—è": ["–∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è", "–∞–≤—Ç–æ–º–∞—Ç–∏–∫–∞", "–∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–∏–µ", "–º–µ—Ö–∞–Ω–∏–∑–∞—Ü–∏—è", "—É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ", "–∫–æ–Ω—Ç—Ä–æ–ª—å"],
            
            # –ü–õ–ö
            "–ü–õ–ö": ["PLC", "plc", "–ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä—É–µ–º—ã–π –ª–æ–≥–∏—á–µ—Å–∫–∏–π –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä", "–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä", "–∞–≤—Ç–æ–º–∞—Ç–∏–∫–∞", "—É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ"],
            "PLC": ["–ü–õ–ö", "plc", "–ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä—É–µ–º—ã–π –ª–æ–≥–∏—á–µ—Å–∫–∏–π –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä", "–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä", "–∞–≤—Ç–æ–º–∞—Ç–∏–∫–∞", "—É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ"],
            "plc": ["–ü–õ–ö", "PLC", "–ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä—É–µ–º—ã–π –ª–æ–≥–∏—á–µ—Å–∫–∏–π –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä", "–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä", "–∞–≤—Ç–æ–º–∞—Ç–∏–∫–∞", "—É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ"],
            "–ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä—É–µ–º—ã–π –ª–æ–≥–∏—á–µ—Å–∫–∏–π –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä": ["–ü–õ–ö", "PLC", "plc", "–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä", "–∞–≤—Ç–æ–º–∞—Ç–∏–∫–∞", "—É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ"],
            
            # SCADA
            "SCADA": ["—Å–∫–∞–¥–∞", "–¥–∏—Å–ø–µ—Ç—á–µ—Ä—Å–∫–∞—è —Å–∏—Å—Ç–µ–º–∞", "—Å–∏—Å—Ç–µ–º–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞", "—Å–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è", "–∞–≤—Ç–æ–º–∞—Ç–∏–∫–∞"],
            "—Å–∫–∞–¥–∞": ["SCADA", "–¥–∏—Å–ø–µ—Ç—á–µ—Ä—Å–∫–∞—è —Å–∏—Å—Ç–µ–º–∞", "—Å–∏—Å—Ç–µ–º–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞", "—Å–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è", "–∞–≤—Ç–æ–º–∞—Ç–∏–∫–∞"],
            "–¥–∏—Å–ø–µ—Ç—á–µ—Ä—Å–∫–∞—è —Å–∏—Å—Ç–µ–º–∞": ["SCADA", "—Å–∫–∞–¥–∞", "—Å–∏—Å—Ç–µ–º–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞", "—Å–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è", "–∞–≤—Ç–æ–º–∞—Ç–∏–∫–∞"],
            "—Å–∏—Å—Ç–µ–º–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞": ["SCADA", "—Å–∫–∞–¥–∞", "–¥–∏—Å–ø–µ—Ç—á–µ—Ä—Å–∫–∞—è —Å–∏—Å—Ç–µ–º–∞", "—Å–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è", "–∞–≤—Ç–æ–º–∞—Ç–∏–∫–∞"],
            
            # –î–∞—Ç—á–∏–∫–∏
            "–¥–∞—Ç—á–∏–∫": ["—Å–µ–Ω—Å–æ—Ä", "–∏–∑–º–µ—Ä–∏—Ç–µ–ª—å", "–ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å", "–∏–∑–º–µ—Ä–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–∏–±–æ—Ä", "–∫–æ–Ω—Ç—Ä–æ–ª—å"],
            "—Å–µ–Ω—Å–æ—Ä": ["–¥–∞—Ç—á–∏–∫", "–∏–∑–º–µ—Ä–∏—Ç–µ–ª—å", "–ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å", "–∏–∑–º–µ—Ä–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–∏–±–æ—Ä", "–∫–æ–Ω—Ç—Ä–æ–ª—å"],
            "–∏–∑–º–µ—Ä–∏—Ç–µ–ª—å": ["–¥–∞—Ç—á–∏–∫", "—Å–µ–Ω—Å–æ—Ä", "–ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å", "–∏–∑–º–µ—Ä–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–∏–±–æ—Ä", "–∫–æ–Ω—Ç—Ä–æ–ª—å"],
            "–ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å": ["–¥–∞—Ç—á–∏–∫", "—Å–µ–Ω—Å–æ—Ä", "–∏–∑–º–µ—Ä–∏—Ç–µ–ª—å", "–∏–∑–º–µ—Ä–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–∏–±–æ—Ä", "–∫–æ–Ω—Ç—Ä–æ–ª—å"],
            
            # –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
            "–∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ": ["–ø—Ä–∏–≤–æ–¥", "–∞–∫—Ç—É–∞—Ç–æ—Ä", "–∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –º–µ—Ö–∞–Ω–∏–∑–º", "—É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è"],
            "–ø—Ä–∏–≤–æ–¥": ["–∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ", "–∞–∫—Ç—É–∞—Ç–æ—Ä", "–∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –º–µ—Ö–∞–Ω–∏–∑–º", "—É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è"],
            "–∞–∫—Ç—É–∞—Ç–æ—Ä": ["–∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ", "–ø—Ä–∏–≤–æ–¥", "–∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –º–µ—Ö–∞–Ω–∏–∑–º", "—É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è"],
            "–∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –º–µ—Ö–∞–Ω–∏–∑–º": ["–∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ", "–ø—Ä–∏–≤–æ–¥", "–∞–∫—Ç—É–∞—Ç–æ—Ä", "—É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è"],
            
            # –ü—Ä–æ—Ç–æ–∫–æ–ª—ã —Å–≤—è–∑–∏
            "Modbus": ["–º–æ–¥–±–∞—Å", "–ø—Ä–æ—Ç–æ–∫–æ–ª —Å–≤—è–∑–∏", "–ø—Ä–æ–º—ã—à–ª–µ–Ω–Ω–∞—è —Å–µ—Ç—å", "–∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏—è"],
            "–º–æ–¥–±–∞—Å": ["Modbus", "–ø—Ä–æ—Ç–æ–∫–æ–ª —Å–≤—è–∑–∏", "–ø—Ä–æ–º—ã—à–ª–µ–Ω–Ω–∞—è —Å–µ—Ç—å", "–∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏—è"],
            "Profibus": ["–ø—Ä–æ—Ñ–∏–±–∞—Å", "–ø—Ä–æ—Ç–æ–∫–æ–ª —Å–≤—è–∑–∏", "–ø—Ä–æ–º—ã—à–ª–µ–Ω–Ω–∞—è —Å–µ—Ç—å", "–∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏—è"],
            "–ø—Ä–æ—Ñ–∏–±–∞—Å": ["Profibus", "–ø—Ä–æ—Ç–æ–∫–æ–ª —Å–≤—è–∑–∏", "–ø—Ä–æ–º—ã—à–ª–µ–Ω–Ω–∞—è —Å–µ—Ç—å", "–∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏—è"],
            "Ethernet/IP": ["—ç–∑–µ—Ä–Ω–µ—Ç –∞–π–ø–∏", "–ø—Ä–æ—Ç–æ–∫–æ–ª —Å–≤—è–∑–∏", "–ø—Ä–æ–º—ã—à–ª–µ–Ω–Ω–∞—è —Å–µ—Ç—å", "–∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏—è"],
            "—ç–∑–µ—Ä–Ω–µ—Ç –∞–π–ø–∏": ["Ethernet/IP", "–ø—Ä–æ—Ç–æ–∫–æ–ª —Å–≤—è–∑–∏", "–ø—Ä–æ–º—ã—à–ª–µ–Ω–Ω–∞—è —Å–µ—Ç—å", "–∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏—è"]
        }
        
        cursor = self.connection.cursor()
        added_count = 0
        
        for term, synonyms in new_synonyms.items():
            for synonym in synonyms:
                try:
                    cursor.execute('''
                        INSERT OR IGNORE INTO synonyms (term, synonym, category, created_at)
                        VALUES (?, ?, ?, ?)
                    ''', (term, synonym, 'automation', datetime.now().isoformat()))
                    added_count += 1
                except Exception as e:
                    print(f"‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å–∏–Ω–æ–Ω–∏–º–∞: {e}")
        
        self.connection.commit()
        print(f"üìä –î–æ–±–∞–≤–ª–µ–Ω–æ {added_count} –Ω–æ–≤—ã—Ö —Å–∏–Ω–æ–Ω–∏–º–æ–≤")
        return added_count
    
    def optimize_search_parameters(self):
        """–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –≤–µ–∫—Ç–æ—Ä–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞"""
        print("‚öôÔ∏è –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –≤–µ–∫—Ç–æ—Ä–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞...")
        
        # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –ø–æ–∏—Å–∫–∞
        cursor = self.connection.cursor()
        
        try:
            cursor.execute('''
                CREATE TABLE IF NOT EXISTS search_parameters (
                    id INTEGER PRIMARY KEY AUTOINCREMENT,
                    parameter_name TEXT UNIQUE NOT NULL,
                    parameter_value TEXT NOT NULL,
                    description TEXT,
                    updated_at TEXT NOT NULL
                )
            ''')
            
            # –î–æ–±–∞–≤–ª—è–µ–º –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
            parameters = [
                ('vector_search_threshold', '0.7', '–ü–æ—Ä–æ–≥ —Å—Ö–æ–∂–µ—Å—Ç–∏ –¥–ª—è –≤–µ–∫—Ç–æ—Ä–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞'),
                ('max_search_results', '20', '–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø–æ–∏—Å–∫–∞'),
                ('text_search_threshold', '0.6', '–ü–æ—Ä–æ–≥ —Å—Ö–æ–∂–µ—Å—Ç–∏ –¥–ª—è —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –ø–æ–∏—Å–∫–∞'),
                ('ranking_weights', '{"vector": 0.4, "text": 0.3, "metadata": 0.3}', '–í–µ—Å–∞ –¥–ª—è —Ä–∞–Ω–∂–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤'),
                ('min_content_length', '100', '–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –¥–ª—è –∏–Ω–¥–µ–∫—Å–∞—Ü–∏–∏'),
                ('max_content_length', '50000', '–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –¥–ª—è –∏–Ω–¥–µ–∫—Å–∞—Ü–∏–∏'),
                ('synonym_expansion', 'true', '–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ —Å–∏–Ω–æ–Ω–∏–º–æ–≤'),
                ('fuzzy_search', 'true', '–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –Ω–µ—á–µ—Ç–∫–∏–π –ø–æ–∏—Å–∫'),
                ('category_boost', '1.2', '–ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç —É—Å–∏–ª–µ–Ω–∏—è –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏'),
                ('recent_document_boost', '1.1', '–ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç —É—Å–∏–ª–µ–Ω–∏—è –¥–ª—è –Ω–µ–¥–∞–≤–Ω–∏—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤')
            ]
            
            for param_name, param_value, description in parameters:
                cursor.execute('''
                    INSERT OR REPLACE INTO search_parameters 
                    (parameter_name, parameter_value, description, updated_at)
                    VALUES (?, ?, ?, ?)
                ''', (param_name, param_value, description, datetime.now().isoformat()))
            
            self.connection.commit()
            print(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ {len(parameters)} –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –ø–æ–∏—Å–∫–∞")
            return len(parameters)
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤: {e}")
            return 0
    
    def enhance_metadata(self):
        """–£–ª—É—á—à–µ–Ω–∏–µ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤"""
        print("üìä –£–ª—É—á—à–µ–Ω–∏–µ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤...")
        
        cursor = self.connection.cursor()
        
        try:
            # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ –ø–æ–ª—è –≤ —Ç–∞–±–ª–∏—Ü—É –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
            cursor.execute('''
                ALTER TABLE documents ADD COLUMN tags TEXT DEFAULT '[]'
            ''')
        except:
            pass  # –ü–æ–ª–µ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        
        try:
            cursor.execute('''
                ALTER TABLE documents ADD COLUMN difficulty_level TEXT DEFAULT 'medium'
            ''')
        except:
            pass  # –ü–æ–ª–µ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        
        try:
            cursor.execute('''
                ALTER TABLE documents ADD COLUMN last_updated TEXT DEFAULT ''
            ''')
        except:
            pass  # –ü–æ–ª–µ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
        cursor.execute('SELECT id, category, file_name FROM documents')
        documents = cursor.fetchall()
        
        updated_count = 0
        for doc_id, category, file_name in documents:
            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–µ–≥–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏ –∑–∞–≥–æ–ª–æ–≤–∫–∞
            tags = []
            if 'electrical' in category.lower():
                tags.extend(['—ç–ª–µ–∫—Ç—Ä–æ—Ç–µ—Ö–Ω–∏–∫–∞', '—ç–ª–µ–∫—Ç—Ä–∏–∫–∞', '—ç–Ω–µ—Ä–≥–µ—Ç–∏–∫–∞'])
            if 'programming' in category.lower():
                tags.extend(['–ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ', '–∫–æ–¥', '—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞'])
            if 'controllers' in category.lower():
                tags.extend(['–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä—ã', '–∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è', '–ü–õ–ö'])
            if 'radiomechanics' in category.lower():
                tags.extend(['—Ä–∞–¥–∏–æ—Ç–µ—Ö–Ω–∏–∫–∞', '—Å–≤—è–∑—å', '–∞–Ω—Ç–µ–Ω–Ω—ã'])
            if 'automation' in category.lower():
                tags.extend(['–∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è', '—É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ', '—Å–∏—Å—Ç–µ–º—ã'])
            
            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —É—Ä–æ–≤–µ–Ω—å —Å–ª–æ–∂–Ω–æ—Å—Ç–∏
            difficulty = 'medium'
            if any(word in file_name.lower() for word in ['–±–∞–∑–æ–≤—ã–π', '–æ—Å–Ω–æ–≤—ã', '–≤–≤–µ–¥–µ–Ω–∏–µ']):
                difficulty = 'beginner'
            elif any(word in file_name.lower() for word in ['–ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π', '—Å–ª–æ–∂–Ω—ã–π', '—ç–∫—Å–ø–µ—Ä—Ç–Ω—ã–π']):
                difficulty = 'advanced'
            
            # –û–±–Ω–æ–≤–ª—è–µ–º –¥–æ–∫—É–º–µ–Ω—Ç
            cursor.execute('''
                UPDATE documents 
                SET tags = ?, difficulty_level = ?, last_updated = ?
                WHERE id = ?
            ''', (json.dumps(tags), difficulty, datetime.now().isoformat(), doc_id))
            
            updated_count += 1
        
        self.connection.commit()
        print(f"‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ {updated_count} –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ —Å —É–ª—É—á—à–µ–Ω–Ω—ã–º–∏ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–º–∏")
        return updated_count
    
    def create_update_scheduler(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã —Ä–µ–≥—É–ª—è—Ä–Ω—ã—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π"""
        print("üîÑ –°–æ–∑–¥–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã —Ä–µ–≥—É–ª—è—Ä–Ω—ã—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π...")
        
        cursor = self.connection.cursor()
        
        try:
            # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
            cursor.execute('''
                CREATE TABLE IF NOT EXISTS update_schedule (
                    id INTEGER PRIMARY KEY AUTOINCREMENT,
                    task_name TEXT UNIQUE NOT NULL,
                    last_run TEXT,
                    next_run TEXT,
                    interval_hours INTEGER DEFAULT 24,
                    is_active BOOLEAN DEFAULT 1,
                    description TEXT
                )
            ''')
            
            # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–¥–∞—á–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
            tasks = [
                ('vector_index_update', '–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤–µ–∫—Ç–æ—Ä–Ω—ã—Ö –∏–Ω–¥–µ–∫—Å–æ–≤', 6),
                ('synonym_expansion', '–†–∞—Å—à–∏—Ä–µ–Ω–∏–µ —Å–ª–æ–≤–∞—Ä—è —Å–∏–Ω–æ–Ω–∏–º–æ–≤', 12),
                ('metadata_optimization', '–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö', 24),
                ('search_parameter_tuning', '–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –ø–æ–∏—Å–∫–∞', 48),
                ('document_quality_check', '–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤', 72)
            ]
            
            for task_name, description, interval in tasks:
                cursor.execute('''
                    INSERT OR IGNORE INTO update_schedule 
                    (task_name, description, interval_hours, is_active)
                    VALUES (?, ?, ?, 1)
                ''', (task_name, description, interval))
            
            self.connection.commit()
            print(f"‚úÖ –°–æ–∑–¥–∞–Ω–æ {len(tasks)} –∑–∞–¥–∞—á —Ä–µ–≥—É–ª—è—Ä–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è")
            return len(tasks)
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π: {e}")
            return 0
    
    def run_all_improvements(self):
        """–ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —É–ª—É—á—à–µ–Ω–∏–π"""
        print("üöÄ –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —É–ª—É—á—à–µ–Ω–∏–π —Å–∏—Å—Ç–µ–º—ã Rubin AI...\n")
        
        if not self.connect():
            return False
        
        results = {}
        
        # 1. –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –ø–æ –ü–ò–î-—Ä–µ–≥—É–ª—è—Ç–æ—Ä–∞–º
        results['pid_documents'] = self.add_pid_documents()
        
        # 2. –†–∞—Å—à–∏—Ä–µ–Ω–∏–µ —Å–∏–Ω–æ–Ω–∏–º–æ–≤
        results['synonyms'] = self.expand_synonyms()
        
        # 3. –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –ø–æ–∏—Å–∫–∞
        results['search_params'] = self.optimize_search_parameters()
        
        # 4. –£–ª—É—á—à–µ–Ω–∏–µ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö
        results['metadata'] = self.enhance_metadata()
        
        # 5. –°–æ–∑–¥–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
        results['scheduler'] = self.create_update_scheduler()
        
        self.close()
        
        # –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç
        print("\n" + "="*50)
        print("üìä –ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢ –ü–û –£–õ–£–ß–®–ï–ù–ò–Ø–ú")
        print("="*50)
        print(f"üìÑ –î–æ–∫—É–º–µ–Ω—Ç–æ–≤ –ø–æ –ü–ò–î-—Ä–µ–≥—É–ª—è—Ç–æ—Ä–∞–º: {results['pid_documents']}")
        print(f"üîç –ù–æ–≤—ã—Ö —Å–∏–Ω–æ–Ω–∏–º–æ–≤: {results['synonyms']}")
        print(f"‚öôÔ∏è –ü–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –ø–æ–∏—Å–∫–∞: {results['search_params']}")
        print(f"üìä –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö: {results['metadata']}")
        print(f"üîÑ –ó–∞–¥–∞—á –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: {results['scheduler']}")
        
        total_improvements = sum(results.values())
        print(f"\n‚úÖ –í—Å–µ–≥–æ —É–ª—É—á—à–µ–Ω–∏–π: {total_improvements}")
        
        return results

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    improver = RubinAIImprover()
    results = improver.run_all_improvements()
    
    if results:
        print("\nüéâ –í—Å–µ —É–ª—É—á—à–µ–Ω–∏—è —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã!")
        print("üîÑ –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–∏—Å—Ç–µ–º—É –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π")
    else:
        print("\n‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∏ –æ—à–∏–±–∫–∏ –ø—Ä–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–∏ —É–ª—É—á—à–µ–Ω–∏–π")

if __name__ == "__main__":
    main()
