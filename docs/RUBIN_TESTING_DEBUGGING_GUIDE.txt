РУКОВОДСТВО ПО ТЕСТИРОВАНИЮ И ОТЛАДКЕ RUBIN IDE
=================================================

ПОШАГОВОЕ ТЕСТИРОВАНИЕ СИСТЕМЫ
===============================

┌─────────────────────────────────────────────────────────────────────────────────────────────────┐
│                                    ЭТАП 1: ПОДГОТОВКА К ТЕСТИРОВАНИЮ                          │
├─────────────────────────────────────────────────────────────────────────────────────────────────┤
│  🔧 ПРОВЕРКА СИСТЕМНЫХ ТРЕБОВАНИЙ:                                                            │
│  1. Операционная система:                                                                     │
│     • Windows 10/11 (64-bit)                                                                  │
│     • Проверка: winver в командной строке                                                     │
│                                                                                               │
│  2. Ресурсы системы:                                                                          │
│     • RAM: минимум 8 ГБ (рекомендуется 16 ГБ)                                               │
│     • Проверка: taskmgr → Performance → Memory                                               │
│     • CPU: Intel i5 или AMD Ryzen 5                                                          │
│     • Проверка: taskmgr → Performance → CPU                                                  │
│                                                                                               │
│  3. Свободное место на диске:                                                                 │
│     • Минимум 10 ГБ                                                                           │
│     • Проверка: Проводник → Свойства диска                                                   │
│                                                                                               │
│  4. Сетевое подключение:                                                                      │
│     • Локальная сеть для PMAC контроллеров                                                    │
│     • Интернет для AI провайдеров                                                             │
│     • Проверка: ping google.com                                                               │
│                                                                                               │
│  🔌 ПРОВЕРКА PMAC КОНТРОЛЛЕРОВ:                                                               │
│  1. Физическое подключение:                                                                   │
│     • COM порт: проверка в Device Manager                                                    │
│     • Ethernet: проверка сетевого подключения                                                │
│     • PCI: проверка в Device Manager                                                          │
│                                                                                               │
│  2. Тест подключения:                                                                         │
│     • Отправка команды "?" для получения статуса                                             │
│     • Проверка ответа контроллера                                                             │
│     • Тест простой команды (например, "I" для информации)                                    │
│                                                                                               │
│  🌐 ПРОВЕРКА СЕТЕВЫХ ПОРТОВ:                                                                  │
│  1. Проверка доступности портов:                                                              │
│     • netstat -an | findstr :8083                                                            │
│     • netstat -an | findstr :8086                                                            │
│     • netstat -an | findstr :8087                                                            │
│     • netstat -an | findstr :8089                                                            │
│     • netstat -an | findstr :8090                                                            │
│     • netstat -an | findstr :8093                                                            │
│     • netstat -an | findstr :8094                                                            │
│     • netstat -an | findstr :8096                                                            │
│                                                                                               │
│  2. Проверка Qdrant:                                                                          │
│     • netstat -an | findstr :6333                                                            │
│     • curl http://localhost:6333/collections                                                 │
└─────────────────────────────────────────────────────────────────────────────────────────────────┘

┌─────────────────────────────────────────────────────────────────────────────────────────────────┐
│                                    ЭТАП 2: ЗАПУСК СИСТЕМЫ                                    │
├─────────────────────────────────────────────────────────────────────────────────────────────────┤
│  🚀 АВТОМАТИЧЕСКИЙ ЗАПУСК:                                                                    │
│  1. Запуск через batch файл:                                                                  │
│     • Двойной клик на start_rubin_complete_system.bat                                        │
│     • Ожидание появления окна консоли                                                        │
│     • Проверка сообщений о запуске компонентов                                               │
│                                                                                               │
│  2. Проверка запуска C++ ядра:                                                               │
│     • Появление окна RubinEngine_Simple.exe                                                  │
│     • Сообщения о инициализации системы                                                      │
│     • Отсутствие ошибок в консоли                                                            │
│                                                                                               │
│  3. Проверка запуска Python API:                                                             │
│     • Сообщения о запуске серверов на портах 8083-8096                                      │
│     • Отсутствие ошибок импорта                                                              │
│     • Успешное подключение к базам данных                                                    │
│                                                                                               │
│  🔧 РУЧНОЙ ЗАПУСК:                                                                            │
│  1. Запуск C++ ядра:                                                                          │
│     • Открыть командную строку                                                               │
│     • Перейти в папку проекта: cd "C:\Users\elekt\OneDrive\Desktop\рабочая лошадка"         │
│     • Запустить: RubinEngine_Simple.exe                                                      │
│     • Проверить отсутствие ошибок                                                            │
│                                                                                               │
│  2. Запуск Python API:                                                                        │
│     • Открыть новую командную строку                                                         │
│     • Перейти в папку проекта                                                                │
│     • Запустить: python start_rubin_servers.py                                               │
│     • Проверить запуск всех серверов                                                         │
│                                                                                               │
│  3. Открытие веб-интерфейса:                                                                  │
│     • Открыть браузер                                                                         │
│     • Перейти к файлу: file:///C:/Users/elekt/OneDrive/Desktop/рабочая%20лошадка/RubinIDE.html│
│     • Проверить загрузку интерфейса                                                          │
└─────────────────────────────────────────────────────────────────────────────────────────────────┘

┌─────────────────────────────────────────────────────────────────────────────────────────────────┐
│                                    ЭТАП 3: БАЗОВОЕ ТЕСТИРОВАНИЕ                              │
├─────────────────────────────────────────────────────────────────────────────────────────────────┤
│  🌐 ТЕСТ ВЕБ-ИНТЕРФЕЙСА:                                                                      │
│  1. Проверка загрузки страницы:                                                               │
│     • Открыть RubinIDE.html в браузере                                                       │
│     • Проверить загрузку всех элементов                                                      │
│     • Проверить отсутствие ошибок JavaScript                                                 │
│     • Проверить подключение к API серверам                                                   │
│                                                                                               │
│  2. Тест навигации:                                                                           │
│     • Переключение между вкладками                                                           │
│     • Открытие различных панелей                                                             │
│     • Проверка отзывчивости интерфейса                                                       │
│                                                                                               │
│  3. Тест базовых функций:                                                                     │
│     • Открытие файла                                                                          │
│     • Сохранение файла                                                                        │
│     • Копирование/вставка текста                                                             │
│                                                                                               │
│  🔌 ТЕСТ API СЕРВЕРОВ:                                                                        │
│  1. Тест основного API (порт 8083):                                                          │
│     • curl -X GET http://localhost:8083/api/health                                           │
│     • Ожидаемый ответ: {"status": "ok", "timestamp": "..."}                                 │
│                                                                                               │
│  2. Тест AI Chat API (порт 8086):                                                            │
│     • curl -X GET http://localhost:8086/api/chat/status                                      │
│     • Ожидаемый ответ: {"status": "ready", "providers": [...]}                              │
│                                                                                               │
│  3. Тест Electrical API (порт 8087):                                                         │
│     • curl -X GET http://localhost:8087/api/electrical/status                                │
│     • Ожидаемый ответ: {"status": "ready", "calculations": [...]}                           │
│                                                                                               │
│  4. Тест Radiomechanics API (порт 8089):                                                     │
│     • curl -X GET http://localhost:8089/api/radiomechanics/status                            │
│     • Ожидаемый ответ: {"status": "ready", "antennas": [...]}                               │
│                                                                                               │
│  5. Тест Controllers API (порт 8090):                                                        │
│     • curl -X GET http://localhost:8090/api/controllers/status                               │
│     • Ожидаемый ответ: {"status": "ready", "controllers": [...]}                            │
│                                                                                               │
│  6. Тест Diagnostics API (порт 8093):                                                        │
│     • curl -X GET http://localhost:8093/api/diagnostics/status                               │
│     • Ожидаемый ответ: {"status": "ready", "monitoring": [...]}                             │
│                                                                                               │
│  7. Тест YandexDisk API (порт 8094):                                                         │
│     • curl -X GET http://localhost:8094/api/yandex/status                                    │
│     • Ожидаемый ответ: {"status": "ready", "sync": [...]}                                   │
│                                                                                               │
│  8. Тест Context API (порт 8096):                                                            │
│     • curl -X GET http://localhost:8096/api/context/status                                   │
│     • Ожидаемый ответ: {"status": "ready", "contexts": [...]}                               │
└─────────────────────────────────────────────────────────────────────────────────────────────────┘

┌─────────────────────────────────────────────────────────────────────────────────────────────────┐
│                                    ЭТАП 4: ФУНКЦИОНАЛЬНОЕ ТЕСТИРОВАНИЕ                       │
├─────────────────────────────────────────────────────────────────────────────────────────────────┤
│  💬 ТЕСТ ЧАТ-БОТА:                                                                            │
│  1. Базовый тест:                                                                             │
│     • Открыть test_chat.html                                                                  │
│     • Ввести сообщение: "Привет, как дела?"                                                  │
│     • Нажать Enter или кнопку отправки                                                       │
│     • Проверить получение ответа в течение 10 секунд                                         │
│     • Проверить корректность ответа                                                           │
│                                                                                               │
│  2. Тест различных доменов:                                                                   │
│     • Программирование: "Как написать цикл for в C++?"                                       │
│     • Электротехника: "Как рассчитать сопротивление цепи?"                                   │
│     • Радиомеханика: "Как рассчитать длину антенны?"                                         │
│     • Общий: "Что такое PMAC контроллер?"                                                    │
│                                                                                               │
│  3. Тест контекста:                                                                           │
│     • Отправить несколько связанных сообщений                                                │
│     • Проверить сохранение контекста                                                          │
│     • Проверить ссылки на предыдущие сообщения                                               │
│                                                                                               │
│  4. Тест обработки ошибок:                                                                    │
│     • Отправить пустое сообщение                                                              │
│     • Отправить очень длинное сообщение                                                       │
│     • Отправить сообщение с специальными символами                                           │
│     • Проверить корректную обработку ошибок                                                  │
│                                                                                               │
│  🏭 ТЕСТ PMAC КОНТРОЛЛЕРОВ:                                                                   │
│  1. Тест подключения:                                                                         │
│     • Отправить команду статуса: "?"                                                          │
│     • Проверить получение ответа                                                              │
│     • Проверить корректность формата ответа                                                  │
│                                                                                               │
│  2. Тест простых команд:                                                                      │
│     • Команда информации: "I"                                                                 │
│     • Команда версии: "V"                                                                     │
│     • Команда времени: "T"                                                                    │
│     • Проверить получение ответов                                                            │
│                                                                                               │
│  3. Тест управления осями:                                                                    │
│     • Команда включения оси: "&1A"                                                            │
│     • Команда выключения оси: "&1D"                                                          │
│     • Команда статуса оси: "&1?"                                                              │
│     • Проверить выполнение команд                                                            │
│                                                                                               │
│  4. Тест мониторинга:                                                                         │
│     • Запустить мониторинг параметров                                                        │
│     • Проверить получение данных каждые 100-500мс                                           │
│     • Проверить отображение в веб-интерфейсе                                                 │
│                                                                                               │
│  📊 ТЕСТ БАЗЫ ЗНАНИЙ:                                                                         │
│  1. Тест поиска:                                                                              │
│     • Ввести поисковый запрос: "PMAC"                                                        │
│     • Проверить возврат релевантных результатов                                               │
│     • Проверить ранжирование результатов                                                     │
│                                                                                               │
│  2. Тест добавления документа:                                                                │
│     • Загрузить тестовый файл (PDF, DOCX, TXT)                                              │
│     • Проверить обработку файла                                                              │
│     • Проверить добавление в базу знаний                                                     │
│     • Проверить возможность поиска по новому документу                                       │
│                                                                                               │
│  3. Тест категоризации:                                                                       │
│     • Загрузить документы разных типов                                                       │
│     • Проверить автоматическую категоризацию                                                 │
│     • Проверить корректность категорий                                                       │
│                                                                                               │
│  📁 ТЕСТ YANDEX DISK:                                                                         │
│  1. Тест синхронизации:                                                                       │
│     • Добавить тестовый файл в папку YandexDisk                                             │
│     • Запустить ручную синхронизацию                                                         │
│     • Проверить обработку файла                                                              │
│     • Проверить добавление в базу знаний                                                     │
│                                                                                               │
│  2. Тест мониторинга:                                                                         │
│     • Открыть yandex_disk_web.html                                                           │
│     • Проверить отображение статистики                                                       │
│     • Проверить список обработанных файлов                                                   │
│     • Проверить статус синхронизации                                                         │
└─────────────────────────────────────────────────────────────────────────────────────────────────┘

┌─────────────────────────────────────────────────────────────────────────────────────────────────┐
│                                    ЭТАП 5: ТЕСТИРОВАНИЕ ОШИБОК                               │
├─────────────────────────────────────────────────────────────────────────────────────────────────┤
│  🚨 ТЕСТ НЕДОСТУПНОСТИ API:                                                                   │
│  1. Остановка одного API сервера:                                                             │
│     • Найти процесс Python с нужным портом                                                   │
│     • Завершить процесс: taskkill /PID <pid> /F                                              │
│     • Проверить обработку ошибки в веб-интерфейсе                                            │
│     • Проверить fallback механизм                                                            │
│                                                                                               │
│  2. Тест восстановления:                                                                      │
│     • Перезапустить остановленный сервер                                                     │
│     • Проверить автоматическое восстановление соединения                                     │
│     • Проверить возобновление работы функций                                                 │
│                                                                                               │
│  🌐 ТЕСТ НЕДОСТУПНОСТИ AI ПРОВАЙДЕРА:                                                        │
│  1. Отключение интернета:                                                                     │
│     • Отключить сетевой адаптер                                                              │
│     • Проверить fallback на локальный Ollama                                                 │
│     • Проверить обработку ошибок в чате                                                      │
│                                                                                               │
│  2. Тест восстановления:                                                                      │
│     • Включить сетевой адаптер                                                               │
│     • Проверить восстановление соединения с AI провайдерами                                  │
│     • Проверить возобновление работы чата                                                    │
│                                                                                               │
│  🔌 ТЕСТ НЕДОСТУПНОСТИ PMAC КОНТРОЛЛЕРА:                                                     │
│  1. Отключение контроллера:                                                                   │
│     • Физически отключить контроллер                                                          │
│     • Проверить обработку ошибки в системе                                                   │
│     • Проверить уведомления пользователя                                                     │
│                                                                                               │
│  2. Тест переподключения:                                                                     │
│     • Подключить контроллер обратно                                                          │
│     • Проверить автоматическое переподключение                                               │
│     • Проверить возобновление мониторинга                                                    │
│                                                                                               │
│  💾 ТЕСТ НЕДОСТУПНОСТИ БАЗЫ ДАННЫХ:                                                          │
│  1. Остановка SQLite:                                                                         │
│     • Переименовать файл базы данных                                                         │
│     • Проверить обработку ошибки                                                             │
│     • Проверить fallback механизм                                                            │
│                                                                                               │
│  2. Остановка Qdrant:                                                                         │
│     • Остановить Qdrant сервер                                                               │
│     • Проверить обработку ошибки поиска                                                      │
│     • Проверить fallback на SQLite                                                           │
│                                                                                               │
│  3. Тест восстановления:                                                                      │
│     • Восстановить файл базы данных                                                          │
│     • Запустить Qdrant сервер                                                                │
│     • Проверить восстановление функций                                                       │
└─────────────────────────────────────────────────────────────────────────────────────────────────┘

ОТЛАДКА И УСТРАНЕНИЕ НЕПОЛАДОК
===============================

┌─────────────────────────────────────────────────────────────────────────────────────────────────┐
│                                    ОТЛАДКА C++ ЯДРА                                          │
├─────────────────────────────────────────────────────────────────────────────────────────────────┤
│  📝 ПРОСМОТР ЛОГОВ:                                                                           │
│  1. Основные логи:                                                                            │
│     • tail -f rubin_engine.log                                                                │
│     • Поиск ошибок: grep "ERROR" rubin_engine.log                                            │
│     • Поиск предупреждений: grep "WARN" rubin_engine.log                                     │
│     • Поиск информации: grep "INFO" rubin_engine.log                                         │
│                                                                                               │
│  2. Анализ производительности:                                                                │
│     • Поиск медленных операций: grep "PERF" rubin_engine.log                                 │
│     • Анализ времени выполнения: grep "TIME" rubin_engine.log                                │
│     • Поиск утечек памяти: grep "MEMORY" rubin_engine.log                                    │
│                                                                                               │
│  3. Анализ PMAC операций:                                                                     │
│     • Поиск PMAC команд: grep "PMAC" rubin_engine.log                                        │
│     • Поиск ошибок PMAC: grep "PMAC_ERROR" rubin_engine.log                                  │
│     • Анализ времени ответа: grep "PMAC_TIME" rubin_engine.log                               │
│                                                                                               │
│  🔧 ОТЛАДКА PMAC ПОДКЛЮЧЕНИЯ:                                                                │
│  1. Проверка COM портов:                                                                      │
│     • Открыть Device Manager                                                                  │
│     • Найти раздел "Ports (COM & LPT)"                                                       │
│     • Проверить наличие нужного порта                                                        │
│     • Проверить отсутствие конфликтов                                                        │
│                                                                                               │
│  2. Тест соединения:                                                                          │
│     • Использовать PuTTY для подключения к COM порту                                         │
│     • Отправить команду "?"                                                                   │
│     • Проверить получение ответа                                                             │
│     • Проверить настройки порта (скорость, биты данных, стоп-биты)                          │
│                                                                                               │
│  3. Отладка таймаутов:                                                                        │
│     • Проверить настройки таймаутов в конфигурации                                           │
│     • Увеличить таймаут при необходимости                                                    │
│     • Проверить стабильность соединения                                                      │
│                                                                                               │
│  💾 ОТЛАДКА БАЗЫ ДАННЫХ:                                                                      │
│  1. Проверка SQLite:                                                                          │
│     • sqlite3 rubin_knowledge_base.db                                                        │
│     • .tables - показать все таблицы                                                         │
│     • .schema - показать структуру таблиц                                                    │
│     • SELECT COUNT(*) FROM documents; - проверить количество документов                      │
│                                                                                               │
│  2. Проверка Qdrant:                                                                          │
│     • curl http://localhost:6333/collections                                                 │
│     • curl http://localhost:6333/collections/knowledge_base                                  │
│     • curl http://localhost:6333/collections/knowledge_base/points/count                     │
│                                                                                               │
│  3. Тест поиска:                                                                              │
│     • Отправить тестовый запрос через API                                                    │
│     • Проверить логи поиска                                                                   │
│     • Проверить время выполнения                                                             │
└─────────────────────────────────────────────────────────────────────────────────────────────────┘

┌─────────────────────────────────────────────────────────────────────────────────────────────────┐
│                                    ОТЛАДКА PYTHON API                                        │
├─────────────────────────────────────────────────────────────────────────────────────────────────┤
│  📝 ПРОСМОТР ЛОГОВ:                                                                           │
│  1. Основные логи:                                                                            │
│     • tail -f rubin_api.log                                                                   │
│     • Поиск ошибок: grep "ERROR" rubin_api.log                                               │
│     • Поиск предупреждений: grep "WARN" rubin_api.log                                        │
│     • Поиск информации: grep "INFO" rubin_api.log                                            │
│                                                                                               │
│  2. Анализ HTTP запросов:                                                                     │
│     • Поиск запросов: grep "REQUEST" rubin_api.log                                           │
│     • Поиск ответов: grep "RESPONSE" rubin_api.log                                           │
│     • Анализ времени выполнения: grep "TIME" rubin_api.log                                   │
│                                                                                               │
│  3. Анализ AI операций:                                                                       │
│     • Поиск AI запросов: grep "AI" rubin_api.log                                             │
│     • Поиск ошибок AI: grep "AI_ERROR" rubin_api.log                                         │
│     • Анализ времени ответа: grep "AI_TIME" rubin_api.log                                    │
│                                                                                               │
│  🔧 ОТЛАДКА HTTP ЗАПРОСОВ:                                                                    │
│  1. Использование Postman:                                                                    │
│     • Создать коллекцию для тестирования API                                                 │
│     • Добавить запросы для всех endpoints                                                    │
│     • Проверить заголовки и тело запроса                                                     │
│     • Анализировать ответы сервера                                                           │
│                                                                                               │
│  2. Использование curl:                                                                       │
│     • curl -X GET http://localhost:8083/api/health -v                                        │
│     • curl -X POST http://localhost:8086/api/chat -H "Content-Type: application/json" -d '{"message":"test"}' -v│
│     • Анализ заголовков ответа                                                               │
│                                                                                               │
│  3. Отладка ошибок:                                                                           │
│     • Проверка кодов ошибок HTTP                                                             │
│     • Анализ тела ответа с ошибкой                                                           │
│     • Проверка валидации входных данных                                                      │
│                                                                                               │
│  🤖 ОТЛАДКА AI ИНТЕГРАЦИИ:                                                                    │
│  1. Проверка API ключей:                                                                      │
│     • Проверить наличие ключей в конфигурации                                                │
│     • Проверить валидность ключей                                                            │
│     • Проверить лимиты использования                                                         │
│                                                                                               │
│  2. Тест подключения к провайдерам:                                                          │
│     • Отправить тестовый запрос к OpenRouter                                                 │
│     • Проверить ответ провайдера                                                             │
│     • Проверить время ответа                                                                 │
│                                                                                               │
│  3. Отладка fallback:                                                                         │
│     • Симулировать недоступность основного провайдера                                        │
│     • Проверить переключение на альтернативный                                               │
│     • Проверить качество ответов                                                             │
└─────────────────────────────────────────────────────────────────────────────────────────────────┘

┌─────────────────────────────────────────────────────────────────────────────────────────────────┐
│                                    ОТЛАДКА ВЕБ-ИНТЕРФЕЙСА                                    │
├─────────────────────────────────────────────────────────────────────────────────────────────────┤
│  🔧 ИСПОЛЬЗОВАНИЕ DEVELOPER TOOLS:                                                            │
│  1. Открытие инструментов:                                                                    │
│     • F12 для открытия Developer Tools                                                        │
│     • Или правый клик → Inspect Element                                                      │
│     • Или Ctrl+Shift+I                                                                        │
│                                                                                               │
│  2. Вкладка Console:                                                                          │
│     • Просмотр ошибок JavaScript                                                              │
│     • Выполнение команд JavaScript                                                            │
│     • Отладка кода                                                                            │
│                                                                                               │
│  3. Вкладка Network:                                                                          │
│     • Просмотр HTTP запросов                                                                  │
│     • Анализ времени выполнения                                                               │
│     • Проверка статусов ответов                                                               │
│                                                                                               │
│  4. Вкладка Elements:                                                                         │
│     • Просмотр DOM структуры                                                                  │
│     • Редактирование HTML/CSS                                                                 │
│     • Отладка стилей                                                                          │
│                                                                                               │
│  🌐 ОТЛАДКА AJAX ЗАПРОСОВ:                                                                    │
│  1. Проверка URL и параметров:                                                                │
│     • Проверить правильность URL                                                              │
│     • Проверить параметры запроса                                                             │
│     • Проверить заголовки                                                                     │
│                                                                                               │
│  2. Анализ ответов сервера:                                                                   │
│     • Проверить статус код ответа                                                             │
│     • Проверить тело ответа                                                                   │
│     • Проверить заголовки ответа                                                              │
│                                                                                               │
│  3. Отладка обработки ошибок:                                                                 │
│     • Проверить обработку HTTP ошибок                                                        │
│     • Проверить обработку JSON ошибок                                                        │
│     • Проверить отображение ошибок пользователю                                              │
│                                                                                               │
│  🎨 ОТЛАДКА ОТОБРАЖЕНИЯ:                                                                      │
│  1. Проверка CSS стилей:                                                                      │
│     • Проверить загрузку CSS файлов                                                          │
│     • Проверить применение стилей                                                            │
│     • Проверить конфликты стилей                                                             │
│                                                                                               │
│  2. Анализ DOM структуры:                                                                     │
│     • Проверить правильность HTML                                                             │
│     • Проверить вложенность элементов                                                        │
│     • Проверить атрибуты элементов                                                            │
│                                                                                               │
│  3. Тест на разных браузерах:                                                                 │
│     • Chrome: полная поддержка                                                                │
│     • Firefox: полная поддержка                                                               │
│     • Edge: полная поддержка                                                                  │
│     • Safari: частичная поддержка                                                             │
└─────────────────────────────────────────────────────────────────────────────────────────────────┘

АВТОМАТИЗАЦИЯ ТЕСТИРОВАНИЯ
===========================

┌─────────────────────────────────────────────────────────────────────────────────────────────────┐
│                                    АВТОМАТИЧЕСКИЕ ТЕСТЫ                                      │
├─────────────────────────────────────────────────────────────────────────────────────────────────┤
│  🤖 СКРИПТЫ ТЕСТИРОВАНИЯ:                                                                    │
│  1. test_system_startup.py:                                                                   │
│     • Проверка запуска всех компонентов                                                       │
│     • Проверка доступности API                                                                │
│     • Проверка подключения к базам данных                                                     │
│     • Генерация отчета о статусе                                                              │
│                                                                                               │
│  2. test_api_endpoints.py:                                                                    │
│     • Тестирование всех API endpoints                                                         │
│     • Проверка корректности ответов                                                           │
│     • Проверка времени выполнения                                                             │
│     • Генерация отчета о производительности                                                  │
│                                                                                               │
│  3. test_pmac_controllers.py:                                                                 │
│     • Тестирование подключения к PMAC контроллерам                                           │
│     • Проверка выполнения команд                                                             │
│     • Проверка получения данных                                                              │
│     • Генерация отчета о состоянии                                                            │
│                                                                                               │
│  4. test_ai_integration.py:                                                                   │
│     • Тестирование AI провайдеров                                                            │
│     • Проверка качества ответов                                                              │
│     • Проверка fallback механизма                                                            │
│     • Генерация отчета о производительности                                                  │
│                                                                                               │
│  📊 МОНИТОРИНГ ПРОИЗВОДИТЕЛЬНОСТИ:                                                           │
│  1. Системные метрики:                                                                        │
│     • CPU, RAM, диск, сеть                                                                    │
│     • Время отклика API                                                                       │
│     • Количество активных соединений                                                          │
│     • Количество ошибок                                                                       │
│                                                                                               │
│  2. Метрики приложения:                                                                       │
│     • Время выполнения запросов                                                               │
│     • Количество обработанных запросов                                                        │
│     • Количество ошибок                                                                       │
│     • Использование ресурсов                                                                  │
│                                                                                               │
│  3. Метрики PMAC:                                                                             │
│     • Состояние контроллеров                                                                  │
│     • Время выполнения команд                                                                 │
│     • Количество ошибок                                                                       │
│     • Данные с датчиков                                                                       │
│                                                                                               │
│  📈 ОТЧЕТЫ И АНАЛИЗ:                                                                          │
│  1. Ежедневные отчеты:                                                                        │
│     • Статус системы                                                                          │
│     • Производительность                                                                      │
│     • Количество ошибок                                                                       │
│     • Рекомендации по улучшению                                                               │
│                                                                                               │
│  2. Еженедельные отчеты:                                                                      │
│     • Тренды производительности                                                               │
│     • Анализ ошибок                                                                           │
│     • Рекомендации по оптимизации                                                             │
│     • Планы развития                                                                          │
│                                                                                               │
│  3. Ежемесячные отчеты:                                                                       │
│     • Общая статистика                                                                        │
│     • Анализ использования                                                                    │
│     • Планы модернизации                                                                      │
│     • Бюджет и ресурсы                                                                        │
└─────────────────────────────────────────────────────────────────────────────────────────────────┘

Дата создания: 10.09.2025
Версия: Rubin IDE v1 "Ломовая лошадка"
Тип: Руководство по тестированию и отладке
